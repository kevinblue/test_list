<?xml version="1.0" encoding="UTF-8"?>

<table-root 
  xmlns="http://www.tracywindy.org/table" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.tracywindy.org/table http://www.tracywindy.org/table/table-1.0.xsd">
  <table>
    <data>
    <alldb>
      <table_sql> 
	        <![CDATA[
	          SELECT * FROM(
			          SELECT
			                      WII.JBPM4_DEPLOYMENT_DBID_                  AS DEPLOYID,
			                      WII.WORKFLOW_NAME_                          AS WORKFLOWNAME,
			                      HP.ID_                                      AS PROCESSINSTANCEID,
			                      TO_CHAR(HAC.START_,'YYYY-MM-DD HH24:MI:SS')  AS PROCESSSTART,
			                      TO_CHAR(HAC.END_,'YYYY-MM-DD HH24:MI:SS')  AS PROCESSEND,
			                      WIU.TASKTYPE                                AS PROCESSINSTANCETYPE,
			                      MAX(HAC.HTASK_)                             AS TASKID,
			                      MAX(HAC.HTASK_||WII.HISTORY_ACTIVITY_NAME_) AS TASKNAME,
			                      NVL(WII.KEY_THREE_,WII.KEY_ONE_)            AS SERIALNO,
			                      WII.KEY_TWO_                                AS PROJECTNAME
			                      
							      FROM(
			                            --待办任务和任务指派以及委托任务
			                            SELECT 
			                               ID_,
			                               JBPMWORKFLOWHISTORYINFO_ID_, 
			                               CASE 
			                                  WHEN ASSIGNED_ACTOR_USER_ID_ IS NOT NULL    THEN 'ASSIGNMENTCOMPLETED' 
			                                  WHEN (ACTUAL_ACTOR_USER_ID_  IS NOT NULL AND ACTUAL_ACTOR_USER_ID_ != PLAN_ACTOR_USER_ID_)   THEN 'DELEGATE'
			                                  WHEN END_TIME_   IS NOT NULL    THEN 'PENDING'
			                               END  AS TASKTYPE
			                            FROM T_JBPM_WORKFLOW_INFOS_USERS 
			                            WHERE 
			                            ( END_TIME_ IS NOT NULL OR ASSIGNED_ACTOR_USER_ID_ IS NOT NULL )
			                            /~USERID: AND (PLAN_ACTOR_USER_ID_ = '{USERID}' OR ASSIGNED_ACTOR_USER_ID_='{USERID}')~/ 
			                            --会签任务
			                            UNION ALL
			                            SELECT  
			                              ID_,
			                              JBPMWORKFLOWHISTORYINFO_ID_, 
			                              'SIGNATURE'
			                            FROM T_JBPM_SIGNATURE_USERS  
			                            WHERE END_TIME_ IS NOT NULL 
			                            /~USERID: AND SIGNATURED_ACTOR_USER_ID_ = '{USERID}'~/
			                            --传阅任务
			                            UNION ALL
			                            SELECT 
			                              ID_,
			                              JBPMWORKFLOWHISTORYINFO_ID_, 
			                              'READ' 
			                            FROM T_JBPM_READ_USERS  
			                            WHERE END_TIME_ IS NOT NULL 
			                             /~USERID:  AND READED_ACTOR_USER_ID_ = '{USERID}'~/   
			                 )WIU
			                 INNER JOIN(
			                  SELECT 
				                   ID_,KEY_ONE_,KEY_TWO_,KEY_THREE_,KEY_FOUR_,KEY_FIVE_,KEY_SIX_,KEY_SEVEN_,
							       KEY_EIGHT_,KEY_NINE_,KEY_TEN_,PROCESS_FORM_PATH_,PROCESS_FORM_TITLE_,
							       WORKFLOW_NAME_,WORKFLOW_DISPLAY_NAME_,DRAFT_UUID_,PROCESSINSTANCE_STATE_,
							       PROCESSDEFINITION_ID_,REQUEST_INITIATOR_,REQUEST_INITIATOR_REAL_NAME_,
							       FROM_BUTTONTEXT_TO_COME_,JBPM4_HIST_ACTINST_DBID_,PREV_JBPM4_HIST_ACTINST_DBID_,
							       JBPM4_HIST_PROCINST_DBID_,JBPM4_DEPLOYMENT_DBID_,
							       REQUEST_INITIATOR_ID_,ACTIVITY_DETAIL_ID_,JBPM4_HIST_ACTINST_LAST_DBID_ ,HISTORY_ACTIVITY_NAME_ 
			                  FROM T_JBPM_WORKFLOW_INFO WHERE JBPM4_HIST_ACTINST_DBID_ IS NOT NULL 
			                   /~PROCESSINSTANCESTATE: AND PROCESSINSTANCE_STATE_!='{PROCESSINSTANCESTATE}' ~/
			                   /~deployedIds: AND JBPM4_DEPLOYMENT_DBID_ IN({deployedIds})~/
			                 )WII ON WII.ID_ = WIU.JBPMWORKFLOWHISTORYINFO_ID_
			                 /*LEFT JOIN T_JBPM_ACTIVITY_DETAIL TJAD ON TJAD.ID_ = WII.ACTIVITY_DETAIL_ID_*/
			                 LEFT JOIN(
			                  SELECT 
								DBID_, CLASS_, DBVERSION_, HPROCI_, TYPE_, 
								EXECUTION_, ACTIVITY_NAME_, START_, END_, 
								DURATION_, TRANSITION_, NEXTIDX_, HTASK_, 
								PROCI_HISTORY_INFO_ID_, ACTIVED_PROCI_HISTORY_INFO_ID_, 
								TASK_HISTORY_INFO_ID_, FIRSTED_HISTORY_INFO_ID_
			                  FROM JBPM4_HIST_ACTINST 
			                 )HAC ON HAC.DBID_ = WII.JBPM4_HIST_ACTINST_DBID_
			                 LEFT JOIN(
			                  SELECT 
			                    DBID_, DBVERSION_, ID_, PROCDEFID_, KEY_, START_, END_, 
				                DURATION_, STATE_, ENDACTIVITY_, NEXTIDX_ 
			                  FROM JBPM4_HIST_PROCINST 
			                 )HP ON HAC.HPROCI_ = HP.DBID_
			                 GROUP BY WII.JBPM4_DEPLOYMENT_DBID_ ,WII.WORKFLOW_NAME_,HP.ID_,HAC.START_,HAC.END_,WIU.TASKTYPE,WII.KEY_ONE_,WII.KEY_TWO_,WII.KEY_THREE_
			                 ORDER BY HAC.END_ DESC
			      )TTTT 
			      WHERE 1=1
			      /~globalQueryText: 
			           AND( 
				             UPPER(TTTT.TASKNAME)     LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.WORKFLOWNAME) LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.SERIALNO )    LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.PROJECTNAME ) LIKE '%{globalQueryText}%' 
				       )
				  ~/
			 ]]> 
	  </table_sql>
	  </alldb>
	  <sqlserver>
	    <table_sql>
	    	 <![CDATA[
	           	          SELECT * FROM(
			          SELECT 
			                      WII.JBPM4_DEPLOYMENT_DBID_                  AS DEPLOYID,
			                      WII.WORKFLOW_NAME_                          AS WORKFLOWNAME,
			                      HP.ID_                                      AS PROCESSINSTANCEID,
			                      CONVERT(varchar(100), HAC.START_,20)  AS PROCESSSTART,
			                      CONVERT(varchar(100),HAC.END_,20)  AS PROCESSEND,
			                      WIU.TASKTYPE                                AS PROCESSINSTANCETYPE,
			                      MAX(HAC.HTASK_)                             AS TASKID,
			                      MAX(convert(varchar(50),HAC.HTASK_)+WII.HISTORY_ACTIVITY_NAME_) AS TASKNAME,
			                      NVL(WII.KEY_THREE_,WII.KEY_ONE_)            AS SERIALNO,
			                      WII.KEY_TWO_                                AS PROJECTNAME
							      FROM(
			                            --待办任务和任务指派以及委托任务
			                            SELECT 
			                               ID_,
			                               JBPMWORKFLOWHISTORYINFO_ID_, 
			                               CASE 
			                                  WHEN ASSIGNED_ACTOR_USER_ID_ IS NOT NULL    THEN 'ASSIGNMENTCOMPLETED' 
			                                  WHEN (ACTUAL_ACTOR_USER_ID_  IS NOT NULL AND ACTUAL_ACTOR_USER_ID_ != PLAN_ACTOR_USER_ID_)   THEN 'DELEGATE'
			                                  WHEN END_TIME_   IS NOT NULL    THEN 'PENDING'
			                               END  AS TASKTYPE
			                            FROM T_JBPM_WORKFLOW_INFOS_USERS 
			                            WHERE 
			                            ( END_TIME_ IS NOT NULL OR ASSIGNED_ACTOR_USER_ID_ IS NOT NULL )
			                            /~USERID: AND (PLAN_ACTOR_USER_ID_ = '{USERID}' OR ASSIGNED_ACTOR_USER_ID_='{USERID}')~/ 
			                            --会签任务
			                            UNION ALL
			                            SELECT  
			                              ID_,
			                              JBPMWORKFLOWHISTORYINFO_ID_, 
			                              'SIGNATURE'
			                            FROM T_JBPM_SIGNATURE_USERS  
			                            WHERE END_TIME_ IS NOT NULL 
			                            /~USERID: AND SIGNATURED_ACTOR_USER_ID_ = '{USERID}'~/
			                            --传阅任务
			                            UNION ALL
			                            SELECT 
			                              ID_,
			                              JBPMWORKFLOWHISTORYINFO_ID_, 
			                              'READ' 
			                            FROM T_JBPM_READ_USERS  
			                            WHERE END_TIME_ IS NOT NULL 
			                             /~USERID:  AND READED_ACTOR_USER_ID_ = '{USERID}'~/   
			                 )WIU
			                 INNER JOIN(
			                  SELECT 
				                   ID_,KEY_ONE_,KEY_TWO_,KEY_THREE_,KEY_FOUR_,KEY_FIVE_,KEY_SIX_,KEY_SEVEN_,
							       KEY_EIGHT_,KEY_NINE_,KEY_TEN_,PROCESS_FORM_PATH_,PROCESS_FORM_TITLE_,
							       WORKFLOW_NAME_,WORKFLOW_DISPLAY_NAME_,DRAFT_UUID_,PROCESSINSTANCE_STATE_,
							       PROCESSDEFINITION_ID_,REQUEST_INITIATOR_,REQUEST_INITIATOR_REAL_NAME_,
							       FROM_BUTTONTEXT_TO_COME_,JBPM4_HIST_ACTINST_DBID_,PREV_JBPM4_HIST_ACTINST_DBID_,
							       JBPM4_HIST_PROCINST_DBID_,JBPM4_DEPLOYMENT_DBID_,
							       REQUEST_INITIATOR_ID_,ACTIVITY_DETAIL_ID_,JBPM4_HIST_ACTINST_LAST_DBID_ ,HISTORY_ACTIVITY_NAME_ 
			                  FROM T_JBPM_WORKFLOW_INFO WHERE JBPM4_HIST_ACTINST_DBID_ IS NOT NULL 
			                   /~PROCESSINSTANCESTATE: AND PROCESSINSTANCE_STATE_!='{PROCESSINSTANCESTATE}' ~/
			                   /~deployedIds: AND JBPM4_DEPLOYMENT_DBID_ IN({deployedIds})~/
			                 )WII ON WII.ID_ = WIU.JBPMWORKFLOWHISTORYINFO_ID_
			                 /*LEFT JOIN T_JBPM_ACTIVITY_DETAIL TJAD ON TJAD.ID_ = WII.ACTIVITY_DETAIL_ID_*/
			                 LEFT JOIN(
			                  SELECT 
								DBID_, CLASS_, DBVERSION_, HPROCI_, TYPE_, 
								EXECUTION_, ACTIVITY_NAME_, START_, END_, 
								DURATION_, TRANSITION_, NEXTIDX_, HTASK_, 
								PROCI_HISTORY_INFO_ID_, ACTIVED_PROCI_HISTORY_INFO_ID_, 
								TASK_HISTORY_INFO_ID_, FIRSTED_HISTORY_INFO_ID_
			                  FROM JBPM4_HIST_ACTINST 
			                 )HAC ON HAC.DBID_ = WII.JBPM4_HIST_ACTINST_DBID_
			                 LEFT JOIN(
			                  SELECT 
			                    DBID_, DBVERSION_, ID_, PROCDEFID_, KEY_, START_, END_, 
				                DURATION_, STATE_, ENDACTIVITY_, NEXTIDX_ 
			                  FROM JBPM4_HIST_PROCINST 
			                 )HP ON HAC.HPROCI_ = HP.DBID_
			                 GROUP BY WII.JBPM4_DEPLOYMENT_DBID_ ,WII.WORKFLOW_NAME_,HP.ID_,HAC.START_,HAC.END_,WIU.TASKTYPE,WII.KEY_ONE_,WII.KEY_TWO_,WII.KEY_THREE_
			      )TTTT 
			      WHERE 1=1
			      <EXTRACTEND> ORDER BY CONVERT(DATETIME,PROCESSEND,120) DESC <EXTRACTEND>
			      /~globalQueryText: 
			           AND( 
				             UPPER(TTTT.TASKNAME)     LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.WORKFLOWNAME) LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.SERIALNO )    LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.PROJECTNAME ) LIKE '%{globalQueryText}%' 
				       )
				  ~/
			 ]]> 
	    </table_sql>
	  </sqlserver>	
	  <mysql>
	    <table_sql>
	    	 <![CDATA[
	           	          SELECT * FROM(
			          SELECT 
			                      WII.JBPM4_DEPLOYMENT_DBID_                  AS DEPLOYID,
			                      WII.WORKFLOW_NAME_                          AS WORKFLOWNAME,
			                      HP.ID_                                      AS PROCESSINSTANCEID,
			                      DATE_FORMAT(HAC.START_ ,'%Y-%m-%d %T')  AS PROCESSSTART,
			                       DATE_FORMAT(HAC.END_,'%Y-%m-%d %T')  AS PROCESSEND,
			                      WIU.TASKTYPE                                AS PROCESSINSTANCETYPE,
			                      MAX(HAC.HTASK_)                             AS TASKID,
			                      MAX(CONCAT(HAC.HTASK_,WII.HISTORY_ACTIVITY_NAME_)) AS TASKNAME,
			                      IFNULL(WII.KEY_THREE_,WII.KEY_ONE_)            AS SERIALNO,
			                      WII.KEY_TWO_                                AS PROJECTNAME
							      FROM(
			                            #待办任务和任务指派以及委托任务
			                            SELECT 
			                               ID_,
			                               JBPMWORKFLOWHISTORYINFO_ID_, 
			                               CASE 
			                                  WHEN ASSIGNED_ACTOR_USER_ID_ IS NOT NULL    THEN 'ASSIGNMENTCOMPLETED' 
			                                  WHEN (ACTUAL_ACTOR_USER_ID_  IS NOT NULL AND ACTUAL_ACTOR_USER_ID_ != PLAN_ACTOR_USER_ID_)   THEN 'DELEGATE'
			                                  WHEN END_TIME_   IS NOT NULL    THEN 'PENDING'
			                               END  AS TASKTYPE
			                            FROM T_JBPM_WORKFLOW_INFOS_USERS 
			                            WHERE 
			                            ( END_TIME_ IS NOT NULL OR ASSIGNED_ACTOR_USER_ID_ IS NOT NULL )
			                            /~USERID: AND (PLAN_ACTOR_USER_ID_ = '{USERID}' OR ASSIGNED_ACTOR_USER_ID_='{USERID}')~/ 
			                            #会签任务
			                            UNION ALL
			                            SELECT  
			                              ID_,
			                              JBPMWORKFLOWHISTORYINFO_ID_, 
			                              'SIGNATURE'
			                            FROM T_JBPM_SIGNATURE_USERS  
			                            WHERE END_TIME_ IS NOT NULL 
			                            /~USERID: AND SIGNATURED_ACTOR_USER_ID_ = '{USERID}'~/
			                            #传阅任务
			                            UNION ALL
			                            SELECT 
			                              ID_,
			                              JBPMWORKFLOWHISTORYINFO_ID_, 
			                              'READ' 
			                            FROM T_JBPM_READ_USERS  
			                            WHERE END_TIME_ IS NOT NULL 
			                             /~USERID:  AND READED_ACTOR_USER_ID_ = '{USERID}'~/   
			                 )WIU
			                 INNER JOIN(
			                  SELECT 
				                   ID_,KEY_ONE_,KEY_TWO_,KEY_THREE_,KEY_FOUR_,KEY_FIVE_,KEY_SIX_,KEY_SEVEN_,
							       KEY_EIGHT_,KEY_NINE_,KEY_TEN_,PROCESS_FORM_PATH_,PROCESS_FORM_TITLE_,
							       WORKFLOW_NAME_,WORKFLOW_DISPLAY_NAME_,DRAFT_UUID_,PROCESSINSTANCE_STATE_,
							       PROCESSDEFINITION_ID_,REQUEST_INITIATOR_,REQUEST_INITIATOR_REAL_NAME_,
							       FROM_BUTTONTEXT_TO_COME_,JBPM4_HIST_ACTINST_DBID_,PREV_JBPM4_HIST_ACTINST_DBID_,
							       JBPM4_HIST_PROCINST_DBID_,JBPM4_DEPLOYMENT_DBID_,
							       REQUEST_INITIATOR_ID_,ACTIVITY_DETAIL_ID_,JBPM4_HIST_ACTINST_LAST_DBID_ ,HISTORY_ACTIVITY_NAME_ 
			                  FROM T_JBPM_WORKFLOW_INFO WHERE JBPM4_HIST_ACTINST_DBID_ IS NOT NULL 
			                   /~PROCESSINSTANCESTATE: AND PROCESSINSTANCE_STATE_!='{PROCESSINSTANCESTATE}' ~/
			                   /~deployedIds: AND JBPM4_DEPLOYMENT_DBID_ IN({deployedIds})~/
			                 )WII ON WII.ID_ = WIU.JBPMWORKFLOWHISTORYINFO_ID_
			                 /*LEFT JOIN T_JBPM_ACTIVITY_DETAIL TJAD ON TJAD.ID_ = WII.ACTIVITY_DETAIL_ID_*/
			                 LEFT JOIN(
			                  SELECT 
								DBID_, CLASS_, DBVERSION_, HPROCI_, TYPE_, 
								EXECUTION_, ACTIVITY_NAME_, START_, END_, 
								DURATION_, TRANSITION_, NEXTIDX_, HTASK_, 
								PROCI_HISTORY_INFO_ID_, ACTIVED_PROCI_HISTORY_INFO_ID_, 
								TASK_HISTORY_INFO_ID_, FIRSTED_HISTORY_INFO_ID_
			                  FROM JBPM4_HIST_ACTINST 
			                 )HAC ON HAC.DBID_ = WII.JBPM4_HIST_ACTINST_DBID_
			                 LEFT JOIN(
			                  SELECT 
			                    DBID_, DBVERSION_, ID_, PROCDEFID_, KEY_, START_, END_, 
				                DURATION_, STATE_, ENDACTIVITY_, NEXTIDX_ 
			                  FROM JBPM4_HIST_PROCINST 
			                 )HP ON HAC.HPROCI_ = HP.DBID_
			                 GROUP BY WII.JBPM4_DEPLOYMENT_DBID_ ,WII.WORKFLOW_NAME_,HP.ID_,HAC.START_,HAC.END_,WIU.TASKTYPE,WII.KEY_ONE_,WII.KEY_TWO_,WII.KEY_THREE_
			     			ORDER BY HAC.END_ DESC  
			      )TTTT 
			      WHERE 1=1
			      /~globalQueryText: 
			           AND( 
				             UPPER(TTTT.TASKNAME)     LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.WORKFLOWNAME) LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.SERIALNO )    LIKE '%{globalQueryText}%' 
				          OR UPPER(TTTT.PROJECTNAME ) LIKE '%{globalQueryText}%' 
				       )
				  ~/
			 ]]> 
	    </table_sql>
	  </mysql>
      <dataSource>dataSource</dataSource>
      <show_sql>true</show_sql>
    </data>
  </table>
</table-root>