/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-05-19 05:22:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.reckon.rent_005fcommon;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cal_005fjs_005f5_005f1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var changeEventArray = [\r\n");
      out.write("\t{'id':'equipamt',\r\n");
      out.write("\t  'onvaluechanged':changeequipamtvalue,\r\n");
      out.write("\t}, \r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'equipendvalue',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t}, \r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'firstpaymentratio',\r\n");
      out.write("\t\t'onkeyup':changefirstpayment,\r\n");
      out.write("\t\t'onvaluechanged':changefirstpayment\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'assetsratio',\r\n");
      out.write("\t\t'onkeyup':changeassetsratio,\r\n");
      out.write("\t\t'onvaluechanged':changeassetsratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'adviserratio',\r\n");
      out.write("\t\t'onkeyup':changeadviserratio,\r\n");
      out.write("\t\t'onvaluechanged':changeadviserratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'rentorratevalue',\r\n");
      out.write("\t\t'onkeyup':rentorratevaluekeyup\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'settlemethod',\r\n");
      out.write("\t\t'onvaluechanged':changeRentPlanTableButton\r\n");
      out.write("\t}\t\r\n");
      out.write("\t,{\r\n");
      out.write("\t\t'id':'rentorrate',\r\n");
      out.write("\t\t'onvaluechanged':rentorratevaluechange,\r\n");
      out.write("\t\t'onitemclick':rentorrateitemchange\r\n");
      out.write("\t}, \r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'ratefloattype',\r\n");
      out.write("\t\t'onvaluechanged':ratefloattypevaluechange\r\n");
      out.write("\t}, \r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'baserate',\r\n");
      out.write("\t\t'onvaluechanged':yearratekeyup\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'ratefloatamt',\r\n");
      out.write("\t\t'onvaluechanged':yearratekeyup\r\n");
      out.write("\t},\r\n");
      out.write("\t/* {\r\n");
      out.write("\t\t'id':'periodtype',\r\n");
      out.write("\t\t'onvaluechanged':periodtypevaluechange\r\n");
      out.write("\t}, */\r\n");
      out.write("\t/* {\r\n");
      out.write("\t\t'id':'incomenumberyear',\r\n");
      out.write("\t\t'onvaluechanged':incomenumberyearvaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'incomenumber',\r\n");
      out.write("\t\t'onvaluechanged':incomenumberyearvaluechange\r\n");
      out.write("\t}, */\r\n");
      out.write("/* \t{\r\n");
      out.write("\t\t'id':'grace',\r\n");
      out.write("\t\t'onvaluechanged':incomenumberyearvaluechange\r\n");
      out.write("\t}, */\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'leaseamtdate',\r\n");
      out.write("\t\t'onvaluechanged':leaseamtdatevaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'startdate',\r\n");
      out.write("\t\t'onvaluechanged':startdatevaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'firstplandate',\r\n");
      out.write("\t\t'onvaluechanged':firstplandatevaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'secondplandate',\r\n");
      out.write("\t\t'onvaluechanged':secondplandatevaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'lastplandate',\r\n");
      out.write("\t\t'onvaluechanged':lastplandatevaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'handlingchargemoneyratio',\r\n");
      out.write("\t\t'onkeyup':changehandlingchargemoneyratio,\r\n");
      out.write("\t\t'onvaluechanged':changehandlingchargemoneyratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'managementmoneyratio',\r\n");
      out.write("\t\t'onkeyup':changemanagementmoneyratio,\r\n");
      out.write("\t\t'onvaluechanged':changemanagementmoneyratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'cautiondeductionratio',\r\n");
      out.write("\t\t'onkeyup':changecautiondeductionratio,\r\n");
      out.write("\t\t'onvaluechanged':changecautiondeductionratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'insurerate',\r\n");
      out.write("\t\t'onkeyup':changeinsurerateratio,\r\n");
      out.write("\t\t'onvaluechanged':changeinsurerateratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'insurecostrate',\r\n");
      out.write("\t\t'onkeyup':changeinsurecostrateratio,\r\n");
      out.write("\t\t'onvaluechanged':changeinsurecostrateratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'cautiondeductionmoney',\r\n");
      out.write("\t\t'onkeyup':cautionmoneyremainvaluechange,\r\n");
      out.write("\t\t'onvaluechanged':cautionmoneyremainvaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'faccautionmoney',\r\n");
      out.write("\t\t'onkeyup':changecautiondeductionratio,\r\n");
      out.write("\t\t'onvaluechanged':changecautiondeductionratio\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'faccautiondeductionmoney',\r\n");
      out.write("\t\t'onkeyup':cautionmoneyremainvaluechange,\r\n");
      out.write("\t\t'onvaluechanged':cautionmoneyremainvaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'insuremoneytype',\r\n");
      out.write("\t\t'onvaluechanged':insuremoneytypevaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'insurancelessee_show',\r\n");
      out.write("\t\t'onkeyup':insuremoneyvaluechange,\r\n");
      out.write("\t\t'onvaluechanged':insuremoneyvaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'insurancelessor_show',\r\n");
      out.write("\t\t'onkeyup':insuremoneyvaluechange,\r\n");
      out.write("\t\t'onvaluechanged':insuremoneyvaluechange\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'nominalprice',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t\t'onvaluechanged':changeInputToThoud\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'beforeinterest',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t\t'onvaluechanged':changeInputToThoud\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'otherincome',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t\t'onvaluechanged':changeInputToThoud\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'returnpointincome',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t\t'onvaluechanged':changeInputToThoud\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'interestsupport',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t\t'onvaluechanged':changeInputToThoud\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'otherexpenditure',\r\n");
      out.write("\t\t'onkeyup':changeInputToThoud,\r\n");
      out.write("\t\t'onvaluechanged':changeInputToThoud\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'penarate',\r\n");
      out.write("\t\t'onvaluechanged':checkInputIntCompareToZero\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'freedefainterday',\r\n");
      out.write("\t\t'onvaluechanged':checkInputIntCompareToZero\r\n");
      out.write("\t},\r\n");
      out.write("\t{\r\n");
      out.write("\t\t'id':'otherleasemoney',\r\n");
      out.write("\t\t'onkeyup':cleanleasemoney,\r\n");
      out.write("\t\t'onvaluechanged':cleanleasemoney\r\n");
      out.write("\t}\r\n");
      out.write("];\r\n");
      out.write("if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.process}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("' && '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.process}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("' == 'onhire'){\r\n");
      out.write("\tchangeEventArray = [\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t'id':'leaseamtdate',\r\n");
      out.write("\t\t\t'onvaluechanged':leaseamtdatevaluechange\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t'id':'startdate',\r\n");
      out.write("\t\t\t'onvaluechanged':calculateBeforeInterest\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t'id':'firstplandate',\r\n");
      out.write("\t\t\t'onvaluechanged':firstplandatevaluechange\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t'id':'secondplandate',\r\n");
      out.write("\t\t\t'onvaluechanged':secondplandatevaluechange\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t'id':'lastplandate',\r\n");
      out.write("\t\t\t'onvaluechanged':lastplandatevaluechange\r\n");
      out.write("\t\t}              \r\n");
      out.write("\t];\r\n");
      out.write("}\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\tfor(var  i = 0  ; i < changeEventArray.length ; i++){\r\n");
      out.write("\t\tvar changeEvent = changeEventArray[i];\r\n");
      out.write("\t\tvar id = changeEvent.id;\r\n");
      out.write("\t\tdelete  changeEvent['id'];  \r\n");
      out.write("\t\t$mini(id).set(changeEvent);\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("//第一期支付日改变\r\n");
      out.write("function firstplandatevaluechange(e){\r\n");
      out.write("\t$mini(\"secondplandate\").setMinDate(e.value);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function secondplandatevaluechange(e){\r\n");
      out.write("\tvar incomeNumber = mini.get('incomenumber').getInputText();\r\n");
      out.write("\tvar incomenumberyear = $minigetvalue(\"incomenumberyear\");//租金支付类型\r\n");
      out.write("\tvar tempValue = parseInt(incomenumberyear.replace(\"income_\",\"\"));\r\n");
      out.write("\tvar grace = mini.get('grace').getValue();\r\n");
      out.write("\tincomeNumber = Number(incomeNumber) + Number(grace);\r\n");
      out.write("\tif(incomeNumber && Number(incomeNumber) >=  2){\r\n");
      out.write("\t\tvar maxValue =  dateAdd('m',Number(tempValue) * (Number(incomeNumber)-2),mini.get('secondplandate').getValue());\r\n");
      out.write("\t\tvar minValue  = mini.get('secondplandate').getValue();\r\n");
      out.write("\t\tif(Number(incomeNumber) > 2){\r\n");
      out.write("\t\t\tminValue =  dateAdd('m',Number(tempValue) * (Number(incomeNumber)-3),mini.get('secondplandate').getValue());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$mini(\"lastplandate\").setValue(maxValue);\r\n");
      out.write("\t\t$mini(\"lastplandate\").setMaxDate(maxValue);\r\n");
      out.write("\t\t$mini(\"lastplandate\").setMinDate(minValue); \r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//末期支付日改变\r\n");
      out.write("function lastplandatevaluechange(e){\r\n");
      out.write("\tvar firstplandate = $mini(\"firstplandate\").getValue();\r\n");
      out.write("\tif(!firstplandate){\r\n");
      out.write("\t\tmini.alert('第一期租金支付日期为空，请先选择第一期租金支付日期！！！');\r\n");
      out.write("\t\t$mini(\"lastplandate\").setValue();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar incomeNumber = getNumber('incomenumber');\r\n");
      out.write("\tvar grace = getNumber('grace');\r\n");
      out.write("\tincomeNumber += grace;\r\n");
      out.write("\tif(!incomeNumber || Number(incomeNumber)<=0){\r\n");
      out.write("\t\tmini.alert('还款期次需大于0！！！');\r\n");
      out.write("\t\t$mini(\"lastplandate\").setValue();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar incomenumberyear = $minigetvalue(\"incomenumberyear\");//租金支付类型\r\n");
      out.write("\tvar tempValue = parseInt(incomenumberyear.replace(\"income_\",\"\"));\r\n");
      out.write("\tvar maxValue =  dateAdd('m',Number(tempValue) * (incomeNumber-1),firstplandate);\r\n");
      out.write("\tif(mini.get('secondplandate').getValue() && incomeNumber > 1){\r\n");
      out.write("\t\tvar maxValue =  dateAdd('m',Number(tempValue) * (incomeNumber-2),mini.get('secondplandate').getValue());\r\n");
      out.write("\t}\r\n");
      out.write("\tvar minValue = mini.get('startdate').getValue();\r\n");
      out.write("\tif(incomeNumber > 1){\r\n");
      out.write("\t\tminValue =  dateAdd('m',Number(tempValue) * (incomeNumber-2),firstplandate);\r\n");
      out.write("\t}\r\n");
      out.write("    if(e.sender.getValue() &&(e.value <= minValue || e.value > maxValue)){\r\n");
      out.write("    \tmini.alert('末期租金支付日期不能大于正常测算的末期租金支付日'+dateToStr('yyyy-MM-dd',maxValue)+'，<br/>且不能小于倒数第二期的租金支付日期'+dateToStr('yyyy-MM-dd',minValue)+'！！');\r\n");
      out.write("    \t$mini(\"lastplandate\").setValue(maxValue);\r\n");
      out.write("    \t$mini(\"lastplandate\").setMaxDate(maxValue);\r\n");
      out.write("\t\t$mini(\"lastplandate\").setMinDate(minValue); \r\n");
      out.write("    \treturn;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//起租日改变\r\n");
      out.write("function startdatevaluechange(e){\r\n");
      out.write("\t$mini(\"firstplandate\").setMinDate(e.value);\r\n");
      out.write("\tcalChangTab();//租前息改变方法\r\n");
      out.write("}\r\n");
      out.write("//根据利率计算方式改变年租息率\r\n");
      out.write("function yearratekeyup(e){\r\n");
      out.write("\tif(typeof(e) != 'string')setformatvalue(e.sender);\r\n");
      out.write("\tvar ratefloattypevalue = $minigetvalue(\"ratefloattype\");\r\n");
      out.write("\tvar ratefloatamt = getNumber(\"ratefloatamt\"); //利率调整值\r\n");
      out.write("\tvar baserate = getNumber(\"baserate\");//基准利率\r\n");
      out.write("\tif(\"proportion\" == ratefloattypevalue){\r\n");
      out.write("\t\t$mini(\"yearrate\").setValue(decimal((ratefloatamt+1) * baserate,6));\r\n");
      out.write("\t}else if(\"add\" == ratefloattypevalue){\r\n");
      out.write("\t\t$mini(\"yearrate\").setValue(ratefloatamt + baserate);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("/*\r\n");
      out.write("\t利率计算方式：\r\n");
      out.write("\t\t1 选择：固定利率 则利率调整值只读，去掉必填校验\r\n");
      out.write("\t\t2 选择非‘固定利率’则利率调整值可输入，并且有必填校验\r\n");
      out.write("*/\r\n");
      out.write("function ratefloattypevaluechange(e){\r\n");
      out.write("\t//var sender = e.sender;\r\n");
      out.write("\tvar ratefloattypevalue;\r\n");
      out.write("\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\tratefloattypevalue = $minigetvalue(\"ratefloattype\");\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tratefloattypevalue = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope['ratefloattype']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t}\r\n");
      out.write("\tvar ratefloatamt = getNumber(\"ratefloatamt\"); //利率调整值\r\n");
      out.write("\tvar baserate = getNumber(\"baserate\");//基准利率\r\n");
      out.write("\tif(ratefloattypevalue == '' ? \"proportion\" : ratefloattypevalue == 'proportion'){\r\n");
      out.write("\t\t$miniEnable(\"adjuststyle\");\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$miniSetCombValue(\"adjuststyle\",\"\",'');\r\n");
      out.write("\t\t$miniDisable(\"adjuststyle\");\r\n");
      out.write("\t\t//$miniSetCombValue(\"adjuststyle\",\"\",'');\r\n");
      out.write("\t}\r\n");
      out.write("\tif(\"fixed\" == ratefloattypevalue){//固定利率\r\n");
      out.write("\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\t$mini(\"yearrate\").setValue('0');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").setValue(\"0\");\r\n");
      out.write("\t\t$mini(\"baserate\").setValue(\"0\");\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").disable();//利率调整值\r\n");
      out.write("\t\t$mini(\"baserate\").disable();//基准利率\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").setRequired(false);\r\n");
      out.write("\t\t$miniEnable(\"yearrate\");\r\n");
      out.write("\t}else if(\"proportion\" == ratefloattypevalue){//换央行浮动比率\r\n");
      out.write("\t\tmini.get(\"yearrate\").disable();\r\n");
      out.write("\t\t$miniEnable(\"ratefloatamt\");\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").setRequired(true);\r\n");
      out.write("\t\t$miniEnable(\"baserate\");\r\n");
      out.write("\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\t$mini(\"yearrate\").setValue(decimal((ratefloatamt+1) * baserate,6));\r\n");
      out.write("\t\t\t$mini(\"rentorratevalue\").setValue(\"0\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else if(\"add\" == ratefloattypevalue){//换央行利率加点\r\n");
      out.write("\t\tmini.get(\"yearrate\").disable();\r\n");
      out.write("\t\t$miniEnable(\"ratefloatamt\");\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").setRequired(true);\r\n");
      out.write("\t\t$miniEnable(\"baserate\");\r\n");
      out.write("\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\t$mini(\"rentorratevalue\").setValue(\"0\");\r\n");
      out.write("\t\t\t$mini(\"yearrate\").setValue(ratefloatamt + baserate);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else{//说明为空\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").enable();//利率调整值\r\n");
      out.write("\t\t$mini(\"baserate\").enable();//基准利率\r\n");
      out.write("\t}\r\n");
      out.write("\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\tsetRawValue(e);\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tif(!'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope[\"ratefloattype\"]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'){\r\n");
      out.write("\t\t\t$miniSetCombValue(\"ratefloattype\",\"proportion\",'按央行浮动比率');\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$miniSetCombValue(\"ratefloattype\",ratefloattypevalue,\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope['rawValue_ratefloattype']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("/*\r\n");
      out.write("  保险计算方式 改为：本司付款、客户自保，不投保\r\n");
      out.write("     1.选择‘本司付款’   保险费(我司)必填 保险费(承租人)取消必填  保险费(我司)、保险费赋空 、\r\n");
      out.write("     \t保险费(承租人)只读  保险费(我司)允许输入、保险费(承租人)赋为0\r\n");
      out.write("     2.客户自保  保险费(我司)取消必填 保险费(承租人)必填  \r\n");
      out.write("                      保险费(我司)、保险费赋空 、保险费(我司)只读  保险费(承租人)允许输入、保险费(我司)赋为0\r\n");
      out.write("     3.不投保  保险费(我司)取消必填 保险费(承租人)取消必填 保险费(我司)、保险费(承租人)、保险费赋为0保险费(我司)、保险费(承租人)只读\r\n");
      out.write("  参数 type说明:\r\n");
      out.write("\t 1.change:代表的是保险计算公式的下拉触发事件\r\n");
      out.write("\t 3.start:代表的页面初始化的控件选择按钮\r\n");
      out.write(" */\r\n");
      out.write(" function $miniDisableSetValue(id,value){\r\n");
      out.write("\t  mini.get(id+'_show').setValue(value);\r\n");
      out.write("\t  $('#'+id).val(value);\r\n");
      out.write(" }\r\n");
      out.write(" function insuremoneytypevaluechange(e){\r\n");
      out.write("\t\tvar sender = mini.get(\"insuremoneytype\");\r\n");
      out.write("\t\t//本司付款\r\n");
      out.write("\t\tif(\"insure_type1\" == sender.value){\r\n");
      out.write("\t\t\t$miniEnable('insurancelessor_show');// 保险费(我司)\r\n");
      out.write("\t\t\t$miniDisable(\"insurancelessee_show\");//保险费(承租人)\r\n");
      out.write("\t\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\t\t$miniDisableSetValue('insurancelessee','0');\r\n");
      out.write("\t\t\t\t$miniDisableSetValue('insurancelessor','0');\r\n");
      out.write("\t\t\t\t$mini(\"insuremoney\").setValue(0);//保险费\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t//客户自保\r\n");
      out.write("\t\t}else if(\"insure_type3\" == sender.value){\r\n");
      out.write("\t\t\t$miniEnable('insurancelessee_show');//保险费(承租人) \r\n");
      out.write("\t\t\t$('#insurancelessee_show').find('span').attr('class','mini-textbox-border');\r\n");
      out.write("\t\t\t$miniDisable('insurancelessor_show');// 保险费(我司)\r\n");
      out.write("\t\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\t\t$miniDisableSetValue('insurancelessee','0');\r\n");
      out.write("\t\t\t\t$miniDisableSetValue('insurancelessor','0');\r\n");
      out.write("\t\t\t\t$mini(\"insuremoney\").setValue(0);//保险费\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t//不投保\r\n");
      out.write("\t\t}else if(\"insure_type5\" == sender.value){\r\n");
      out.write("\t\t\t$miniDisable('insurancelessee_show');// 保险费(我司)\r\n");
      out.write("\t\t\t$miniDisable('insurancelessor_show');// 保险费(承租人)\r\n");
      out.write("\t\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\t\t$miniDisableSetValue('insurancelessee','0');\r\n");
      out.write("\t\t\t\t$miniDisableSetValue('insurancelessor','0');\r\n");
      out.write("\t\t\t\t$mini(\"insuremoney\").setValue(\"0\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(typeof(e) != 'string'){\r\n");
      out.write("\t\t\tsetRawValue(e);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("/*\r\n");
      out.write(" \t租金支付类型 \r\n");
      out.write("\t \t1 月付情况下‘租赁期限(月)’ = 1 * ‘还租次数(年)’\r\n");
      out.write("\t  \t2 季付情况下‘租赁期限(月)’ = 3 * ‘还租次数(年)’\r\n");
      out.write("\t  \t3 半年付情况下‘租赁期限(月)’ = 6 * ‘还租次数(年)’\r\n");
      out.write("\t  \t4 年付情况下‘租赁期限(月)’ = 12 * ‘还租次数(年)’\r\n");
      out.write("\t  \t5 双月付情况下‘租赁期限(月)’ = 2 * ‘还租次数(年)’\r\n");
      out.write(" */\r\n");
      out.write("function incomenumberyearvaluechange(e){\r\n");
      out.write("\tvar grace = $minigetinputtext(\"grace\");//宽限期\r\n");
      out.write("\tif(typeof(e) == 'object'){\r\n");
      out.write("\t\tif(e.sender.id = 'grace'){\r\n");
      out.write("\t\t\tsetformatvalue($mini('grace'));\r\n");
      out.write("\t\t\tif(isNaN($minigetinputtext(\"grace\")) || Number($minigetinputtext(\"grace\")) < 0){\r\n");
      out.write("\t\t\t\t$mini('grace').setValue(0);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(Number($minigetinputtext(\"grace\")) > 0){\r\n");
      out.write("\t\t\t\t$miniSetCombValue('periodtype',\"period_type_0\",\"期末\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tgrace = $minigetinputtext(\"grace\");\r\n");
      out.write("\t\t}else if(e.sender.id = 'incomenumber' && Number(grace) > 0){\r\n");
      out.write("\t\t\tsetformatvalue($mini('incomenumber'));\r\n");
      out.write("\t\t\tif(isNaN($minigetinputtext(\"incomenumber\")) || Number($minigetinputtext(\"incomenumber\")) < 0){\r\n");
      out.write("\t\t\t\t$mini('incomenumber').setValue(0);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t$miniSetCombValue('incomenumberyear',$mini('incomenumberyear').getValue(),$mini('incomenumberyear').getText());\t\r\n");
      out.write("\tvar sender = mini.get(\"incomenumberyear\");//租金支付类型\r\n");
      out.write("\tvar incomenumber = $minigetinputtext(\"incomenumber\");//还租次数\r\n");
      out.write("\tgrace = isNaN(grace) ? 0 : grace;\r\n");
      out.write("\tincomenumber = isNaN(incomenumber) ? 0 : incomenumber;\r\n");
      out.write("\tvar resultnumber = incomenumber + grace;\r\n");
      out.write("\t//leaseamtdatevaluechange(); 改变测算条件\r\n");
      out.write("\tif(\"\" == sender.value || \"\" == incomenumber.value) return;\r\n");
      out.write("\t//  income_1\tincome_1\tincome_number_year\t月  付\r\n");
      out.write("\t// \tincome_3\tincome_3\tincome_number_year\t季  付\r\n");
      out.write("\t// \tincome_6\tincome_6\tincome_number_year\t半年付\r\n");
      out.write("\t// \tincome_12\tincome_12\tincome_number_year\t年  付\r\n");
      out.write("\t// \tincome_2\tincome_2\tincome_number_year\t双月付\r\n");
      out.write("\tif(\"income_1\" == sender.value){\r\n");
      out.write("\t\t$mini(\"leaseterm\").setValue(resultnumber);\r\n");
      out.write("\t}else if(\"income_3\" == sender.value){\r\n");
      out.write("\t\t$mini(\"leaseterm\").setValue(resultnumber *3);\r\n");
      out.write("\t}else if(\"income_6\" == sender.value){\r\n");
      out.write("\t\t$mini(\"leaseterm\").setValue(resultnumber *6);\r\n");
      out.write("\t}else if(\"income_12\" == sender.value){\r\n");
      out.write("\t\t$mini(\"leaseterm\").setValue(resultnumber *12);\r\n");
      out.write("\t}else if(\"income_2\" == sender.value){\r\n");
      out.write("\t\t$mini(\"leaseterm\").setValue(resultnumber *2);\r\n");
      out.write("\t}\r\n");
      out.write("\t//setRawValue(e);\r\n");
      out.write("\t\r\n");
      out.write("\tleaseamtdatevaluechange('1');\r\n");
      out.write("}\r\n");
      out.write("function periodtypevaluechange(e){\r\n");
      out.write("\t$miniSetCombValue(e.sender.id,e.sender.value,e.sender.text);\r\n");
      out.write("\tif(e.sender.value == 'period_type_1'){\r\n");
      out.write("\t\tvar grace = mini.get('grace').getValue();\r\n");
      out.write("\t\tif(Number(grace) > 0 ){\r\n");
      out.write("\t\t\tmini.get('grace').setValue(0);\r\n");
      out.write("\t\t\tincomenumberyearvaluechange('e');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$miniDisable('grace');\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tif(mini.get('rentorrate').getValue() != 'knowing_corpus'){\r\n");
      out.write("\t\t\t$miniEnable('grace');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tleaseamtdatevaluechange('1');\r\n");
      out.write("}\r\n");
      out.write("function setRawValue(e){\r\n");
      out.write("\tif(null == e )return;\r\n");
      out.write("\tvar cbb=e.sender;\r\n");
      out.write("    mini.get(\"rawValue_\"+cbb.name).setValue(cbb.text);\r\n");
      out.write("}\r\n");
      out.write("//租金推算方法下拉改变事件\r\n");
      out.write("function rentorratevaluechange(e){\r\n");
      out.write("\tif(typeof(e) != \"string\"){\r\n");
      out.write("\t\t$miniSetCombValue(e.sender.id,e.sender.value,e.sender.text);\r\n");
      out.write("\t}\r\n");
      out.write("\tvar rentorratevalue = $minigetvalue(\"rentorrate\");\r\n");
      out.write("\tif(\"rate\" == rentorratevalue){\r\n");
      out.write("\t\t$(\"#testrent\").hide();\r\n");
      out.write("\t\t$(\"#testrate\").show();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$(\"#testrate\").hide();\r\n");
      out.write("\t\t$(\"#testrent\").show();\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t //如果是按租金计算年租息率或者已知租金规则测算情况下\r\n");
      out.write("\tif(\"knowing_corpus\" == rentorratevalue || \"knowing_rent\" == rentorratevalue){\r\n");
      out.write("\t\tvar grace = $minigetinputtext('grace');\r\n");
      out.write("\t\tif(Number(grace) > 0){\r\n");
      out.write("\t\t\tmini.get('grace').setValue(0);\r\n");
      out.write("\t\t\tincomenumberyearvaluechange('e');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$miniDisable('grace');\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$miniEnable('grace');\r\n");
      out.write("\t}\r\n");
      out.write("\t if(typeof(e) != \"string\"){\r\n");
      out.write("\t\t$mini(\"yearrate\").setValue('0');\r\n");
      out.write("\t\t$mini(\"rentorratevalue\").setValue('0');\r\n");
      out.write("\t\tif(\"rent\" == rentorratevalue || \"knowing_rent\" == rentorratevalue){\r\n");
      out.write("\t\t\t$miniSetCombValue(\"ratefloattype\",\"fixed\",\"固定利率\");\r\n");
      out.write("\t\t\t$miniDisable(\"ratefloattype\");\r\n");
      out.write("\t\t\t$mini(\"ratefloatamt\").disable();//利率调整值\r\n");
      out.write("\t\t\t$mini(\"baserate\").disable();//基准利率\r\n");
      out.write("\t\t\t//年租息率清空\r\n");
      out.write("\t\t\tif(\"knowing_rent\" == rentorratevalue){\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$miniEnable(\"ratefloattype\");//利率计算方式\r\n");
      out.write("\t\t\tif(mini.get('ratefloattype').getValue() != 'fixed'){\r\n");
      out.write("\t\t\t\t$miniEnable(\"ratefloatamt\");//利率调整值\r\n");
      out.write("\t\t\t\t$miniEnable(\"baserate\") ;//基准利率\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$miniDisable(\"ratefloatamt\");//利率调整值\r\n");
      out.write("\t\t\t\t$miniDisable(\"baserate\") ;//基准利率\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} \r\n");
      out.write("\t }\r\n");
      out.write("\t//动态改变租金计算方式\r\n");
      out.write("\tif(rentorratevalue != \"knowing_rent\"){\r\n");
      out.write("\t\tif($minigetvalue('settlemethod') == \"irregular_rent\"){\r\n");
      out.write("\t\t\t//$miniSetCombValue(\"settlemethod\",\"even_rent\",\"等额租金\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$miniSetCombValue(\"settlemethod\",\"irregular_rent\",\"不规则\");\r\n");
      out.write("\t}\r\n");
      out.write("\tif(!'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope[\"ratefloattype\"]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'){\r\n");
      out.write("\t\t$miniSetCombValue(\"ratefloattype\",\"fixed\",\"固定利率\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif(typeof(e) != \"string\"){\r\n");
      out.write("\t\tchangeRentPlanTableButton('1');\r\n");
      out.write("\t}\r\n");
      out.write("\telse\r\n");
      out.write("\t{\r\n");
      out.write("\t\t$miniDisable(\"yearrate\");\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//租金推算方法下拉改变事件\r\n");
      out.write("function rentorrateitemchange(e){\r\n");
      out.write("\tvar rentorratevalue = $minigetvalue(\"rentorrate\");//租金支付类型\r\n");
      out.write("\tif(\"knowing_rent\" == rentorratevalue){\r\n");
      out.write("\t\t$miniSetCombValue(\"settlemethod\",\"irregular_rent\",\"不规则\");\r\n");
      out.write("\t\tif ($minigetvalue(\"equipamt\") && getNumber('equipamt') > 0) {\r\n");
      out.write("\t\t\t$mini(\"rentorratevalue\").setValue(\"0\");\r\n");
      out.write("\t\t\tvar editWindow = mini.get(\"editWindow\");\r\n");
      out.write("\t\t\teditWindow.show();\r\n");
      out.write("\t    }else{\r\n");
      out.write("\t   \t \tmini.alert(\"请填写设备款！\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else if(\"knowing_corpus\" == rentorratevalue){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$miniSetCombValue(\"settlemethod\",\"even_corpus\",\"等额本金\");\r\n");
      out.write("\t\tif (getNumber(\"cleanleasemoney\") <= 0 ) {\r\n");
      out.write("\t   \t \tmini.alert(\"请填写设备款！\");\r\n");
      out.write("\t    }\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\t$mini(\"rentorratevalue\").setValue(\"0\");\r\n");
      out.write("\t\t\t$('#testrent').hide();\r\n");
      out.write("\t\t\t$('#testrate').show();\r\n");
      out.write("\t\t\tvar editWindow = mini.get(\"editWindow_knowing_corpus\");\r\n");
      out.write("\t\t\teditWindow.show();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkKnowingRentList(rentList){\r\n");
      out.write("\tvar length = rentList?rentList.length:0;\r\n");
      out.write("\tif(length > 0){\r\n");
      out.write("\t\tvar total = 0;\r\n");
      out.write("\t\tvar maxNum = 0;\r\n");
      out.write("\t\tvar minNum = 2;\r\n");
      out.write("\t\tfor (var i = 0; i < length; i++) {\r\n");
      out.write("\t\t\tvar rowData = rentList[i];\r\n");
      out.write("\t\t\tvar startNum = rowData[\"startrentlist\"] * 1;\r\n");
      out.write("\t\t\tvar endNum = rowData[\"endrentlist\"] * 1;\r\n");
      out.write("\t\t\tfor (var j = i + 1; j < length; j++) {\r\n");
      out.write("\t\t\t\tvar rowData2 = rentList[j];\r\n");
      out.write("\t\t\t\tvar startNum2 = rowData2[\"startrentlist\"] * 1;\r\n");
      out.write("\t\t\t\tvar endNum2 = rowData2[\"endrentlist\"] * 1;\r\n");
      out.write("\t\t\t\tif(!(startNum2 > endNum || endNum2 < startNum)){//结束期项大于等于开始期项，且和已有期项无交集\r\n");
      out.write("\t\t\t\t\tmini.alert(\"租金计划有期项重复或者残缺!\");\r\n");
      out.write("\t\t\t\t\treturn 0;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\ttotal += (endNum - startNum + 1);\r\n");
      out.write("\t\t\tminNum = minNum > startNum ? startNum : minNum;\r\n");
      out.write("\t\t\tmaxNum = maxNum > endNum ? maxNum : endNum;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!maxNum || !minNum || minNum != 1 || maxNum != total){\r\n");
      out.write("\t\t\tmini.alert(\"租金计划有期项重复或者残缺!\");\r\n");
      out.write("\t\t\treturn 0;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn total;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tmini.alert(\"在已知租金法情况下，必须按要求填写对应租金及期项值，请选择[已知租金法]重新设置租金计划列表!\");\r\n");
      out.write("\t\treturn 0;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function checkKnowingCorpusList(rentList){\r\n");
      out.write("\tvar length = rentList?rentList.length:0;\r\n");
      out.write("\tif(length > 0){\r\n");
      out.write("\t\tvar total = 0;\r\n");
      out.write("\t\tvar maxNum = 0;\r\n");
      out.write("\t\tvar minNum = 2;\r\n");
      out.write("\t\tfor (var i = 0; i < length; i++) {\r\n");
      out.write("\t\t\tvar rowData = rentList[i];\r\n");
      out.write("\t\t\tvar startNum = rowData[\"startcorpuslist\"] * 1;\r\n");
      out.write("\t\t\tvar endNum = rowData[\"endcorpuslist\"] * 1;\r\n");
      out.write("\t\t\tfor (var j = i + 1; j < length; j++) {\r\n");
      out.write("\t\t\t\tvar rowData2 = rentList[j];\r\n");
      out.write("\t\t\t\tvar startNum2 = rowData2[\"startcorpuslist\"] * 1;\r\n");
      out.write("\t\t\t\tvar endNum2 = rowData2[\"endcorpuslist\"] * 1;\r\n");
      out.write("\t\t\t\tif(!(startNum2 > endNum || endNum2 < startNum)){//结束期项大于等于开始期项，且和已有期项无交集\r\n");
      out.write("\t\t\t\t\tmini.alert(\"租金计划有期项重复或者残缺!\");\r\n");
      out.write("\t\t\t\t\treturn 0;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\ttotal += (endNum - startNum + 1);\r\n");
      out.write("\t\t\tminNum = minNum > startNum ? startNum : minNum;\r\n");
      out.write("\t\t\tmaxNum = maxNum > endNum ? maxNum : endNum;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!maxNum || !minNum || minNum != 1 || maxNum != total){\r\n");
      out.write("\t\t\tmini.alert(\"租金计划有期项重复或者残缺!\");\r\n");
      out.write("\t\t\treturn 0;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn total;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tmini.alert(\"在已知租金法情况下，必须按要求填写对应租金及期项值，请选择[已知租金法]重新设置租金计划列表!\");\r\n");
      out.write("\t\treturn 0;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("/*\r\n");
      out.write(" *\t付款日：\r\n");
      out.write(" \t付款日放在起租日前面\r\n");
      out.write(" \t付款日选择后触发事件计算：起租日，第一期租金支付日，第二期租金支付日 三个值\r\n");
      out.write(" \t计算逻辑：第一期租金支付日不能小于起租日期，第二期租金支付日不能小于第一期租金支付日!\r\n");
      out.write("\t1.起租日，第一期租金支付日，第二期租金支付日 三个值都不存在值则被重新计算\r\n");
      out.write("\t2.三个值都为空情况下：\r\n");
      out.write("\t\t起租日 = 付款日\r\n");
      out.write("\t\t第一期租金支付日：if '期初/期末' = q期初，则=起租日，else = 起租日 + 租金支付类型（同上方3的数字:1/3/6/12/2）月份\r\n");
      out.write("\t\t第二期租金支付日：= 第一期租金支付日 +  + 租金支付类型（同上方3的数字:1/3/6/12/2）的数字:1/3/6/12)月份 \r\n");
      out.write("\t\t\r\n");
      out.write(" */\r\n");
      out.write("function leaseamtdatevaluechange(e){\r\n");
      out.write("\t//if(\"\" == e.value) return;\r\n");
      out.write("\tvar sender = mini.get(\"leaseamtdate\");\r\n");
      out.write("\tif(!sender.value){\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t//  income_1\tincome_1\tincome_number_year\t月  付\r\n");
      out.write("\t// \tincome_3\tincome_3\tincome_number_year\t季  付\r\n");
      out.write("\t// \tincome_6\tincome_6\tincome_number_year\t半年付\r\n");
      out.write("\t// \tincome_12\tincome_12\tincome_number_year\t年  付\r\n");
      out.write("\t// \tincome_2\tincome_2\tincome_number_year\t双月付\r\n");
      out.write("\tvar incomeNumber = mini.get('incomenumber').getValue();\r\n");
      out.write("\tvar startdate = $minigetvalue(\"startdate\");//起租日\r\n");
      out.write("\tvar firstplandate = $minigetvalue(\"firstplandate\");//第一期租金支付日\r\n");
      out.write("\tvar secondplandate = $minigetvalue(\"secondplandate\");//第二期租金支付日\r\n");
      out.write("\tvar lastplandate = $minigetvalue(\"lastplandate\");//第二期租金支付日\r\n");
      out.write("\tvar periodtype = $minigetvalue(\"periodtype\");//期初/期末\r\n");
      out.write("\tvar incomenumberyear = $minigetvalue(\"incomenumberyear\");//租金支付类型\r\n");
      out.write("\tif(typeof(e) == 'string' || (\"\" == startdate && \"\" == firstplandate && \"\" == secondplandate && \"\" == lastplandate)){\r\n");
      out.write("\t\t$mini(\"startdate\").setValue(sender.value);\r\n");
      out.write("\t\tvar changedate;\r\n");
      out.write("\t\tvar tempValue = parseInt(incomenumberyear.replace(\"income_\",\"\"));\r\n");
      out.write("\t\tif(\"period_type_1\" == periodtype){\r\n");
      out.write("\t\t\t$mini(\"firstplandate\").setValue(sender.value);\r\n");
      out.write("\t\t\tchangedate=sender.value;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tchangedate = DateUtil.dateAdd('m',tempValue,sender.value);\r\n");
      out.write("\t\t\t$mini(\"firstplandate\").setValue(changedate);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$mini(\"firstplandate\").setMinDate($minigetvalue(\"startdate\"));\r\n");
      out.write("\t\t$mini(\"secondplandate\").setMinDate($minigetvalue(\"firstplandate\"));\r\n");
      out.write("\t\t$mini(\"secondplandate\").setValue(dateAdd('m',tempValue,changedate));\r\n");
      out.write("\t\tif(incomeNumber > 0 ){\r\n");
      out.write("\t\t\tvar leaseterm =  $minigetvalue('leaseterm');\r\n");
      out.write("\t\t\tvar tempValue = parseInt(incomenumberyear.replace(\"income_\",\"\"));\r\n");
      out.write("\t\t\t$mini(\"lastplandate\").setValue(dateAdd('m',Number(leaseterm) - Number(tempValue),changedate));\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$mini(\"lastplandate\").setValue($mini(\"secondplandate\").getValue());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$mini(\"lastplandate\").setMaxDate($mini(\"lastplandate\").getValue());\r\n");
      out.write("\t\t$mini(\"lastplandate\").setMinDate(dateAdd('m',-1,$mini(\"lastplandate\").getValue())); \r\n");
      out.write("\t}\r\n");
      out.write("\tcalChangTab();//租前息改变方法\r\n");
      out.write("}\r\n");
      out.write("//点击租金测算\r\n");
      out.write("function save(e){\r\n");
      out.write("\tif(mini.get(\"settlemethod\").getValue()=='special_regular'){\r\n");
      out.write("\t\tvar special_regular=mini.get(\"special_regular\").getData();\r\n");
      out.write("\t\tif(special_regular.length==0){\r\n");
      out.write("\t\t\tmini.alert('请先填写分段规则！');\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t//给还租次数 租赁期限赋值\r\n");
      out.write("\t\t\tvar month=0;\r\n");
      out.write("\t\t\tvar count=0;\r\n");
      out.write("\t\t\tfor(var i=0;i<special_regular.length;i++){\r\n");
      out.write("\t\t\t\tmonth=parseInt(month)+(parseInt(special_regular[i].endlist)-parseInt(special_regular[i].startlist)+1)*parseInt(special_regular[i].regular_months);\r\n");
      out.write("\t\t\t\tcount=(parseInt(count)<parseInt(special_regular[i].endlist))?parseInt(special_regular[i].endlist):parseInt(count);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tmini.get(\"leaseterm\").setValue(month);\r\n");
      out.write("\t\t\tmini.get(\"incomenumber\").setValue(count);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//判断设备款是否大于0\r\n");
      out.write("\tvar equipamt =  $minigetvalue(\"equipamt\");\r\n");
      out.write("\tif(equipamt){\r\n");
      out.write("\t\tif(Number(equipamt) <= 0 ){\r\n");
      out.write("\t\t\tmini.alert('设备款需大于0！！！');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tmini.alert('设备款不能为空！！！');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t//判断还租次数,年租息率 ，起租日是否为空，以及还租次数、年租息率格式是否正确\r\n");
      out.write("\tvar incomenumber = $minigetvalue(\"incomenumber\");\r\n");
      out.write("\tvar numRegex  = /^[-\\+]?\\d+$/;\r\n");
      out.write("\tvar rateRegex = /^[-\\+]?\\d+(\\.[0-9]{1,6})?$/;\r\n");
      out.write("\tvar yearrate = $minigetvalue(\"yearrate\");\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tvar leaseamtdate = $minigetvalue(\"leaseamtdate\");\r\n");
      out.write("\tif(!leaseamtdate){\r\n");
      out.write("\t\tmini.alert('请先输入付款日！！！');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar startdate = $minigetvalue(\"startdate\");\r\n");
      out.write("\tif(!startdate){\r\n");
      out.write("\t\tmini.alert('请先输入起租日！！！');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tmini.mask({\r\n");
      out.write("\t\tel: document.body,\r\n");
      out.write("\t\tcls: 'mini-mask-loading',\r\n");
      out.write("\t\thtml: '正在测算中，请稍后...'\r\n");
      out.write("\t});\r\n");
      out.write("\tvar o = businessForm.getData(true,true);\r\n");
      out.write("\tvar fields = businessForm.getFields();\r\n");
      out.write("\tvar resultData = [];\r\n");
      out.write("\t$.extend(resultData,fields);\r\n");
      out.write("\tfor(var index =0;index<fields.length;index++){\r\n");
      out.write("\t\t //判断是否是下拉框控件，是则同时把text属性设置combobox\r\n");
      out.write("\t\tif(fields[index].uiCls == \"mini-textbox\"){\r\n");
      out.write("\t\t\tif(fields[index].getInputText().indexOf(',')!=-1){\r\n");
      out.write("\t\t\t\t//所有textbox去掉逗号,\r\n");
      out.write("\t\t\t\tresultData[index].setValue(fields[index].getInputText().replace(/,/g,\"\"));\r\n");
      out.write("\t\t\t}else if(!fields[index].getInputText() && (fields[index].vtype == 'double' || fields[index].vtype == 'int')){\r\n");
      out.write("\t\t\t\tresultData[index].setValue('0');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("    o = businessForm.getData(true,true);//把textbox去掉,逗号之后，再次获取form\r\n");
      out.write("    if(typeof(e) == 'string'){\r\n");
      out.write("    \t//说明是租金调整\r\n");
      out.write("    \to.reckontype = e;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    o.json_knowing_corpus_plan_str = $('#id_json_knowing_corpus_plan_str').val();\r\n");
      out.write("    var docid = mini.get('conditionDocId').getValue();\r\n");
      out.write("    if(!docid){\r\n");
      out.write("\t    try{\r\n");
      out.write("\t\t    o.docid = mini.get('cust_doc_id').getValue();\r\n");
      out.write("\t    }catch(e){\r\n");
      out.write("\t    \t\r\n");
      out.write("\t    }\r\n");
      out.write("    }\r\n");
      out.write("    //将特殊规则添加到隐藏域\r\n");
      out.write("    jQuery(\"#id_json_special_regular_str\").val(mini.encode(mini.get(\"special_regular\").getData()));\r\n");
      out.write("    o.json_special_regular_str = $('#id_json_special_regular_str').val();\r\n");
      out.write("    o.json_fund_rent_plan_str  = $('#id_json_fund_rent_plan_str').val();\r\n");
      out.write("    var url=\"");
      out.print(request.getContextPath() );
      out.write("/leasing/rentCalculate.action\";\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url: url,\r\n");
      out.write("        type: \"post\",\r\n");
      out.write("        data:  o ,\r\n");
      out.write("        success: function (text) {\r\n");
      out.write("        \tvar result = mini.decode(text);\r\n");
      out.write("        \tif(result.rentcalculaters == 'yes'){\r\n");
      out.write("            \t$mini(\"enddate\").setValue(result.enddate);\r\n");
      out.write("            \t$mini(\"cleancreditmoney\").setValue(result.cleancreditmoney);//授信额度\r\n");
      out.write("            \t$mini(\"firstpaymenttotal\").setValue(result.firstpaymenttotal);//计算期初付款总计\r\n");
      out.write("            \tvar settlemethod =  mini.get('settlemethod').getValue();\r\n");
      out.write("            \t$mini(\"yearrate\").setValue(decimal(result.yearrate, 6));//年租息率\r\n");
      out.write("            \t$mini(\"yearrate_helper\").setValue(decimal(result.yearrate, 6));//年租息率辅助字段\r\n");
      out.write("            \t$mini(\"cleancreditratio\").setValue(decimal(result.cleancreditratio, 6));//授信比例\r\n");
      out.write("            \tvar fundrentplan =result.rentplanlist ;\r\n");
      out.write("            \t\r\n");
      out.write("            \tmini.get(\"fund_rent_plan_frame\").setData(fundrentplan);\r\n");
      out.write("            \t//分别把租金计划  、现金流 、资金收付计划保存至隐藏域\r\n");
      out.write("            \t$(\"#id_json_fund_rent_plan_str\").val(mini.encode(fundrentplan));\r\n");
      out.write("            \tif(!docid){//说明不在流程中 的客户报价和租金计算器\r\n");
      out.write("\t            \ttry{\r\n");
      out.write("\t\t            \t$mini(\"cust_doc_id\").setValue(result.docid)\r\n");
      out.write("\t            \t}catch(e){\r\n");
      out.write("\t            \t\t\r\n");
      out.write("\t            \t}\r\n");
      out.write("            \t}\r\n");
      out.write("            \tupdateInputThousand();\r\n");
      out.write("            \tmini.unmask(document.body);\r\n");
      out.write("            \tmini.alert('测算成功！');\r\n");
      out.write("            \tupdateInputThousand();\r\n");
      out.write("        \t}else if(result.rentcalculaters.toLowerCase() == 'rentsmall'){\r\n");
      out.write("        \t\tmini.alert('已知租金太小，请调整租金后再测算！');\r\n");
      out.write("        \t\tupdateInputThousand();\r\n");
      out.write("        \t\tmini.unmask(document.body);\r\n");
      out.write("        \t}\r\n");
      out.write("        \telse {\r\n");
      out.write("            \tmini.unmask(document.body);\r\n");
      out.write("        \t\tmini.alert(result.rentcalculatemsg);\r\n");
      out.write("            \tupdateInputThousand();\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("        },\r\n");
      out.write("        error: function (jqXHR, textStatus, errorThrown) {\r\n");
      out.write("        \tmini.unmask(document.body);\r\n");
      out.write("            alert(jqXHR.responseText);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//刷新页面当中的所有的输入框的钱数为千分位\r\n");
      out.write("function updateInputThousand(){\r\n");
      out.write("\tvar fields = businessForm.getFields();\r\n");
      out.write("\tfor(var index =0;index<fields.length;index++){\r\n");
      out.write("\t\t //判断是否是下拉框控件，是则同时把text属性设置combobox\r\n");
      out.write("\t\tif(fields[index].vtype == 'double'){\r\n");
      out.write("\t\t\tfields[index].setValue(formatNumberThousand(fields[index].getValue()));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//测算利率改变事件\r\n");
      out.write("function rentorratevaluekeyup(e){\r\n");
      out.write("\tvar id = $('#itemTd').find('span:visible')[0].id;\r\n");
      out.write("\tif(id == \"testrate\"){\r\n");
      out.write("\t\te.sender.vtype = 'rate';\r\n");
      out.write("\t}\r\n");
      out.write("\tsetformatvalue(e.sender);\r\n");
      out.write("\tvar rentorrateinputvalue = $minigetinputtext(\"rentorratevalue\");\r\n");
      out.write("\tvar ratefloattypevalue = $minigetvalue(\"ratefloattype\");\r\n");
      out.write("\tvar rentorratevalue = $minigetvalue(\"rentorrate\");\r\n");
      out.write("\tif(\"fixed\" == ratefloattypevalue && (\"rate\" == rentorratevalue || \"knowing_corpus\" == rentorratevalue)){\r\n");
      out.write("\t\t$mini(\"yearrate\").setValue(rentorrateinputvalue);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//combobx懒加载\r\n");
      out.write("function onbeforeshowpopup(e) {\t\r\n");
      out.write("\tminiui_ext.onbeforeshowpopup(e);\r\n");
      out.write("}\r\n");
      out.write("//计算期初付款总计\r\n");
      out.write("function firstpaymenttotal(e){\r\n");
      out.write("\t//首付款 +保证金 +手续费 +管理费 +其他收入 + 期初第1期租金 + 厂商返利 + 管理费\r\n");
      out.write("\t//无期初第1期租金 管理费重复\r\n");
      out.write("\tvar firstpayment = $minigetinputtext(\"firstpayment\");//首付款\r\n");
      out.write("\tvar cautionmoney = $minigetinputtext(\"cautionmoney\");//保证金 \r\n");
      out.write("\tvar managementmoney = $minigetinputtext(\"managementmoney\");//管理费\r\n");
      out.write("\tvar handlingchargemoney = $minigetinputtext(\"handlingchargemoney\");//手续费\r\n");
      out.write("\tvar otherincome = $minigetinputtext(\"otherincome\");//其他收入 \r\n");
      out.write("\tvar returnamt = $minigetinputtext(\"returnamt\");//厂商返利\r\n");
      out.write("\t$mini(\"firstpaymenttotal\").setValue(firstpayment + cautionmoney + managementmoney \r\n");
      out.write("\t\t\t\t+ handlingchargemoney + otherincome +otherincome);\r\n");
      out.write("}\r\n");
      out.write("//计算融资额\r\n");
      out.write("function cleanleasemoney(e){\r\n");
      out.write("\tvar equipamt = $minigetinputtext(\"equipamt\");//设备款\r\n");
      out.write("\tvar firstpayment = $minigetinputtext(\"firstpayment\");//首付款\r\n");
      out.write("\tvar otherleasemoney = $minigetinputtext(\"otherleasemoney\");//其他融资费用\r\n");
      out.write("\tvar cleanleasemoney = mini.get(\"cleanleasemoney\");\r\n");
      out.write("\tvar cleanleasemoneyvalue = decimal(equipamt - firstpayment+otherleasemoney,2);\r\n");
      out.write("\tcleanleasemoney.setValue(cleanleasemoneyvalue);\r\n");
      out.write("\t$setThouValue('cleanleasemoney');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//计算风险敞口 \r\n");
      out.write("function cleancreditmoney(e){\r\n");
      out.write("\t//设备款－首付款－保证金-其他收入+其他支出-前收第1期租金+保险费-厂商返利-手续费 - 管理费\r\n");
      out.write("\t//无前收第1期租金\r\n");
      out.write("\tdebugger;\r\n");
      out.write("\tvar equipamt = $minigetinputtext(\"equipamt\");//设备款\r\n");
      out.write("\tvar firstpayment = $minigetinputtext(\"firstpayment\");//首付款\r\n");
      out.write("\tvar cautionmoney = $minigetinputtext(\"cautionmoney\");//保证金 \r\n");
      out.write("\tvar otherincome = $minigetinputtext(\"otherincome\");//其他收入 \r\n");
      out.write("\tvar otherexpenditure = $minigetinputtext(\"otherexpenditure\");//其他支出\r\n");
      out.write("\tvar insuremoney = $minigetinputtext(\"insuremoney\");//保险费\r\n");
      out.write("\tvar returnamt = $minigetinputtext(\"returnamt\");//厂商返利\r\n");
      out.write("\tvar handlingchargemoney = $minigetinputtext(\"handlingchargemoney\");//手续费\r\n");
      out.write("\tvar managementmoney = $minigetinputtext(\"managementmoney\");//管理费\r\n");
      out.write("\t$mini(\"cleancreditmoney\").setValue(equipamt - firstpayment - cautionmoney - \r\n");
      out.write("\t\t\totherincome + otherexpenditure + insuremoney - returnamt - handlingchargemoney - managementmoney);\r\n");
      out.write("\tsetformatvalue($mini(\"cleancreditmoney\"));\r\n");
      out.write("}\r\n");
      out.write("//计算手续费\r\n");
      out.write("function changehandlingchargemoneyratio(e){\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tsetformatvalue($mini(\"handlingchargemoneyratio\"));\r\n");
      out.write("\tvar handlingchargemoney = mini.get(\"handlingchargemoney\");//手续费\r\n");
      out.write("\tvar handlingchargemoneyratio = mini.get(\"handlingchargemoneyratio\").getInputText().replace(/,/g,\"\");//手续费比例\r\n");
      out.write("\tvar handlingchargemoneyvalue =!equipamt || Number(equipamt)<=0 ?  0 : decimal(handlingchargemoneyratio*equipamt/100, 6);\r\n");
      out.write("\thandlingchargemoney.setValue(handlingchargemoneyvalue);\r\n");
      out.write("}\r\n");
      out.write("//计算管理费比例\r\n");
      out.write("function changemanagementmoneyratio(e){\r\n");
      out.write("\tsetformatvalue($mini(\"managementmoney\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar managementmoney = mini.get(\"managementmoney\");//管理费\r\n");
      out.write("\tvar managementmoneyratio = mini.get(\"managementmoneyratio\").getInputText().replace(/,/g,\"\");//管理费比例\r\n");
      out.write("\t\r\n");
      out.write("\tvar managementmoneyvalue = !equipamt || Number(equipamt)<=0 ?  0 : decimal(managementmoneyratio*equipamt/100, 6);\r\n");
      out.write("\tmanagementmoney.setValue(managementmoneyvalue);\r\n");
      out.write("}\r\n");
      out.write("function changeassetsratio(e){\r\n");
      out.write("\tsetformatvalue($mini(\"assetsmoney\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar assetsmoney = mini.get(\"assetsmoney\");//管理费\r\n");
      out.write("\tvar assetsratio = mini.get(\"assetsratio\").getInputText().replace(/,/g,\"\");//管理费比例\r\n");
      out.write("\t\r\n");
      out.write("\tvar managementmoneyvalue = !equipamt || Number(equipamt)<=0 ?  0 : decimal(assetsratio*equipamt/100, 6);\r\n");
      out.write("\tassetsmoney.setValue(managementmoneyvalue);\r\n");
      out.write("}\r\n");
      out.write("function changeadviserratio(e){\r\n");
      out.write("\tsetformatvalue($mini(\"assetsmoney\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar advisermoney = mini.get(\"advisermoney\");//管理费\r\n");
      out.write("\tvar adviserratio = mini.get(\"adviserratio\").getInputText().replace(/,/g,\"\");//管理费比例\r\n");
      out.write("\t\r\n");
      out.write("\tvar managementmoneyvalue = !equipamt || Number(equipamt)<=0 ?  0 : decimal(adviserratio*equipamt/100, 6);\r\n");
      out.write("\tadvisermoney.setValue(managementmoneyvalue);\r\n");
      out.write("}\r\n");
      out.write("//计算保证金\r\n");
      out.write("function changecautiondeductionratio(e){\r\n");
      out.write("\tvar cautiondeductionratio = \"cautiondeductionratio\";//风险金比例\r\n");
      out.write("\tvar cautionmoney = \"cautionmoney\";//风险金\r\n");
      out.write("\tvar cautiondeductionmoney = \"cautiondeductionmoney\";//风险金抵扣金额\r\n");
      out.write("\tvar cautionmoneyremain = \"cautionmoneyremain\";//风险金退还\r\n");
      out.write("\tsetformatvalue($mini(cautiondeductionratio));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar cautiondeductionratio = mini.get(cautiondeductionratio).getInputText().replace(/,/g,\"\");\r\n");
      out.write("\tvar cautionmoney = mini.get(cautionmoney);//保证金\r\n");
      out.write("\tvar cautiondeductionvalue =!equipamt || Number(equipamt)<=0 ?  0 : decimal(cautiondeductionratio*equipamt/100, 6);\r\n");
      out.write("\tcautionmoney.setValue(cautiondeductionvalue);\r\n");
      out.write("\t//如果保证金发生改变的话，默认是将保证金抵扣金额赋值为和保证金金额相等\r\n");
      out.write("\tmini.get(cautiondeductionmoney).setValue(!cautionmoney.getInputText().replace(/,/g,\"\") ? 0 : cautionmoney.getInputText().replace(/,/g,\"\"));\r\n");
      out.write("\tmini.get(cautionmoneyremain).setValue(0);\r\n");
      out.write("}\r\n");
      out.write("//根据待投保年费率计算投保收入\r\n");
      out.write("function changeinsurerateratio(e){\r\n");
      out.write("\tsetformatvalue(mini.get(\"insurerate\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar insurerate = mini.get(\"insurerate\").getValue();\r\n");
      out.write("\tvar insureincome=!equipamt || Number(equipamt)<=0 ?  0 : decimal(insurerate*equipamt/100, 2);\r\n");
      out.write("\tmini.get(\"insureincome\").setValue(!insurerate?0:insureincome);\r\n");
      out.write("\tsetformatvalue(mini.get(\"insureincome\"));\r\n");
      out.write("}\r\n");
      out.write("//根据投保成本年费率计算投保支出\r\n");
      out.write("function changeinsurecostrateratio(e){\r\n");
      out.write("\tsetformatvalue(mini.get(\"insurecostrate\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar insurecostrate = mini.get(\"insurecostrate\").getValue();\r\n");
      out.write("\tvar insureexpenditure=!equipamt || Number(equipamt)<=0 ?  0 : decimal(insurecostrate*equipamt/100, 2);\r\n");
      out.write("\tmini.get(\"insureexpenditure\").setValue(!insureexpenditure?0:insureexpenditure);\r\n");
      out.write("\tsetformatvalue(mini.get(\"insureexpenditure\"));\r\n");
      out.write("}\r\n");
      out.write("function checkcode(e){\r\n");
      out.write("\t//IE 中 Event 对象使用 keyCode 获得键入字符的 Unicode 编码  \r\n");
      out.write("    //DOM 中 Event 对象 使用 charCode 获得键入字符的 Unicode 编码  \r\n");
      out.write("    var char_code = e.htmlEvent.charCode ? e.htmlEvent.charCode : e.htmlEvent.keyCode;  \r\n");
      out.write("    //Unicode 编码中， 0~9 的编码的十进制 是 48~57 之间 ， 0为 48， 9 为57  \r\n");
      out.write("    if(char_code<48 || char_code >57){  \r\n");
      out.write("        alert(\"只允许输入数字\");     \r\n");
      out.write("        return false;  \r\n");
      out.write("    }  \r\n");
      out.write("    else{  \r\n");
      out.write("        return true;      \r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("//计算设备款\r\n");
      out.write("function changeequipamtvalue(e){\r\n");
      out.write("\t\r\n");
      out.write("\t//var code = checkcode(e);\r\n");
      out.write("\tsetformatvalue($mini(\"equipamt\"));\r\n");
      out.write("\tchangefirstpayment();//计算首付款\r\n");
      out.write("\tchangecautiondeductionratio('');//计算保证金比例\r\n");
      out.write("\tchangecautiondeductionratio('fac');//计算保证金比例\r\n");
      out.write("\tchangemanagementmoneyratio();//计算管理费比例\r\n");
      out.write("\tchangehandlingchargemoneyratio();//计算手续费比例\r\n");
      out.write("\tchangeassetsratio();\r\n");
      out.write("\tchangeadviserratio();\r\n");
      out.write("\t//cleancreditmoney();//风险敞口 生成资金计划计算\r\n");
      out.write("\tcleanleasemoney();//融资额\r\n");
      out.write("\t//changecleancreditratio();//计算净授信比例  生成资金计划计算\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//计算首付款\r\n");
      out.write("function changefirstpayment(e){\r\n");
      out.write("\tsetformatvalue($mini(\"firstpaymentratio\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar firstpaymentratio = $minigetinputtext(\"firstpaymentratio\");//首付比例\r\n");
      out.write("\t\r\n");
      out.write("\tvar firstpayment = mini.get(\"firstpayment\");//首付款\r\n");
      out.write("\tvar firstpaymentvalue = !equipamt || Number(equipamt)<=0 ?  0 : decimal(firstpaymentratio*equipamt/100, 6);\r\n");
      out.write("\tfirstpayment.setValue(firstpaymentvalue);\r\n");
      out.write("\tcleanleasemoney();//融资额\r\n");
      out.write("}\r\n");
      out.write("//计算净授信比例 \r\n");
      out.write("function changecleancreditratio(e){\r\n");
      out.write("\tsetformatvalue($mini(\"cleancreditmoney\"));\r\n");
      out.write("\tvar equipamt = getNumber(\"equipamt\");//设备款\r\n");
      out.write("\tvar cleancreditmoney = $minigetinputtext(\"cleancreditmoney\");//风险敞口\r\n");
      out.write("\tvar cleancreditratio = mini.get(\"cleancreditratio\");//风险敞口比例\r\n");
      out.write("\tvar cleancreditratiovalue = !equipamt || Number(equipamt)<=0 ?  0 : decimal(cleancreditmoney/equipamt*100, 6);\r\n");
      out.write("\tcleancreditratio.setValue(cleancreditratiovalue);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//计算保证金退还金额\r\n");
      out.write("function cautionmoneyremainvaluechange(e){\r\n");
      out.write("\tvar cautiondeductionratio = \"cautiondeductionratio\";\r\n");
      out.write("\tvar cautionmoney = \"cautionmoney\";\r\n");
      out.write("\tvar cautiondeductionmoney = \"cautiondeductionmoney\";\r\n");
      out.write("\tvar cautionmoneyremain = \"cautionmoneyremain\";\r\n");
      out.write("\tvar fac = \"\";\r\n");
      out.write("\tif(e.sender.id != 'cautiondeductionmoney'){\r\n");
      out.write("\t\tcautiondeductionratio = \"faccautiondeductionratio\";\r\n");
      out.write("\t\tcautionmoney = \"faccautionmoney\";\r\n");
      out.write("\t\tcautiondeductionmoney = \"faccautiondeductionmoney\";\r\n");
      out.write("\t\tcautionmoneyremain = \"faccautionmoneyremain\";\r\n");
      out.write("\t\tfac = \"厂商\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar cautionmoneyM = $minigetinputtext(cautionmoney);//保证金\r\n");
      out.write("\tvar cautiondeductionmoneyM = $minigetinputtext(cautiondeductionmoney);//保证金抵扣金额\r\n");
      out.write("\tvar cautionmoneyremainField = mini.get(cautionmoneyremain);//保证金退还金额\r\n");
      out.write("// \tif(\"\" == cautionmoney || \"\" == cautiondeductionmoney){\r\n");
      out.write("// \t\tcautionmoneyremain.setValue(\"\");\r\n");
      out.write("// \t\treturn;\r\n");
      out.write("// \t}\r\n");
      out.write("\tif(!isNumber(cautiondeductionmoneyM)){\r\n");
      out.write("\t\tmini.get(cautiondeductionmoney).setValue(cautionmoneyM);\r\n");
      out.write("\t\tcautionmoneyremainField.setValue('0');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tif(Number(cautiondeductionmoneyM) < 0 ){\r\n");
      out.write("\t\t\t//mini.alert(fac+'保证金退还金额需大于0！');\r\n");
      out.write("\t\t\tmini.get(cautiondeductionmoney).setValue(cautionmoneyM);\r\n");
      out.write("\t\t\tcautionmoneyremainField.setValue('0');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(Number(cautiondeductionmoneyM) > Number(cautionmoneyM) ){\r\n");
      out.write("\t\t\t//mini.alert(fac+'保证金退还金额需小于等于'+fac+'保证金金额');\r\n");
      out.write("\t\t\tmini.get(cautiondeductionmoney).setValue(cautionmoneyM);\r\n");
      out.write("\t\t\tsetformatvalue($mini(cautiondeductionmoney));\r\n");
      out.write("\t\t\tcautionmoneyremainField.setValue('0');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tvar cautionmoneyremainvalue = decimal(cautionmoneyM - cautiondeductionmoneyM,2);\r\n");
      out.write("\tcautionmoneyremainField.setValue(cautionmoneyremainvalue);\r\n");
      out.write("\tsetformatvalue($mini(cautionmoney));\r\n");
      out.write("\tsetformatvalue($mini(cautiondeductionmoney));\r\n");
      out.write("\tsetformatvalue($mini(cautionmoneyremain));\r\n");
      out.write("}\r\n");
      out.write("//计算保险费\r\n");
      out.write("function insuremoneyvaluechange(e){\r\n");
      out.write("\tsetformatvalue($mini(\"insurancelessee_show\"));\r\n");
      out.write("\tsetformatvalue($mini(\"insurancelessor_show\"));\r\n");
      out.write("\tsetformatvalue($mini(\"insuremoney\"));\r\n");
      out.write("\tvar insurancelessee = getNumber(\"insurancelessee_show\");//承租人\r\n");
      out.write("\tvar insurancelessor = getNumber(\"insurancelessor_show\");//我司\r\n");
      out.write("\t$('#insurancelessee').val(insurancelessee);\r\n");
      out.write("\t$('#insurancelessor').val(insurancelessor); \r\n");
      out.write("\tif(e.sender.id == 'insurancelessor_show'){\r\n");
      out.write("\t\tvar insuremoney = mini.get(\"insuremoney\");//保证金退还金额\r\n");
      out.write("\t\tvar insuremoneyvalue = insurancelessee + insurancelessor;\r\n");
      out.write("\t\tinsuremoney.setValue(insuremoneyvalue);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function isNumber(moneyText){\r\n");
      out.write("\tvar rateRegex = /^[-\\+]?\\d+(\\.\\d+)?$/;\r\n");
      out.write("\treturn rateRegex.test(moneyText);\r\n");
      out.write("}\r\n");
      out.write("function changeRentPlanTableButton(e){\r\n");
      out.write("\tvar table = mini.get('fund_rent_plan_frame');\r\n");
      out.write("\tvar data = mini.get('fund_rent_plan_frame').getData();\r\n");
      out.write("\t$('#id_fund_rent_plan_frame').html('');\r\n");
      out.write("\tmini.parse();\r\n");
      out.write("\tif(typeof(e) != \"string\"){\r\n");
      out.write("\t\t$miniSetCombValue(\"settlemethod\",e.sender.value,e.sender.text);\r\n");
      out.write("\t}\r\n");
      out.write("\tvar settlemethod = mini.get('settlemethod').getValue();\r\n");
      out.write("\tif(settlemethod == 'irregular_rent'){\r\n");
      out.write("\t\ttempColume.tools =toolsIrregular ;\r\n");
      out.write("\t\t$miniSetCombValue('rentorrate','rate','按年利率计算租金');\r\n");
      out.write("\t\t$miniSetCombValue('ratefloattype','fixed','固定利率');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$miniDisable(\"ratefloattype\");\r\n");
      out.write("\t\t$miniDisable(\"ratefloatamt\");\r\n");
      out.write("\t\t$miniDisable(\"baserate\");\r\n");
      out.write("\t\t$miniEnable(\"yearrate\");\r\n");
      out.write("\t\t$mini(\"ratefloatamt\").setValue(\"0\");\r\n");
      out.write("\t\t$mini(\"baserate\").setValue(\"0\");\r\n");
      out.write("\t\t$mini(\"yearrate\").setValue(\"0\");\r\n");
      out.write("\t\t$mini(\"rentorratevalue\").setValue(\"0\");\r\n");
      out.write("\t\t$('#testrent').hide();\r\n");
      out.write("\t\t$('#testrate').show();\r\n");
      out.write("\t\tif(typeof(e) != \"string\"){\r\n");
      out.write("\t\t\trentorrateitemchange();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmini.get(\"div_special_regular\").hide();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\ttempColume.tools =toolsSpecial ;\r\n");
      out.write("\t\tmini.get(\"div_special_regular\").show();\r\n");
      out.write("\t\t$miniSetCombValue('rentorrate','rate','按年利率计算租金');\r\n");
      out.write("\t\t$('#calculateButton').show();\r\n");
      out.write("\t\t//再去判断是否是按租金推算年租息率\r\n");
      out.write("\t\tif(mini.get('rentorrate').getValue() == 'rent'){\r\n");
      out.write("\t\t\t$miniSetCombValue('ratefloattype','fixed','固定利率');\r\n");
      out.write("\t\t\t$miniDisable(\"ratefloattype\");\r\n");
      out.write("\t\t\t$miniDisable(\"ratefloatamt\");\r\n");
      out.write("\t\t\t$miniDisable(\"baserate\");\r\n");
      out.write("\t\t\t$mini(\"ratefloatamt\").setValue(\"0\");\r\n");
      out.write("\t\t\t$mini(\"baserate\").setValue(\"0\");\r\n");
      out.write("\t\t\tmini.get('rentorratevalue').setValue('0');\r\n");
      out.write("\t\t\t$mini(\"yearrate\").setValue(\"0\");\r\n");
      out.write("\t\t\t$('#testrent').show();\r\n");
      out.write("\t\t\t$('#testrate').hide();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#testrent').hide();\r\n");
      out.write("\t\t\t$('#testrate').show();\r\n");
      out.write("\t\t\t$miniEnable(\"ratefloattype\");\r\n");
      out.write("\t\t\tif($minigetvalue(\"ratefloattype\") != \"fixed\"){\r\n");
      out.write("\t\t\t\t$miniEnable(\"ratefloatamt\");\r\n");
      out.write("\t\t\t\t$miniEnable(\"baserate\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$miniDisable(\"ratefloatamt\");\r\n");
      out.write("\t\t\t\t$miniDisable(\"baserate\");\r\n");
      out.write("\t\t\t\t$mini(\"ratefloatamt\").setValue(\"0\");\r\n");
      out.write("\t\t\t\t$mini(\"baserate\").setValue(\"0\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\tnew ApTable(tempColume);\r\n");
      out.write("\t});\r\n");
      out.write("\ttempColume = mini.clone(tempColume2);\r\n");
      out.write("}\r\n");
      out.write("function changeInputToThoud(e){\r\n");
      out.write("\tsetformatvalue(e.sender);\r\n");
      out.write("}\r\n");
      out.write("function $setThouValue(id){\r\n");
      out.write("\tsetformatvalue(mini.get(id));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkInputIntCompareToZero(e){\r\n");
      out.write("\tsetformatvalue(e.sender);\r\n");
      out.write("\tif(isNaN(e.sender.value) || Number(e.sender.value) < 0){\r\n");
      out.write("\t\te.sender.setValue(0);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function $miniEnable(id){\r\n");
      out.write("\tvar miniObj = mini.get(id);\r\n");
      out.write("\tminiObj.enable();\r\n");
      out.write("\tvar uiCl = miniObj.uiCls;\r\n");
      out.write("\tvar jQueryObj = $('#'+id);\r\n");
      out.write("\tif(uiCl == 'mini-textbox'){\r\n");
      out.write("\t\tjQueryObj.find('.mini-textbox-border').attr(\"class\", \"mini-textbox-border\");\r\n");
      out.write("\t}else if(uiCl == 'mini-combobox'){\r\n");
      out.write("\t\tjQueryObj.find('.mini-textbox-border').attr(\"style\", \"\");\r\n");
      out.write("\t\tjQueryObj.find('.mini-buttonedit-border').attr(\"style\", \"\");\r\n");
      out.write("\t\tjQueryObj.find(\".mini-buttonedit-button\").css(\"display\", \"block\");\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function $miniDisable(id){\r\n");
      out.write("\tvar miniObj = mini.get(id);\r\n");
      out.write("\tminiObj.disable();\r\n");
      out.write("\tvar uiCl = miniObj.uiCls;\r\n");
      out.write("\tvar jQueryObj = $('#'+id);\r\n");
      out.write("\tif(uiCl == 'mini-combobox'){\r\n");
      out.write("\t\tjQueryObj.find(\".mini-buttonedit-button\").css(\"display\", \"none\");\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function $miniSetCombValue(id,value,text){\r\n");
      out.write("\tvar miniObj = mini.get(id);\r\n");
      out.write("\tminiObj.setValue(value);\r\n");
      out.write("\tminiObj.setText(text);\r\n");
      out.write("\tvar miniHiddenObj = mini.get(\"rawValue_\"+id).setValue(text);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getNumber(id){\r\n");
      out.write("    var value = mini.get(id).getValue();\r\n");
      out.write("    try {\r\n");
      out.write("    \tvalue = (value+'').replace(/,/g,'');\r\n");
      out.write("    \tvalue = value == '' ? '0' : value;\r\n");
      out.write("    \tvalue = parseFloat(value);\r\n");
      out.write("    } catch(e) {\r\n");
      out.write("    \tvalue = 0;\r\n");
      out.write("    }\r\n");
      out.write("    return value;\r\n");
      out.write("}\r\n");
      out.write("function decimalReal(num,v)\r\n");
      out.write("{\r\n");
      out.write("   var dight  =(num*Math.pow(10,v)/Math.pow(10,v)).toFixed(v);  \r\n");
      out.write("   return parseFloat(dight);\r\n");
      out.write("} \r\n");
      out.write("//四舍五入\r\n");
      out.write("function decimal(num,v)\r\n");
      out.write("{\t//num表示要四舍五入的数,v表示要保留的小数位数。\r\n");
      out.write("\tif(0 == v)\r\n");
      out.write("\t{\r\n");
      out.write("\t\treturn decimalReal(decimalReal(num,2),0);\r\n");
      out.write("\t}\r\n");
      out.write("    return decimalReal(num,v);\t\t\r\n");
      out.write("}\r\n");
      out.write("function $minigetvalue(id){\r\n");
      out.write("\treturn mini.get(id).getValue();\r\n");
      out.write("}\r\n");
      out.write("function $mini(id){\r\n");
      out.write("\treturn mini.get(id);\r\n");
      out.write("}\r\n");
      out.write("function $minigetinputtext(id){\r\n");
      out.write("\tvar value = mini.get(id).getInputText();\r\n");
      out.write("\ttry {\r\n");
      out.write("    \tvalue = (value+'').replace(/,/g,'');\r\n");
      out.write("    \tvalue = value == '' ? '0' : value;\r\n");
      out.write("    \tvalue = parseFloat(value);\r\n");
      out.write("    } catch(e) {\r\n");
      out.write("    \tvalue = 0;\r\n");
      out.write("    }\r\n");
      out.write("    return value;\r\n");
      out.write("}\r\n");
      out.write("function startReloadConditionContent(){\r\n");
      out.write("\tvar settlemethod = $minigetvalue('settlemethod') || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty requestScope['settlemethod'] ? 'even_rent' : requestScope['settlemethod'] }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\tif(settlemethod == 'irregular_rent'){\r\n");
      out.write("\t\tjQuery('#calculateType').find('td[displayid=\"rentorratevaluetd\"]').hide();\r\n");
      out.write("\t\t$miniSetCombValue(\"rentorrate\",\"knowing_rent\",\"已知租金规则测算\");\r\n");
      out.write("\t\t$miniSetCombValue(\"settlemethod\",\"irregular_rent\",\"不规则\");\r\n");
      out.write("\t\t$('#testrent').hide();\r\n");
      out.write("\t\t$('#testrate').show();\r\n");
      out.write("\t}\r\n");
      out.write("\tupdateInputThousand();//刷新页面当中的所有金额为千分位\r\n");
      out.write("\trentorratevaluechange('start');//年租息率只读\r\n");
      out.write("\tratefloattypevaluechange('start');//固定利率设置只读\r\n");
      out.write("\tinsuremoneytypevaluechange('start');//保险计算方式\t\r\n");
      out.write("}\r\n");
      out.write("function calculateBeforeInterest(e){\r\n");
      out.write("\tvar fundChargeList ;\r\n");
      out.write("\tvar startDate = mini.get('startdate').getFormValue();\r\n");
      out.write("\tvar yearRate = mini.get('yearrate').getValue();\r\n");
      out.write("\tif(typeof(e) == 'object'){\r\n");
      out.write("\t\tvar miniTable = mini.get('condition_beforeInterest');\r\n");
      out.write("\t\tif(!startDate){\r\n");
      out.write("\t\t\tmini.alert('请先选择起租日！！！！');\r\n");
      out.write("\t\t\t//mini.get('beforeInterestContainer').hide();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfundChargeList =  miniTable.getData();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tfundChargeList = mini.decode('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_fund_plan_equipamt_str ? \"[]\" : json_fund_plan_equipamt_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("')\r\n");
      out.write("\t}\r\n");
      out.write("\tvar beforeInterest = 0;\r\n");
      out.write("\tfor(var i = 0 ; i < fundChargeList.length ; i++){\r\n");
      out.write("\t\tvar fundCharge = fundChargeList[i];\r\n");
      out.write("\t\tvar betweenDays = Number(startDate.toDate('yyyy-MM-dd') - fundCharge.plandate.toDate('yyyy-MM-dd'))/(24 * 60 *60 *1000);\r\n");
      out.write("\t\tvar beforeInterestBranch = decimal(betweenDays/365*Number(fundCharge.factmoney)*Number(yearRate)/100,2); \r\n");
      out.write("\t\tbeforeInterest += beforeInterestBranch;\r\n");
      out.write("\t}\r\n");
      out.write("\tbeforeInterest = decimal(beforeInterest,2);\r\n");
      out.write("\tmini.get('beforeinterest').setValue(beforeInterest);\r\n");
      out.write("\tmini.get('beforeinterest').setText(beforeInterest);\r\n");
      out.write("\tmini.get('beforeInterestContainer').hide();\r\n");
      out.write("}\r\n");
      out.write("function setformatvalue(m){\r\n");
      out.write("\tvar pMoneyOri = m.getInputText().trim();\r\n");
      out.write("\tvar pMoney = pMoneyOri.replace(/,/gi,\"\");\r\n");
      out.write("\tvar pMoneyReg = /^[-\\+]?\\d+[\\.]?([0-9]{1,6})?$/;\r\n");
      out.write("\tif((pMoneyOri && pMoneyOri.length>=0) && !pMoneyReg.test(pMoney)){\r\n");
      out.write("\t\tpMoney = 0;\r\n");
      out.write("\t\tm.setValue();\r\n");
      out.write("\t\tm.setValue('0');\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t//把非数字的字符格式化成空格、并千分位\r\n");
      out.write("\t\tm.setValue(formatNumberThousand(pMoney));\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
