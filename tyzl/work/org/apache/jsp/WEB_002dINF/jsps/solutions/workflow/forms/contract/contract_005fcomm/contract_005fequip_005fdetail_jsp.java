/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-05-19 05:22:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.contract.contract_005fcomm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class contract_005fequip_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tlds/minidict.tld", Long.valueOf(1486341662546L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    if (_005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody != null) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.release();
    if (_005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody != null) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function importMiniTableCallBack(message,tableid){\r\n");
      out.write("\t var info=eval(\"(\"+message+\")\");\r\n");
      out.write("\t alert(info.message);\r\n");
      out.write("\t var tabledate=info.tabledate;\r\n");
      out.write("\t if(\"\"!=tabledate){\r\n");
      out.write("\t    var grid=mini.get(tableid);\r\n");
      out.write("        grid.set({data:mini.decode(tabledate)});\r\n");
      out.write("\t }\r\n");
      out.write("     mini.get(\"id_minitableimport\").hide();\r\n");
      out.write("     mini.unmask(document.body);\r\n");
      out.write("}\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\tvar showTools = true;\r\n");
      out.write("\tif('");
      if (_jspx_meth_mini_005fparam_005f0(_jspx_page_context))
        return;
      out.write("' == 'true' || isViewHistoryTask == true){showTools = false;};\r\n");
      out.write("\tvar buttons=[ 'add', '-', 'edit', '-', 'remove'];\r\n");
      out.write("\tif('");
      if (_jspx_meth_mini_005fparam_005f1(_jspx_page_context))
        return;
      out.write("' != ''){\r\n");
      out.write("\t\t var s_buttons='");
      if (_jspx_meth_mini_005fparam_005f2(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\t var v_buttons=s_buttons.split(\",\");\r\n");
      out.write("\t\t buttons=[];\r\n");
      out.write("\t\t for(var i=0;i<v_buttons.length;i++){\r\n");
      out.write("\t\t\t buttons.push(v_buttons[i]);\r\n");
      out.write("\t\t }\r\n");
      out.write("\t}\r\n");
      out.write("\t//获取父页面中保存在hidden域的值\r\n");
      out.write("\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\t new ApTable({\r\n");
      out.write("\t\t\tid: \"contract_equip\",\r\n");
      out.write("\t\t\trenderTo: \"id_table_contract_equip_detail\",\r\n");
      out.write("\t\t\twidth: globalClientWidth - 20,\r\n");
      out.write("\t\t\theight: 360,\r\n");
      out.write("\t\t\tlazyLoad: false,\r\n");
      out.write("\t\t\ttitle: \"\",\r\n");
      out.write("\t\t\tisClickLoad:false,\r\n");
      out.write("\t\t\tremoteOper : false,\r\n");
      out.write("\t\t\tshowPager: false,\r\n");
      out.write("\t\t\tmultiSelect: true,\r\n");
      out.write("\t\t\ttitle:'',\r\n");
      out.write("\t\t\timportTargetClass:'',//导入EXCEL对应的类\r\n");
      out.write("\t\t\timportOrExPortCallBack:'',//导入回调方法\r\n");
      out.write("\t\t\timportHeaderIndex:'3',//标题行\r\n");
      out.write("\t\t\timportDataIndex:'4',//数据行\r\n");
      out.write("\t\t\tshowToolbar: showTools,\r\n");
      out.write("\t\t\tvirtualScroll:true,\r\n");
      out.write("\t\t\ttools : buttons,\r\n");
      out.write("\t\t\tdata: JsonUtil.decode('");
      if (_jspx_meth_mini_005fparam_005f3(_jspx_page_context))
        return;
      out.write("'),\r\n");
      out.write("\t\t\tcolumns: [\r\n");
      out.write("\t\t\t\t\t\t{type:'indexcolumn'},\r\n");
      out.write("\t\t\t\t\t\t{type:'checkcolumn'},\r\n");
      out.write("\t\t\t\t\t\t{field:'id',header:'id',visible: false},\r\n");
      out.write("\t\t\t\t\t\t{field:'equipname',header:'设备名称',\r\n");
      out.write("\t\t\t\t\t\t\t  formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t\t      required:true,\r\n");
      out.write("\t\t\t\t\t\t\t\t    labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t\t\t     maxLength:120,\r\n");
      out.write("\t\t\t\t\t\t\t\t       colspan:3,\r\n");
      out.write("\t\t\t\t\t\t\t\t         width:'100%'}},\r\n");
      out.write("\t\t\t\t\t\t{field:'devicetypename', header:'设备分类', \r\n");
      out.write("\t\t\t\t\t\t\t      formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t          fieldVisible:false,\r\n");
      out.write("\t\t\t\t\t\t\t     fillFromFieldName:'devicetype',\r\n");
      out.write("\t\t\t\t\t\t\t          fillProperty:'name',\r\n");
      out.write("\t\t\t\t\t\t           entityClassName:'com.tenwa.business.entity.DictionaryData',\t\r\n");
      out.write("\t\t\t\t\t\t\t entityHeaderFieldName:'name'}},\r\n");
      out.write("\t\t\t\t\t\t{field:'devicetype', header:'设备分类', visible:false,\r\n");
      out.write("\t\t\t\t\t\t\t\t  formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t               newLine:true,\r\n");
      out.write("\t\t\t\t\t\t\t                  type:'combobox',\r\n");
      out.write("\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t             textField:'name',\r\n");
      out.write("\t\t\t\t\t\t\t            valueField:'value',\r\n");
      out.write("\t\t\t\t\t\t\t          fieldVisible:true,\r\n");
      out.write("\t\t\t\t\t\t\t                params:{pid: 'leas_type', xmlFileName:'combos/comboDict.xml'}}},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t{field: 'nowtotal', header: '设备现值',dataType:\"currency\",align:'right',summary:true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype:'thousand',\r\n");
      out.write("\t\t\t\t\t\t\t\t              required:true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvtype:'thousand'}},\t                \r\n");
      out.write("\t\t\t\t\t\t{field: 'buildupstop', header:'建造起止期',\r\n");
      out.write("\t\t\t\t\t\t\t\t  formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t               newLine:true\r\n");
      out.write("\t\t\t\t\t\t\t\t  }},\r\n");
      out.write("\t\t\t\t\t\t{field: 'startstopusecycle', header:'起止使用周期',\r\n");
      out.write("\t\t\t\t\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t\t}},\t\t\t\t\t            \r\n");
      out.write("\t\t\t\t\t\t{field:'cenote',header:'备注',\r\n");
      out.write("\t\t\t\t\t\t\t      formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t             maxLength:500,\r\n");
      out.write("\t\t\t\t\t\t\t               newLine:true,\r\n");
      out.write("\t\t\t\t\t\t\t                  type:'textarea',\r\n");
      out.write("\t\t\t\t\t\t\t               colspan:3,\r\n");
      out.write("\t\t\t\t\t\t\t                height:70,\r\n");
      out.write("\t\t\t\t\t\t\t                 width:'100%'\r\n");
      out.write("\t\t\t\t\t\t}}\r\n");
      out.write("\t\t\t\t\t]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("//计算设备总价\r\n");
      out.write("function adjustTotalPrice(e){\r\n");
      out.write("\tvar equipnum =getMiniEditFormField(\"contract_equip.equipnum\").getInputText().trim();\r\n");
      out.write("\tvar price = getMiniEditFormField(\"contract_equip.price\").getInputText().trim().replace(/,/g,\"\");\r\n");
      out.write("\tequipnum = equipnum || 0;\r\n");
      out.write("\tprice = price || 0;\r\n");
      out.write("    if (!price.match(/^(:?(:?\\d+.\\d+)|(:?\\d+))$/)){price=0;\r\n");
      out.write("    getMiniEditFormField(\"contract_equip.price\").text=0;}else{\r\n");
      out.write("    \t\r\n");
      out.write("    }\r\n");
      out.write("\tvar temp = Number(equipnum) * Number(price);\r\n");
      out.write("\tif(isNaN(temp)){temp=0;}\r\n");
      out.write("\tgetMiniEditFormField(\"contract_equip.equipprice\").setValue(formatNumberThousand(decimal(temp,2)));\r\n");
      out.write("\tif(e.sender.name!=\"equipnum\"){setapcolumnformatvalue(e)\t};\r\n");
      out.write("}\r\n");
      out.write("//检查租赁物件必填和交易价和测算中的价格是否一样\r\n");
      out.write("function checkEquipIsNull(){\r\n");
      out.write("\tvar grid1 = mini.get(\"contract_equip\");\r\n");
      out.write("\tvar jsondata=grid1.getData();\r\n");
      out.write("\tif(jsondata.length<=0){mini.alert(\"请填写租赁物！！\");return false;}\r\n");
      out.write("\treturn true;\r\n");
      out.write("\t//租赁物总价\r\n");
      out.write("\tvar totalPrice = 0;\r\n");
      out.write("\tfor ( var i = 0; i < jsondata.length; i++) {\r\n");
      out.write("\t\ttotalPrice += parseFloat(jsondata[i]['equipprice']);\r\n");
      out.write("\t}\r\n");
      out.write("\t//计算商务条件的设备款\r\n");
      out.write("\tvar tempequipAmt = mini.get(\"equipamt\").getValue();\r\n");
      out.write("\ttempequipAmt=tempequipAmt.replace(/,/g,\"\");\r\n");
      out.write("\tvar equipAmt=parseFloat(tempequipAmt).toFixed(2);\r\n");
      out.write("\ttotalPrice=parseFloat(totalPrice).toFixed(2);\r\n");
      out.write("\tequipAmt=parseFloat(equipAmt).toFixed(2);\r\n");
      out.write("\tif (parseFloat(totalPrice) != parseFloat(equipAmt)) {\r\n");
      out.write("\t\tmini.alert(\"【租赁物明细】标签的合计总价[\" + totalPrice + \"]和【拟商务条件】标签中的设备款[\" + equipAmt + \"]不相等,请检查.\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"id_table_contract_equip_detail\" style=\"width:100%;height:100%;\"></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_mini_005fparam_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f0 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f0.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/forms/contract/contract_comm/contract_equip_detail.jsp(17,5) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f0.setName("isView");
    int _jspx_eval_mini_005fparam_005f0 = _jspx_th_mini_005fparam_005f0.doStartTag();
    if (_jspx_th_mini_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f0);
    return false;
  }

  private boolean _jspx_meth_mini_005fparam_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f1 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f1.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f1.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/forms/contract/contract_comm/contract_equip_detail.jsp(19,5) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f1.setName("buttons");
    int _jspx_eval_mini_005fparam_005f1 = _jspx_th_mini_005fparam_005f1.doStartTag();
    if (_jspx_th_mini_005fparam_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f1);
    return false;
  }

  private boolean _jspx_meth_mini_005fparam_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f2 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f2.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f2.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/forms/contract/contract_comm/contract_equip_detail.jsp(20,18) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f2.setName("buttons");
    int _jspx_eval_mini_005fparam_005f2 = _jspx_th_mini_005fparam_005f2.doStartTag();
    if (_jspx_th_mini_005fparam_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f2);
    return false;
  }

  private boolean _jspx_meth_mini_005fparam_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f3 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f3.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f3.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/forms/contract/contract_comm/contract_equip_detail.jsp(48,26) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f3.setName("json_contract_equip_str");
    // /WEB-INF/jsps/solutions/workflow/forms/contract/contract_comm/contract_equip_detail.jsp(48,26) name = defaultValue type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f3.setDefaultValue("[]");
    int _jspx_eval_mini_005fparam_005f3 = _jspx_th_mini_005fparam_005f3.doStartTag();
    if (_jspx_th_mini_005fparam_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody.reuse(_jspx_th_mini_005fparam_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fdefaultValue_005fnobody.reuse(_jspx_th_mini_005fparam_005f3);
    return false;
  }
}
