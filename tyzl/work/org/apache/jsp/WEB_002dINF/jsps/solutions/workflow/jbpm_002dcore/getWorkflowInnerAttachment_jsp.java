/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-05-19 05:22:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.jbpm_002dcore;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class getWorkflowInnerAttachment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/tlds/spring.tld", Long.valueOf(1486341662563L));
    _jspx_dependants.put("/WEB-INF/tlds/minidict.tld", Long.valueOf(1486341662546L));
    _jspx_dependants.put("/WEB-INF/tlds/c.tld", Long.valueOf(1486341662557L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    if (_005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody != null) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.release();
    if (_005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody != null) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.release();
    if (_005fjspx_005ftagPool_005fc_005fif_0026_005ftest != null) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"mini-panel\" maskOnLoad=\"false\" title=\"");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("\" style=\"width: 100%;position: relative;\">\r\n");
      out.write("\t<div id=\"id_workflowAttachmentContainer\" style=\"width: 100%;\"></div>\r\n");
      out.write("</div>\r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write("\tfunction loadWorkflowAttachment() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar pageHeightV = jQuery(window).height() - 150;\r\n");
      out.write("\t\tvar pageWidthV = jQuery(window).width() - 40;\r\n");
      out.write("\t\tjQuery('#id_workflowAttachmentContainer').css({height:pageHeightV});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar infoFlag = \"attachment\";\r\n");
      out.write("\t\tif(lazyLoadedObj[infoFlag]){\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!window.initFileListParams){\r\n");
      out.write("\t\t\tapAttachmentFileUpload({\r\n");
      out.write("\t\t\t\trenderTo:'id_workflowAttachmentContainer',\r\n");
      out.write("\t\t\t\tmodule:'WorkflowAttchmentFiles',\r\n");
      out.write("\t\t\t\tid:'id_customworkflowattachment',\r\n");
      out.write("\t\t\t\tbatchDownloadAttachmentFileTitle:window.assignBatchDownloadAttachmentFileTitle||\"");
      if (_jspx_meth_mini_005fparam_005f0(_jspx_page_context))
        return;
      out.write("\",\r\n");
      out.write("\t\t\t\t//attachmentFileDictListImplBeanName:'commonAttachmentFileDictList',\r\n");
      out.write("\t\t\t\tattachmentType:window.assignAttachmentTypeIds||'");
      if (_jspx_meth_mini_005fparam_005f1(_jspx_page_context))
        return;
      out.write("',\r\n");
      out.write("\t\t\t\tidentifierOne:window.assignAttachmentKeyOne||\"");
      if (_jspx_meth_mini_005fparam_005f2(_jspx_page_context))
        return;
      out.write("\",\r\n");
      out.write("\t\t\t\tidentifierTwo:window.assignAttachmentKeyTwo||jQuery(\"#id_currentHistoryTaskInfo_keyOne\").val(),\r\n");
      out.write("\t\t\t\tidentifierThree:window.assignAttachmentKeyThree||jQuery(\"#id_currentHistoryTaskInfo_keyTwo\").val(),\r\n");
      out.write("\t\t\t\tidentifierFour:window.assignAttachmentKeyFour||jQuery(\"#id_currentHistoryTaskInfo_keyThree\").val(),\r\n");
      out.write("\t\t\t\tidentifierFive:window.assignAttachmentKeyFive||jQuery(\"#id_currentHistoryTaskInfo_keyFour\").val(),\r\n");
      out.write("\t\t\t\tidentifierSix:window.assignAttachmentKeySix||jQuery(\"#id_currentHistoryTaskInfo_keyFive\").val(),\r\n");
      out.write("\t\t\t\tidentifierSeven:window.assignAttachmentKeySeven||jQuery(\"#id_currentHistoryTaskInfo_keySix\").val(),\r\n");
      out.write("\t\t\t\tidentifierEight:window.assignAttachmentKeyEight||jQuery(\"#id_currentHistoryTaskInfo_keySeven\").val(),\r\n");
      out.write("\t\t\t\tidentifierNine:window.assignAttachmentKeyNine||jQuery(\"#id_currentHistoryTaskInfo_keyEight\").val(),\r\n");
      out.write("\t\t\t\tidentifierTen:window.assignAttachmentKeyTen||jQuery(\"#id_currentHistoryTaskInfo_keyNine\").val(),\r\n");
      out.write("\t\t\t\twidth:'100%',\r\n");
      out.write("\t\t\t\theight:'100%',\r\n");
      out.write("\t\t\t\t//isReadOnly: window.isCompletedTask||window.assignAttachmentIsReadOnly||false,\r\n");
      out.write("\t\t\t\tisReadOnlyMini: window.isCompletedTask||window.assignAttachmentIsReadOnly||false,\r\n");
      out.write("\t\t\t\tborder:true,\r\n");
      out.write("\t\t\t\tdisplayToggleContainer:\"id_toggle_tabs_attachment\",\r\n");
      out.write("\t\t\t\tcheckedKey:'isAttachmentChecked'\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\twindow.initFileListParams();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tvar checkAttachmentInfoFunc = function(){return true;};\r\n");
      out.write(" </script>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowInnerAttachment.jsp(5,50) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setCode("UploadAttachment");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowInnerAttachment.jsp(5,50) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setText("附件上传");
    int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
      if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f0.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_mini_005fparam_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f0 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f0.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowInnerAttachment.jsp(24,85) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f0.setName("proj_info.custname");
    int _jspx_eval_mini_005fparam_005f0 = _jspx_th_mini_005fparam_005f0.doStartTag();
    if (_jspx_th_mini_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f0);
    return false;
  }

  private boolean _jspx_meth_mini_005fparam_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f1 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f1.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f1.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowInnerAttachment.jsp(26,52) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f1.setName("currentTaskActivityDetailInfo.attachmentTypeIds");
    int _jspx_eval_mini_005fparam_005f1 = _jspx_th_mini_005fparam_005f1.doStartTag();
    if (_jspx_th_mini_005fparam_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f1);
    return false;
  }

  private boolean _jspx_meth_mini_005fparam_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mini:param
    com.tenwa.leasing.tag.GetParameter _jspx_th_mini_005fparam_005f2 = (com.tenwa.leasing.tag.GetParameter) _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.get(com.tenwa.leasing.tag.GetParameter.class);
    _jspx_th_mini_005fparam_005f2.setPageContext(_jspx_page_context);
    _jspx_th_mini_005fparam_005f2.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowInnerAttachment.jsp(27,50) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_mini_005fparam_005f2.setName("currentProcessInstanceDBID");
    int _jspx_eval_mini_005fparam_005f2 = _jspx_th_mini_005fparam_005f2.doStartTag();
    if (_jspx_th_mini_005fparam_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fmini_005fparam_0026_005fname_005fnobody.reuse(_jspx_th_mini_005fparam_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowInnerAttachment.jsp(53,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${true eq currentTaskIsAttachmentChecked}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t<script type='text/javascript'>\r\n");
        out.write("\t\tcheckAttachmentInfoFunc = function(){\r\n");
        out.write("\t\t\t\r\n");
        out.write("\t\t\tif(!lazyLoadedObj[\"attachment\"]){\r\n");
        out.write("\t\t\t\t//mini.alert(\"由于此流程步骤需要检查附件完整性，请点击附件一览确认附件完整性，确认无误后再进行提交！\");\r\n");
        out.write("\t\t\t///\treturn false;\r\n");
        out.write("\t\t\t//}else{\r\n");
        out.write("\t\t\t\tloadWorkflowAttachment();\r\n");
        out.write("\t\t\t}\r\n");
        out.write("\t\t\tvar attachmentTable=mini.get(\"id_customworkflowattachment\");\r\n");
        out.write("\t\t\t//var attachmentTable\t= getTracywindyObject(\"id_customworkflowattachment\");\r\n");
        out.write("\t\t\tvar attachmentRowsJsonArrayData = attachmentTable.getData();\r\n");
        out.write("\t\t\t\r\n");
        out.write("\t\t\t//检查附件\r\n");
        out.write("\t\t\tvar checkedKey = attachmentTable.checkedKey;\r\n");
        out.write("\t\t\tfor(var i = 0;i < attachmentRowsJsonArrayData.length; i++){\r\n");
        out.write("\t\t\t\tvar attachmentRowData = attachmentRowsJsonArrayData[i];\r\n");
        out.write("\t\t\t\tvar attachmentFileDictFileName = attachmentRowData[\"attachmentFileDictFileName\"] ;\r\n");
        out.write("\t\t\t\tvar fileListUUIDStr = attachmentRowData[\"attachmentFileUploadInfoDetailIds\"] ;\r\n");
        out.write("\t\t\t\tvar currentIsAttachmentChecked = attachmentRowData[checkedKey] ;\r\n");
        out.write("\t\t\t\tif(\"true\" == (currentIsAttachmentChecked+\"\")){\r\n");
        out.write("\t\t\t\t\tif(attachmentTable.checkAttachmentInfoFuncCallback){\r\n");
        out.write("\t\t\t\t\t\tisPassed = attachmentTable.checkAttachmentInfoFuncCallback(attachmentFileDictFileName,fileListUUIDStr,attachmentRowData,attachmentTable); \r\n");
        out.write("\t\t\t\t\t\tif(false == isPassed){\r\n");
        out.write("\t\t\t\t\t\t\treturn isPassed;\r\n");
        out.write("\t\t\t\t\t\t}\r\n");
        out.write("\t\t\t\t\t} else {\r\n");
        out.write("\t\t\t\t\t\tif(!fileListUUIDStr) {\r\n");
        out.write("\t\t\t\t\t\t\tmini.alert(attachmentFileDictFileName+\"必需上传附件\");\r\n");
        out.write("\t\t\t\t\t\t\treturn false;\r\n");
        out.write("\t\t\t\t\t\t}\r\n");
        out.write("\t\t\t\t\t}\r\n");
        out.write("\t\t\t\t}\r\n");
        out.write("\t\t\t}\r\n");
        out.write("\t\t\treturn true;\r\n");
        out.write("\t\t};\r\n");
        out.write("\t</script>\r\n");
        out.write(" ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
