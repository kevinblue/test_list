<%@ page language="java" contentType="text/html; charset=UTF-8"	pageEncoding="UTF-8"%>
<script type="text/javascript">
jQuery(function(){
	var showTools = true;
	if('${param.isView}' == 'true' || isViewHistoryTask ==true){showTools = false};
	//if(mini.get("approval_distingguish") && mini.get("approval_distingguish").getValue()=="show_rent_cash"){showTools = false};
	seajs.use([ "js/apcomponent/aptable/aptable.js" ], function(ApTable) {
		new ApTable({
			id: "fund_fund_plan",
			renderTo: "id_fund_fund_plan",
			width: globalClientWidth - 30,
			height: 360,
			lazyLoad: false,
			isClickLoad:false,
			remoteOper : false,
			showPager: false,
			multiSelect: true,
			showToolbar: showTools,
			editFormPopupWindowWidth : 700,
			data: mini.decode('${empty json_fund_fund_charge_str ? "[]" : json_fund_fund_charge_str }'),
			tools : [ 'edit','-','copy','-','remove','-',{
				html : '更新现金流&生成收入折现',
				plain : true,
				iconCls : 'icon-redo',
				handler : function(miniTable, buttonText) {
					
					var finaleaseamtdate=mini.get('finaleaseamtdate').getFormValue(); 
					if(finaleaseamtdate==null||finaleaseamtdate==""){
						mini.alert('请先输入财务期租日！！！！');
						return;
					}
					mini.mask({
						el: document.body,
						cls: 'mini-mask-loading',
						html: '正在更新资金计划中，请稍后...'
					});
					var o = {};
					o.docId = flowUnid;
					o.enddate = mini.get('enddate').getValue();
					o.startdate = mini.get('startdate').getFormValue(); 
					o.finaleaseamtdate=mini.get('finaleaseamtdate').getFormValue();
					o.projId = mini.get('conditionProjId').getValue();
					o.contractId = mini.get('conditionContractId').getValue();
					o.process = mini.get('reckonProcess').getValue();
					o.json_fund_fund_charge_str = mini.encode(miniTable.getData());
					o.json_fund_rent_plan_str = mini.encode(mini.get('fund_rent_plan_frame').getData());
					 var url="<%=request.getContextPath() %>/leasing/updateCashDetailAndIncomeDiscount.action";
					 $.ajax({
				        url: url,
				        type: "post",
				        data:  o ,
				        success: function (text) {
				        	var result = mini.decode(text);
				        	if(result.updateinfo == '成功'){
				        		mini.alert('资金计划&收入折现更新成功！！！');
				        		var finacashdetail = mini.decode(result.fundcashdetail) ;
				        		var fundfundcharge = mini.decode(result.fundfundcharge) ;
				        		var incomediscount = mini.decode(result.incomediscount) ;
				        		var finairr=mini.decode(result.finairr);
				        		mini.get("fund_cash_plan_frame").setData(finacashdetail);
				        		//mini.get("fund_fund_plan").setData(fundfundcharge);
				        		mini.get("income_discount").setData(incomediscount);
				        		mini.get("finairr").setValue(finairr);
				        		$("#id_json_fund_cash_flow_str").val(mini.encode(finacashdetail));
				        		//$("#id_json_fund_fund_charge_str").val(mini.encode(fundfundcharge));
				        		$("#id_json_income_discount_str").val(mini.encode(incomediscount));
				        		mini.unmask(document.body);
				        	}else{
				        		mini.alert('资金计划更新失败！！！');
				        		mini.unmask(document.body);
				        	}
				        },
				        error: function (jqXHR, textStatus, errorThrown) {
				        	mini.unmask(document.body);
				            alert(jqXHR.responseText);
				        }
					  });
				}
			}/* ,'-',{
				    html : '维护付款前提',
					plain : true,
					iconCls : 'icon-redo',
					handler : function(miniTable, buttonText) {
						var rows = miniTable.getSelecteds();
						var arrayojb=[];
						if(rows.length>0){
							  for(var i=0;i<rows.length;i++){
								  var paymentpremise={};
								     if(rows[i].paytypename.indexOf('收款')>-1){
			                            mini.alert("只有收付方向为付款的数据才能发起付款前提按钮！");	 
		                            	return false;	
		                              } 
								     paymentpremise=rows[i];
								     arrayojb.push(paymentpremise);
							  }
							var paymentjson=mini.encode(arrayojb);
					        var urlFlag = getRootPath()+"/workflow/forms/reckon/rent_reckon/payment_premise_openlist.bi?paymentjson="+paymentjson;
                            mini.open({
                       		        url: urlFlag,
                       		        id:'table_id3',
                       		        title: "维护付款前提", width: 800, height: 455,
                       		        onload: function () {},
                       		        ondestroy: function (action) {
                       		        	if("savesuccess" == action){
                       		        		window.location.reload();
                       		        	}
                       		        }
                       		    });
						}else{
						   mini.alert("请选中数据！");
						}
				 }
				} */
			],
			confirmCopyCallBack:function(miniTable,rows){
				var names = [];
				for(var i = 0 ; i<rows.length;i++){
					names.push(rows[i].feetypename);
				}
				names = unique(names);
				var newRows = [];
				var datas = miniTable.getData();
				for(var i = 0 ; i< names.length;i++){
					var temp = 0;
					var feetypename = names[i];
					for(var j = 0 ; j< datas.length;j++){
						var data = datas[j];
						if(data.feetypename == feetypename){
							if(Number(data.paymentid) > temp){
								temp = Number(data.paymentid);
							}
						}
					}
					for(var k = 0 ;k<rows.length;k++){
						var row = mini.clone(rows[k]);
						if(row.feetypename == feetypename){
							row.paymentid = ++temp;
							newRows.push(row);
						}
					} 
				}
			   miniTable.addRows(newRows, 0); 
			   miniTable.saveDataToInput();
			},
			removeOperCallBack:function(miniTable){
				$('#id_json_fund_fund_charge_str').val(mini.encode(miniTable.getData()));
			},
			
			copyOperCallBack:function(miniTable){
				$('#id_json_fund_fund_charge_str').val(mini.encode(miniTable.getData()));
			},
			updateOperCallBack:function(miniTable){
				$('#id_json_fund_fund_charge_str').val(mini.encode(miniTable.getData()));
			},
			columns: [
				{type: 'indexcolumn'},
				{type: 'checkcolumn'},
				{field: 'id', header: 'id', visible: false},
				{field: 'docid', header: 'docid', visible: false},	
				{field: 'contractid', header: '合同号',visible: false,
					formEditorConfig:
					{
						visible: false,
						readOnly:true,
						required: true,
						labelWidth:100,
						width: 200
					}
				},
				{field: 'paymentid', header: '编号',
					formEditorConfig:
					{
						readOnly:true,
						required: true,
						labelWidth:100,
						width: 200
					}
				},
				{field: 'plandate', header: '计划收付日期',type:"date",format:"yyyy-MM-dd",
					formEditorConfig:
					{
						type:"date",format:"yyyy-MM-dd",
						newLine : true,
						required: true,
						labelWidth:100,
						width: 200
					}
				},
				{field: 'planmoney', header: '金额',dataType : "currency",summary : true,align:'right',
					formEditorConfig:
					{
						vtype:'float',
						required: true,
						labelWidth:100,
						width: 200
					}
				},
				{field: 'feetype', header: '款项名称ID',visible: false},
				{field: 'feetypename', header: '款项名称',
					formEditorConfig:
					{
						readOnly:true,
						newLine : true,
						required: true,
						labelWidth:100,
						width: 200
					}
				},
				{field: 'paytype', header: '收付方向id', visible: false},
				{field: 'paytypename', header: '收付方向',
					formEditorConfig:
					{
						readOnly:true,
						required: true,
						labelWidth:100,
						width: 200
					}
				},
				{field: 'payconditionname', header: '支付条件',formEditorConfig:{
					readOnly:true,
					fieldVisible:false,
					allowInput:false,
					fillFromFieldName:'paycondition',
					fillProperty:'name'
				}},
				{field: 'paycondition', header: '支付条件', visible: false,
					formEditorConfig:
					{
						type:'combobox',
						newLine:true,
						textField:'name',
						valueField:'value',
						allowInput:false,
						fieldVisible:true,
						params:{pid: 'pay_condition', xmlFileName:'combos/comboDict.xml'}
					}
				},
				{field: 'whetherdeduct', header: '是否抵扣', visible: false,
					formEditorConfig:
					{
						type:'combobox',
						labelWidth:100,
						width: 200,
						textField:'name',
						valueField:'value',
						data:[{name:'是',value:'是'},{name:'否',value:'否'}]
					}
				},
				{field: 'paycust', header: '收付对象',
					visible: false,
			       formEditorConfig:{
				    	newLine:true,
		                width: 400,
		                colspan:3,
		                type:'queryinput',
		             	required: false,
		            	textField: 'paycustname',
		           		valueField: 'paycust',
		           		allowInput: false,
		         		fieldVisible: true,
		             	/* onSelect:function($me, queryInput, rowData){
			                   mini.getbyName("paycustname").setValue(rowData.paycustname);
			                   mini.getbyName("paycust").setValue(rowData.paycust);
			            }, */
		               	params: {xmlFileName: '/eleasing/workflow/rent/rent_cal/fund_fund_pay_obj.xml'}
				  }
				},
				{field: 'paycustname', header: '收付对象',visible: true,
						formEditorConfig:{
			  			fieldVisible:false 
		             }
				},
				{field: 'fpnote', header: '备注',
					formEditorConfig:
					{
						type:'textarea',
						newLine:true,
						labelWidth:100,
						height:70,
						colspan:3,
						width: 478
					}
				}
			]
		});
	});
});

function unique(arr){
	var ret = [];
	var have = {};
	for(var i = 0 ; i< arr.length; i++){
		var item = arr[i];
		var key = typeof(item)+item;
		if(have[key] != 1){
			ret.push(item);
			have[key] = 1;
		}
	}
	return ret;
}
</script>
<div id="id_fund_fund_plan"></div>