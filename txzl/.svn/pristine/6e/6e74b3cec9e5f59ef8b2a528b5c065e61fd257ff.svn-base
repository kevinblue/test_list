package com.tenwa.leasing.action.contract.letterapproval;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Component;

import com.tenwa.business.service.BaseService;
import com.tenwa.business.service.TableService;
import com.tenwa.jbpm.action.JbpmBaseAction;
import com.tenwa.jbpm.entity.JBPMWorkflowHistoryInfo;
import com.tenwa.kernal.annotation.WorkflowAction;
import com.tenwa.leasing.entity.letter.LetterApproval;
import com.tenwa.leasing.entity.other.ExpressdeliverInfo;
import com.tenwa.leasing.service.pledge.PledgeCommMethod;
import com.tenwa.leasing.utils.WorkflowUtil;

@WorkflowAction(name = "letterApprovalEndAction", description = "流程结束动作", workflowName = "公函审批流程")
@Component(value = "letterApprovalEndAction")
public class LetterApprovalEndAction implements JbpmBaseAction {
	@Resource(name = "baseService")
	private BaseService baseService;
	
	@Resource(name = "tableService")
	private TableService tableService;
	
	@Override
	public void start(HttpServletRequest request, Map<String, String> variablesMap,JBPMWorkflowHistoryInfo jbpmWorkflowHistoryInfo) throws Exception {
		 
	}
	
	@Override
	public String delete(HttpServletRequest request, Map<String, String> variablesMap,JBPMWorkflowHistoryInfo jbpmWorkflowHistoryInfo) throws Exception {
		return null;
	}

	@Override
	public void end(HttpServletRequest request, Map<String, String> variablesMap,JBPMWorkflowHistoryInfo jbpmWorkflowHistoryInfo) throws Exception {
			    //删除流程互斥
				WorkflowUtil.deleteWorkFlowConflict(this.baseService, variablesMap);  
				String letternumber=variablesMap.get("letter_approval.letternumber");
				String originator=variablesMap.get("letter_approval.originator");
				String originatime=variablesMap.get("letter_approval.originatime");
				String lettername=variablesMap.get("letter_approval.lettername");
				String recipient=variablesMap.get("letter_approval.recipient");
				String letterdescription=variablesMap.get("letter_approval.letterdescription");
				LetterApproval la=new LetterApproval();
				la.setLetternumber(letternumber);
				la.setOriginator(originator);
				la.setOriginatime(originatime);
				la.setLettername(lettername);
				la.setRecipient(recipient);
				la.setLetterdescription(letterdescription);
				//保存对象到数据库表中
				this.tableService.saveEntity(la);
				
	}

	@Override
	public String save(HttpServletRequest request, Map<String, String> variablesMap,JBPMWorkflowHistoryInfo jbpmWorkflowHistoryInfo) throws Exception {
		return null;
	}
	
	@Override
	public void back(HttpServletRequest request,
			Map<String, String> variablesMap,JBPMWorkflowHistoryInfo jbpmWorkflowHistoryInfo) throws Exception {
	}
	
}
