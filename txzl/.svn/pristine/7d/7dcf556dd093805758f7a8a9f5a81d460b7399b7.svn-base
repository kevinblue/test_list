<%@ page language="java" contentType="text/html; charset=UTF-8"	pageEncoding="UTF-8"%>
<script type="text/javascript">
/* 字段备注  ：   计划金额   = 本次收款金额 + 调整金额            */
jQuery(function(){
	//获取父页面中保存在hidden域的值
	var showTools = true;
	if('${param.isView}' == 'true'){showTools = false;}
	seajs.use([ "js/apcomponent/aptable/aptable.js" ], function(ApTable) {
		new ApTable({
		id: "put_plan",
		renderTo: "id_table_put_plan",
		width : globalClientWidth-10,
		height : 300,
		editFormPopupWindowWidth : 400,
		lazyLoad: false,
		isClickLoad:false,
		multiSelect : true,
		title: "",
		remoteOper : false,
		showPager: false,
		showToolbar: showTools,
		tools:  toolsArray,
		data: JsonUtil.decode('${empty json_put_plan_str ? "[]" : json_put_plan_str }'),
		columns: [
		    {type : 'indexcolumn'},	
			{type: 'checkcolumn'},
			{field: 'id', header: 'id', visible: false},
			{field: 'paymentid', header: '付款编号',formEditorConfig:{newLine:true,readOnly : true,required: true}},
			{field: 'feetype', header: '费用类型',formEditorConfig:{newLine:true}, visible: false},
			{field: 'feetypename', header: '费用类型',formEditorConfig:{newLine:true}},
			{field: 'planmoney', header: '计划金额',summary : true,dataType : "currency",formEditorConfig:{}},
			{field: 'overmoney', header: '未付款金额',summary : true,dataType : "currency",formEditorConfig:{}},
			{field: 'factmoney', header: '已付款金额',summary : true,dataType : "currency"}, 
			{field: 'plandate', header: '计划日期', visible: false,formEditorConfig:{}},
			{field: 'paycustname', header: '支付对象'},
			{field: 'connum', header: '采购合同号'},
			{field: 'contractname', header: '采购合同名称'},
			{field: 'paycust', header: '支付对象',visible:false},
			{field: 'fpnote', header: '备注',formEditorConfig:{}}
		]
	});
	});
	
});
var toolsArray=
[
{
	html : '生成付款',
	plain : true,
	iconCls : 'icon-ok',
	handler : function(miniTable, buttonText) 
	{
		var put_current = mini.get("put_current");//本次资金付款grid
		var curGrids =put_current.getData();
		var rows = miniTable.getSelected();
        if (!rows)
		{
			mini.alert("请勾选数据在操作!");
			return false;
		}
        var put_plan=mini.get("put_plan").getData();
        var rowss = miniTable.getSelecteds();
        if(rowss.length>0){
        	for(var m=0;m<rowss.length;m++){
        		var overmoneycopy=rowss[m].overmoney;
        		if(overmoneycopy==0){
        			mini.alert("未付款金额大于0时不能进行付款！");
        		return false;
        		}
        	}
        }
		if (curGrids.length > 0) //第二次操作才判断
 		{
 			for ( var n = 0; n < curGrids.length; n++)
 			{
 				if ( rows.id == curGrids[n].fundfundchargeplan )
 				{
 					mini.alert("该记录已在本次付款明细中,请不要重复生成!");
 					//miniTable.deselectAll(false);
 					return false;
 				}
 			}
 		}
            	var selected = mini.getbyName("proj_info.fund_delivery").getText();
            	var contractid="${requestScope['contract_info.id']}";
            	if(selected=="是"){
            		if(rows.feetypename=="设备款"){
            				mini.get("id_window_fund_offset").show();
            				var cdate=miniTable.getSelected();
                            cdate.settlemethod='payfund6';
                     		cdate.settlemethodname='电汇';
                     		cdate.pid="";
                            var rdate=[];
                            rdate.push(cdate);
                  			getFundPutPlan(rdate);
            				getPremiseCondition(contractid,cdate);
            		}else{
            			var cdate=miniTable.getSelected();
                        cdate.settlemethod='payfund6';
                 		cdate.settlemethodname='电汇';
                 		cdate.pid="";
                        var rdate=[];
                        rdate.push(cdate);
              			getFundPutPlan(rdate);
              			getPremiseCondition(contractid,cdate);
              			mini.alert("操作成功,请到本次付款明细查看!");
            		}
                 }else{
         			 	var cdate=miniTable.getSelected();
                        cdate.settlemethod='payfund6';
              		    cdate.settlemethodname='电汇';
              		    cdate.pid="";
                        var rdate=[];
                        rdate.push(cdate);
           			    getFundPutPlan(rdate);
           			 	getPremiseCondition(contractid,cdate);
           				mini.alert("操作成功,请到本次付款明细查看!");
                  }
               }
	}];
	
	
	
	
	function getPremiseCondition(contractid,cdate){
		var contractid = contractid;
		var paymentid=cdate.paymentid;
		var feetype=cdate.feetype;
		var premise_condition=mini.get("premise_condition");
			$.ajax({
		        url: getRootPath()+"/acl/getPremiseCondition.acl",
		        type: "post",
		        cache: false, 
		        data :{contractid: contractid,paymentid:paymentid,feetype:feetype},
		        async : false,
		        success: function (data){
		        var result = mini.decode(data);
		        premise_condition.addRows(result, 0);
			    $("#id_json_premise_condition_str").val(mini.encode(mini.get("premise_condition").getData()));
		        }
		    });
	}
	
	
function  getFundPutPlan(payplan)
{    
	var newRow = {};
	var miniTable=mini.get("put_plan");
	var planGrid = miniTable.getSelecteds();//获取资金计划grid
	var currentGrid = mini.get("put_current");//获取本次计划grid
	var rowDatas = [];
	//var rowDatas =currentGrid.getData();
	for (var i = 0 ;i <planGrid.length; i++ )
	{
		newRow.fundfundchargeplan=planGrid[i].id;
		newRow.paymentid=planGrid[i].paymentid;
		newRow.pid=planGrid[i].pid;
		newRow.feetype=planGrid[i].feetype;
		newRow.feetypename=planGrid[i].feetypename;
		newRow.settlemethod=planGrid[i].settlemethod;
		newRow.settlemethodname=planGrid[i].settlemethodname;
		newRow.paytype='pay_type_out';
		newRow.paytypename='付款';
		newRow.factdate=planGrid[i].plandate;
		newRow.factmoney=planGrid[i].overmoney;//本次付款金额=计划金额-已付款金额
		newRow.factobject=planGrid[i].paycust;
		newRow.factobjectname=planGrid[i].paycustname;
		newRow.comparemoney=planGrid[i].overmoney;//把可付款的金额传到本次付款列表方便比较	
		newRow.feeadjust='0';
		newRow.ffcmemo=planGrid[i].fpnote;
		rowDatas.push(mini.clone(newRow));
	}
	//currentGrid.setData(rowDatas);
	//miniTable.deselectAll(false);
	currentGrid.addRows ( rowDatas, 0 );
	currentGrid.saveDataToInput();
	miniTable.deselectAll(false);
	return true;
	
}

</script>

<div id="id_table_put_plan"></div>
