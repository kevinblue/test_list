<?xml version="1.0" encoding="UTF-8"?>

<table-root 
  xmlns="http://www.tracywindy.org/table" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.tracywindy.org/table http://www.tracywindy.org/table/table-1.0.xsd">
  <table>
    <data>
    <alldb>
      <table_sql> 
	        <![CDATA[
	                SELECT 
	                    CASE WHEN LEAD(ITEM_LEVEL_) 
	                    OVER(ORDER BY RN) > ITEM_LEVEL_ 
	                    THEN 'FALSE' ELSE 'TRUE' END IS_LEAF_,
	                    TTTT.* 
                    FROM(  
					     SELECT 
					     ROWNUM AS RN,LEVEL AS ITEM_LEVEL_, 
					     PID_ AS ITEM_PID_ ,ID_ AS ITEM_ID_,NAME_ AS ITEM_NAME_, 
					     CODE_ AS ITEM_CODE_,  
					     '' AS ITEM_VALUE_,'' AS ITEM_TYPE_, 
					     '0' AS ITEM_IS_SELECTED,
					     '0' AS ITEM_IS_REQUIRE,
					     DESCRIPTION_ AS ITEM_DESCRIPTION_, POSITION_ AS ITEM_POSITION_,
					     WIDTH_ AS ITEM_WIDTH_, HEIGHT_ AS ITEM_HEIGHT_,
					     IS_STATISTIC_ AS ITEM_IS_STATISTIC_,
					     ENABLED_ AS ITEM_ENABLED_  
					     FROM( 
					        SELECT * FROM {dictTableName} 
					        WHERE (ENABLED_) = 1 
					     )  
					    START WITH ID_='{rootDictId}' 
					    CONNECT BY PRIOR ID_ = PID_  
					    ORDER SIBLINGS BY POSITION_
				   )TTTT	
			 ]]> 
	  </table_sql>
	  </alldb>
	  <sqlserver>
	     <predefined_sql>
	       <![CDATA[
		     WITH Tree
		            AS
		            (
		            SELECT 1 item_level_,PID_ AS ITEM_PID_ ,ID_ AS ITEM_ID_,NAME_ AS ITEM_NAME_, 
		               CODE_ AS ITEM_CODE_,  
		               '' AS ITEM_VALUE_,'' AS ITEM_TYPE_, 
		               '0' AS ITEM_IS_SELECTED,
		               '0' AS ITEM_IS_REQUIRE,
		               DESCRIPTION_ AS ITEM_DESCRIPTION_, 0 AS ITEM_POSITION_,
		               WIDTH_ AS ITEM_WIDTH_, HEIGHT_ AS ITEM_HEIGHT_,
		               IS_STATISTIC_ AS ITEM_IS_STATISTIC_,
		               ENABLED_ AS ITEM_ENABLED_   FROM {dictTableName} 
			           WHERE (ENABLED_) = 1 and  ID_='{rootDictId}' 
			           UNION ALL
			           SELECT T.item_level_ + 1,PID_ AS ITEM_PID_ ,ID_ AS ITEM_ID_,NAME_ AS ITEM_NAME_, 
		               CODE_ AS ITEM_CODE_,  
		               '' AS ITEM_VALUE_,'' AS ITEM_TYPE_, 
		               '0' AS ITEM_IS_SELECTED,
		               '0' AS ITEM_IS_REQUIRE,
		               DESCRIPTION_ AS ITEM_DESCRIPTION_, POSITION_ AS ITEM_POSITION_,
		               WIDTH_ AS ITEM_WIDTH_, HEIGHT_ AS ITEM_HEIGHT_,
		               IS_STATISTIC_ AS ITEM_IS_STATISTIC_,
		               ENABLED_ AS ITEM_ENABLED_   FROM {dictTableName}
		               INNER JOIN Tree T ON {dictTableName}.PID_ = t.ITEM_ID_
		           )
	            ]]> 
	     </predefined_sql> 
	     <table_sql>
	        <![CDATA[
	         select * from (  
	         select  row_number() over(order by Tree.ITEM_POSITION_ ) RN,case when (select COUNT(*) from
	          {dictTableName} where PID_=tree.ITEM_ID_)>0 
	         then 'FALSE' else 'TRUE' end IS_LEAF_,
	         * from Tree) tt
	         ]]> 
	     </table_sql>
	  </sqlserver>
      <dataSource>dataSource</dataSource>
      <show_sql>true</show_sql>
      <isPrepared>false</isPrepared>
    </data>
  </table>
</table-root>