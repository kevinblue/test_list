/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-05-10 02:13:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.fund.fund_005fcomm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fund_005fpayment_005fplan_005finfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("/* 字段备注  ：   计划金额   = 本次收款金额 + 调整金额            */\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\t//获取父页面中保存在hidden域的值\r\n");
      out.write("\tvar showTools = true;\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.isView}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("' == 'true'){showTools = false;}\r\n");
      out.write("\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\tnew ApTable({\r\n");
      out.write("\t\tid: \"payment_plan\",\r\n");
      out.write("\t\trenderTo: \"id_table_payment_plan\",\r\n");
      out.write("\t\twidth : globalClientWidth-30,\r\n");
      out.write("\t\theight : 400,\r\n");
      out.write("\t\teditFormPopupWindowWidth : 400,\r\n");
      out.write("\t\tlazyLoad:false,\r\n");
      out.write("\t\tisClickLoad:false,\r\n");
      out.write("\t\ttitle: \"\",\r\n");
      out.write("\t\tremoteOper : false,\r\n");
      out.write("\t\tshowPager: false,\r\n");
      out.write("\t\tmultiSelect : true,\r\n");
      out.write("\t\tshowToolbar: showTools,\r\n");
      out.write("\t\ttools: toolsArray,\r\n");
      out.write("\t\tdata: JsonUtil.decode('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_payment_plan_str ? \"[]\" : json_payment_plan_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'),\r\n");
      out.write("\t\tcolumns: [\r\n");
      out.write("\t\t\t{type: 'indexcolumn'},\r\n");
      out.write("\t\t\t{type: 'checkcolumn'},\r\n");
      out.write("\t\t\t{field: 'id', header: 'id', visible: false},\r\n");
      out.write("\t\t\t{field: 'paymentid', header: '付款编号'},\r\n");
      out.write("\t\t\t{field: 'feetype', header: '费用类型',formEditorConfig:{newLine:true}, visible: false},\r\n");
      out.write("\t\t\t{field: 'feetypename', header: '费用类型',formEditorConfig:{newLine:true,readOnly:true}},\r\n");
      out.write("\t\t\t{field: 'planmoney', header: '计划金额',summary : true,dataType : \"currency\",formEditorConfig:{newLine:true,readOnly : true,otherAttributes: '  '}},\r\n");
      out.write("\t\t\t{field: 'factmoney', header: '已付金额',summary : true,dataType : \"currency\",formEditorConfig:{newLine:true,required: true}},\r\n");
      out.write("\t\t\t{field: 'overmoney', header: '未付金额',summary : true,dataType : \"currency\",formEditorConfig:{newLine:true,readOnly:true}},\r\n");
      out.write("\t\t\t{field: 'plandate', header: '计划日期',dateFormat : \"yyyy-MM-dd\",formEditorConfig:{\r\n");
      out.write("\t\t\t\t\ttype: 'date',\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\t\treadOnly : true,\r\n");
      out.write("\t\t\t\t\tformat: 'yyyy-MM-dd'\r\n");
      out.write("\t\t\t}},\r\n");
      out.write("\t\t\t{field: 'paycust', header: '支付对象',visible:false},\r\n");
      out.write("\t\t\t{field: 'paycustname', header: '支付对象',formEditorConfig:{newLine:true,readOnly : true}},\r\n");
      out.write("\t\t\t{field: 'planmoneystatus', header: '付款状态', renderer : function(e){\r\n");
      out.write("\t\t\t\t  return setfundPayState(e.record);\r\n");
      out.write("\t     \t}},\r\n");
      out.write("\t\t\t{field: 'fpnote', header: '备注',formEditorConfig:{newLine:true,readOnly : true}}\r\n");
      out.write("\t\t]\r\n");
      out.write("\t});\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("var toolsArray=\r\n");
      out.write("\t[\r\n");
      out.write("\t{\r\n");
      out.write("\t\thtml : '生成付款明细',\r\n");
      out.write("\t\tplain : true,\r\n");
      out.write("\t\ticonCls : 'icon-ok',\r\n");
      out.write("\t\thandler : function(miniTable, buttonText) \r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tvar curGrid = mini.get(\"payment_current\");//本次资金投放grid\r\n");
      out.write("\t\t\tvar curGrids =curGrid.getData();\r\n");
      out.write("\t\t\tvar rows = miniTable.getSelecteds();\r\n");
      out.write("\t        \r\n");
      out.write("\t\t\tif (rows.length == 0)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tmini.alert(\"请勾选数据在操作!\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t    for(var i = 0;i<rows.length;i++){\r\n");
      out.write("\t\t    \tconsole.info(rows[i]);\r\n");
      out.write("\t\t\t\tif(rows[i].overmoney==0){\r\n");
      out.write("\t\t\t\t\tmini.alert(\"已核销款项不能重复核销！\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}else if (rows[i].overmoney<0){\r\n");
      out.write("\t\t\t\t\tmini.alert(\"核销数据错误，超额核销！\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\t/* 不在本次明细中重复生成判断 */\r\n");
      out.write("\t\t\tvar gobalFlag=false;\r\n");
      out.write("\t\t\tfor(var i = 0 ; i< rows.length;i++){\r\n");
      out.write("\t\t\t\tvar row = rows[i];\r\n");
      out.write("\t\t\t\tvar flag=false;//标识重复\r\n");
      out.write("\t\t\t\tfor(var j = 0 ; j < curGrids.length;j++){\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(row.id == curGrids[j].fundfundchargeplan){\t\t\t\r\n");
      out.write("\t\t\t\t\t\tgobalFlag=true;\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\tif(gobalFlag){\r\n");
      out.write("\t\t\t\tmini.alert(\"您选中行的数据已在本次付款明细中了,请不要重复生成！\");\r\n");
      out.write("\t\t\t\tminiTable.deselectAll();return false;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tgetFundPayPlan(miniTable);\r\n");
      out.write("\t\t\t\tmini.alert(\"操作成功,请到本次付款明细查看!\");\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t/* 不在本次明细中重复生成判断  结束*/\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}];\r\n");
      out.write("\tfunction  getFundPayPlan(miniTable)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tvar newRow = {};\r\n");
      out.write("\t\tvar planGrid = miniTable.getSelecteds();//获取资金计划grid\r\n");
      out.write("\t\tvar currentGrid = mini.get(\"payment_current\");//获取本次计划grid\r\n");
      out.write("\t\tvar rowDatas = [];\r\n");
      out.write("\t\tfor (var i = 0 ;i <planGrid.length; i++ )\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tnewRow.fundfundchargeplan=planGrid[i].id;\r\n");
      out.write("\t\t\tnewRow.paymentid=planGrid[i].paymentid;\r\n");
      out.write("\t\t\tnewRow.feetype=planGrid[i].feetype;\r\n");
      out.write("\t\t\tnewRow.feetypename=planGrid[i].feetypename;\r\n");
      out.write("\t\t\tnewRow.settlemethod='payfund6';\r\n");
      out.write("\t\t\tnewRow.settlemethodname='电汇';\r\n");
      out.write("\t\t\tnewRow.paytype='pay_type_out';\r\n");
      out.write("\t\t\tnewRow.paytypename='付款';\r\n");
      out.write("\t\t\tnewRow.factdate=planGrid[i].plandate;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tnewRow.factmoney=planGrid[i].overmoney;//本次投放金额=计划金额-已投放金额\r\n");
      out.write("\t\t\tnewRow.factobject=planGrid[i].paycust;\r\n");
      out.write("\t\t\tnewRow.factobjectname=planGrid[i].paycustname;\r\n");
      out.write("\t\t\tnewRow.comparemoney=planGrid[i].overmoney;//把可投放的金额传到本次投放列表方便比较\t\r\n");
      out.write("\t\t\tnewRow.feeadjust='0';\r\n");
      out.write("\t\t\trowDatas.push(mini.clone(newRow));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tcurrentGrid.addRows ( rowDatas, 0 );\r\n");
      out.write("\t\tcurrentGrid.saveDataToInput();\r\n");
      out.write("\t\tminiTable.deselectAll(false);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"id_table_payment_plan\" style=\"width:100%;height:100%;\"></div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
