/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-06-02 01:34:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.fund.fund_005fput.comm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class rent_005fincome_005fplan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\tvar showTools = true;\r\n");
      out.write("\ttenwa.createTable({\r\n");
      out.write("\t\tid: \"rent_income_plan\",\r\n");
      out.write("\t\trenderTo: \"id_table_rent_income_plan\",\r\n");
      out.write("\t\twidth : '999',\r\n");
      out.write("\t\theight : 400,\r\n");
      out.write("\t\ttitle: \"\",\r\n");
      out.write("\t\tremoteOper : false,\r\n");
      out.write("\t\tshowPager: false,\r\n");
      out.write("\t\tmultiSelect: true,\r\n");
      out.write("\t\tshowToolbar: showTools,\r\n");
      out.write("\t\txmlFileName: 'eleasing/workflow/rent/rent_comm/rent_plan.xml',\r\n");
      out.write("\t\tparams : {\r\n");
      out.write("\t\t    contract_id:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope['contract_info.id']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\",\r\n");
      out.write("\t\t    ismaymoney:' and currentoverage>0'      \r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tcolumns: [\r\n");
      out.write("\t\t\t{type: 'indexcolumn'},\r\n");
      out.write("\t\t\t{type: 'checkcolumn'},\r\n");
      out.write("\t\t\t{field: 'id', header: 'id', visible: false},\r\n");
      out.write("\t\t\t{field: 'rentlist', header: '期次'},\r\n");
      out.write("\t\t\t{field: 'status', header: '回笼状态', renderer: showRentStatus},\r\n");
      out.write("\t\t\t{field: 'plandate', header: '计划日期'},\r\n");
      out.write("\t\t\t{field: 'rent', header: '计划租金',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'corpus', header: '计划本金',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'interest', header: '计划租息',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'penalty', header: '应收罚息',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'currentoverage', header: '租金余额',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'curcorpusoverage', header: '本金余额',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'curinterestoverage', header: '利息余额',type:'double',summary : true,dataType : \"currency\"},\r\n");
      out.write("\t\t\t{field: 'penaltyoverage', header: '罚息余额',type:'double',summary : true,dataType : \"currency\"}\r\n");
      out.write("\t\t]\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//生成回笼明细\r\n");
      out.write("function generateDeduceRentDetail(rents){\r\n");
      out.write("\t    var selectedDatas=rents;\r\n");
      out.write("\t    var currTable=mini.get(\"rent_income_detail\");\r\n");
      out.write("\t    var miniTable=mini.get(\"rent_income_plan\");\r\n");
      out.write("\t    var currRowDatas=currTable.getData();\r\n");
      out.write("\t\tfor(var i = 0; i < selectedDatas.length; i ++){\r\n");
      out.write("\t\t\tif(parseFloat(selectedDatas[i].currentoverage)>0){\r\n");
      out.write("\t\t\t\tvar rowObj={};\r\n");
      out.write("\t\t\t\trowObj.planid=selectedDatas[i].id;\r\n");
      out.write("\t\t\t\trowObj.planlist = selectedDatas[i].rentlist;\r\n");
      out.write("\t\t\t\trowObj.hirelist ='1';\r\n");
      out.write("\t\t\t\trowObj.balancemode = \"payfund11\";\r\n");
      out.write("\t\t\t\trowObj.balancemodename = \"坐扣\";\r\n");
      out.write("\t\t\t\trowObj.hiredate=selectedDatas[i].plandate;\r\n");
      out.write("\t\t\t\trowObj.accountingdate=(new Date()).format('yyyy-MM-dd');\r\n");
      out.write("\t\t\t\trowObj.rent = selectedDatas[i].currentoverage;\r\n");
      out.write("\t\t\t\trowObj.corpus = selectedDatas[i].curcorpusoverage;\r\n");
      out.write("\t\t\t\trowObj.interest = selectedDatas[i].curinterestoverage;\r\n");
      out.write("\t\t\t\trowObj.penalty = selectedDatas[i].penaltyoverage;\r\n");
      out.write("\t\t\t\trowObj.curcorpusoverage = selectedDatas[i].curcorpusoverage;\r\n");
      out.write("\t\t\t\trowObj.curinterestoverage = selectedDatas[i].curinterestoverage;\r\n");
      out.write("\t\t\t\trowObj.penaltyoverage = selectedDatas[i].penaltyoverage;\t\t\t\t\r\n");
      out.write("\t\t\t\trowObj.rentadjust = 0;\r\n");
      out.write("\t\t\t\trowObj.corpusadjust = 0;\r\n");
      out.write("\t\t\t\trowObj.interestadjust = 0;\r\n");
      out.write("\t\t\t\trowObj.penaltyadjust = 0;\r\n");
      out.write("\t\t\t\trowObj.memo=selectedDatas[i].memo;\r\n");
      out.write("\t\t\t\tcurrRowDatas.push(mini.clone(rowObj));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tcurrRowDatas.sort(function(a,b){return a.planlist - b.planlist;});\r\n");
      out.write("\t    currTable.setData(currRowDatas);\r\n");
      out.write("\t\tminiTable.deselectAll(false);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<input type=\"hidden\" id=\"isseparaterentlist\" name=\"isseparaterentlist\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty isseparaterentlist ? false : isseparaterentlist}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"/>\r\n");
      out.write("<div id=\"id_table_rent_income_plan\" style=\"width: 100%;height: 100%;\"></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
