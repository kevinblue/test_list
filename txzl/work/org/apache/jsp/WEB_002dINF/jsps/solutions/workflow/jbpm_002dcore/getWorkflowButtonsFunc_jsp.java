/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-08-12 06:35:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.jbpm_002dcore;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class getWorkflowButtonsFunc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tlds/c.tld", Long.valueOf(1486185689570L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    if (_005fjspx_005ftagPool_005fc_005fif_0026_005ftest != null) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var isDraft = (\"Draft\" == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${processInstanceState}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\");\r\n");
      out.write("\r\n");
      out.write("var __getDocId = function(){// JBPM流程ID\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentProcessInstanceDBID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getProcessId = function(){// 流程实例ID\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentProcessInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getProcessName = function(){// 流程名称\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentWorkFlowDisplayName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getProcessState = function(){// 流程状态\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${processInstanceState}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getCurrentTaskId = function(){// 当前任务ID\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentTaskId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getCurrentTaskName = function(){// 当前任务名称\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentTaskName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getCurrentUserId = function(){// 当前登陆用户ID\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${CurrentUserId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("var __getCurrentUserName = function(){// 当前登陆用户名称\r\n");
      out.write("\treturn '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${CurrentUserName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//显示流程图\r\n");
      out.write("\tfunction toProcessActivePicture(){\r\n");
      out.write("\t\t/*var processInstanceId =encodeURIComponent('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentProcessInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("');\r\n");
      out.write("\t\t?deployId=&processInstanceId=\"+processInstanceId+\"&randomNumber=\"+Math.random()*/\r\n");
      out.write("\t\tvar attachmentParams = {\r\n");
      out.write("\t\t\tdeployId:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentDeployId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("',\r\n");
      out.write("\t\t\tprocessInstanceId:escape(encodeURIComponent('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentProcessInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("')),\r\n");
      out.write("\t\t\trandomNumber:Math.random(),\r\n");
      out.write("\t\t\tjbpmWorkflowHistoryInfoUserId:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jbpmWorkflowHistoryInfoUserId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"\r\n");
      out.write("\t    };\r\n");
      out.write("\t\topenFullScreenWindow(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workflow/jbpm/getActivedRects.action\",attachmentParams);\r\n");
      out.write("\t}\r\n");
      out.write("\t//流程历史信息\r\n");
      out.write("\tfunction viewWorkflowHistoryDetail(){\r\n");
      out.write("\t\tvar infoFlag=\"history\";\r\n");
      out.write("\t\tif(getLazyLoadedObj(infoFlag,jQuery(document.body),function(){\r\n");
      out.write("\t\t\tmini.get(\"id_workflowHistoryDetailInfoWindow\").show('center','middle');\r\n");
      out.write("\t\t})){\r\n");
      out.write("\t\t\tmini.get(\"id_workflowHistoryDetailInfoWindow\").show('center','middle');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//流程历史信息\r\n");
      out.write("\tfunction viewProjSummary(){\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t    var URL = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/jbpm/getProjSummaryHistoryInfos.action?keyOne=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentHistoryTaskInfo.keyOne}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&proj_id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope['project_info.projId']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t    openFullScreenWindow(URL);\r\n");
      out.write("\t}\r\n");
      out.write("\t//打开历史表单\r\n");
      out.write("\tfunction toProcessForm(currentTaskId){\r\n");
      out.write("\t\twindow.open(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/jbpm/viewHistoryProcessForm.action?currentTaskId=\"+currentTaskId,\"_blank\");\r\n");
      out.write("\t}\r\n");
      out.write("\t//打印预览\r\n");
      out.write("\tfunction previewPrint(){\r\n");
      out.write("\t\tvar url=getRootPath()+\"/jbpm/getPrint.acl\";\r\n");
      out.write("    \turl+=\"?DocNo=\"+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentProcessInstanceDBID}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("    \turl+=\"&jhiCompletedTaskImplId=\"+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentJbpmWorkflowHistoryInfoId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("    \twindow.open(url,\"_blank\");\r\n");
      out.write("\t}\r\n");
      out.write("\t//弹出流程对比选择流程框\r\n");
      out.write("\tfunction flowDataContrast(){\r\n");
      out.write("\t\tvar flag = event.srcElement.parentNode.getAttribute(\"flag\")||\"compare\";\r\n");
      out.write("\t\tif(flag==\"compare\"){\r\n");
      out.write("\t\t\tvar keyone=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentHistoryTaskInfo.keyOne}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\t\tvar curstepid=currentJbpmWorkflowHistoryInfoId;\r\n");
      out.write("\t\t\tif(keyone==\"\"){alert(\"没有设计关键字one请设置\");return false;}\r\n");
      out.write("\t\t\tmini.open({\r\n");
      out.write("\t\t\t\tid:'id_flowselectwindow',\r\n");
      out.write("\t            url: getRootPath() + '/workflow/jbpm-core/selectflowDataContrast.bi?keyone='+keyone+\"&stepid=\"+curstepid,\r\n");
      out.write("\t            title: \"选择对比流程\", width: 800, height: 500,\r\n");
      out.write("\t            showModal: true,\r\n");
      out.write("\t            showMaxButton: true,\r\n");
      out.write("\t            onload: function () {\r\n");
      out.write("\t            },\r\n");
      out.write("\t            ondestroy: function (action) {\r\n");
      out.write("\t            }\r\n");
      out.write("\t        });\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tcancelFlowDifInputRed();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//标记流程中的不同数据\r\n");
      out.write("\tfunction setFlowDifInputRed(difDate){\r\n");
      out.write("\t\t  mini.mask({el: document.body,cls: 'mini-mask-loading',html: '正在比较数据中   请稍等...'});\r\n");
      out.write("\t\t   mini.get(\"#id_flowselectwindow\").hide();\r\n");
      out.write("\t\t   var mobj=difDate;\r\n");
      out.write("\t\t   for(var key in mobj){  \r\n");
      out.write("\t\t\t   if(key.indexOf(\"rawValue_\")<0){\r\n");
      out.write("\t\t\t\t   if(key.indexOf(\"json_\")==0){\r\n");
      out.write("\t\t\t\t   //处理多行控件\r\n");
      out.write("\t\t\t\t   var gridid=key.substring(key.indexOf(\"json_\")+5);\r\n");
      out.write("\t\t\t\t   gridid=gridid.substring(0,gridid.length-4);\r\n");
      out.write("\t\t\t\t   var rendto=\"id_panelContainer_\"+gridid;\r\n");
      out.write("\t\t\t\t   var windowdiv=$(\"#\"+rendto);\r\n");
      out.write("\t\t\t\t   var tooldiv=windowdiv.find(\"div[class='mini-toolbar']\");\r\n");
      out.write("\t\t\t\t\t   if(tooldiv.length>0){\t\t\t\r\n");
      out.write("\t\t\t\t\t\t   var span='<span class=\"separator\"></span><span id=\"id_compare_grid_'+gridid+'\"';\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t   span=span+'    toolitemidentifier=\"'+gridid+'历史数据\"><a class=\"mini-button mini-button-plain\" href=\"javascript:void(0)\" id=\"'+gridid+'_历史数据\">';\r\n");
      out.write("\t\t\t\t\t\t   span=span+' <span class=\"mini-button-text  mini-button-icon icon-update\" style=\"\">历史数据</span></a></span>';\r\n");
      out.write("\t\t\t\t\t\t   tooldiv.append(span);\t\r\n");
      out.write("\t\t\t\t\t\t   var tempkey=key;\r\n");
      out.write("\t\t\t\t\t\t   $(\"#id_compare_grid_\"+gridid).bind(\"click\",function(){\r\n");
      out.write("\t\t\t\t\t\t\t   var tableContent=mobj[tempkey];\r\n");
      out.write("\t\t\t\t\t\t\t   showTabelDifData(gridid,tableContent)\r\n");
      out.write("\t\t\t\t\t\t   });\r\n");
      out.write("\t\t\t\t\t   }\r\n");
      out.write("\t\t\t\t   }else{\r\n");
      out.write("\t\t\t\t   //处理input\t   \r\n");
      out.write("\t\t\t\t   var inputs=$(\"input[name='\"+key+\"'],textarea[name='\"+key+\"']\");\r\n");
      out.write("\t\t\t\t   for(var i=0;i<inputs.length;i++){\r\n");
      out.write("\t\t\t\t\t   var oneinput=inputs[i];\r\n");
      out.write("\t\t\t\t\t   var sp=oneinput.parentNode;\r\n");
      out.write("\t\t\t\t       var tempsp=sp.parentNode;\r\n");
      out.write("\t\t\t\t       if(tempsp.nodeName==\"SPAN\"){\r\n");
      out.write("\t\t\t\t    \t   if(tempsp.style.display==\"none\"){\r\n");
      out.write("\t\t\t\t    \t\t   continue;\r\n");
      out.write("\t\t\t\t    \t   }\r\n");
      out.write("\t\t\t\t       }\r\n");
      out.write("\t\t\t\t\t   if(sp.nodeName==\"SPAN\"){\r\n");
      out.write("\t\t\t\t\t\tsp.isFlowDateCompare=true;\r\n");
      out.write("\t\t\t\t\t    sp.style.border=\"3px solid red\";\r\n");
      out.write("\t\t\t\t\t    var img=document.createElement(\"img\")\r\n");
      out.write("\t\t\t\t\t    img.src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/images/d02.png\";\r\n");
      out.write("\t\t\t\t\t    var tclass=sp.getAttribute(\"class\")||\"\";\r\n");
      out.write("\t\t\t\t\t    if(tclass.indexOf(\"mini-combobox\")>0){\r\n");
      out.write("\t\t\t\t\t    \timg.mess=mobj[\"rawValue_\"+key];\r\n");
      out.write("\t\t\t\t\t    }else{\r\n");
      out.write("\t\t\t\t\t    \t img.mess=mobj[key];\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t    img.height=20;\r\n");
      out.write("\t\t\t\t\t    img.isFlowDateCompare=true;\r\n");
      out.write("\t\t\t\t\t    img.onclick=function(){mini.alert(\"原值:\"+this.mess);}\t\r\n");
      out.write("\t\t\t\t\t    while(sp.nodeName!=\"TD\"){\r\n");
      out.write("\t\t\t\t\t    \tsp=sp.parentNode;\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t    sp.appendChild(img);\r\n");
      out.write("\t\t\t\t\t   }\r\n");
      out.write("\t\t\t\t   }\r\n");
      out.write("\t\t\t   }}\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   //改变按钮的文字\r\n");
      out.write("\t\t   $(\"#id_viewFlowDataContrast>span\").text(\"取消流程对比\");\r\n");
      out.write("\t\t   $(\"#id_viewFlowDataContrast\").attr(\"flag\",\"cancel\");  \r\n");
      out.write("\t\t   mini.unmask(document.body);\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction showTabelDifData(id,cdate){\r\n");
      out.write("\t\tmini.parse();\r\n");
      out.write("\t\tvar grid=mini.get(id);\r\n");
      out.write("\t\tvar twin=mini.open({\r\n");
      out.write("\t\t\tid:'id_flowselectwindow',\r\n");
      out.write("            title: \"历史数据\", width: globalClientWidth - 30, height: 300,\r\n");
      out.write("            showModal: false,\r\n");
      out.write("            showMaxButton: true,\r\n");
      out.write("            onload: function () {\r\n");
      out.write("            },\r\n");
      out.write("            ondestroy: function (action) {\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\tvar twinbody=twin.getBodyEl();\r\n");
      out.write("\t\tvar temp=' <div id=\"id_flowselectwindow_datagrid\" class=\"mini-datagrid\" style=\"width:'+(globalClientWidth - 30)+';height:300px;\"';\r\n");
      out.write("\t\ttemp=temp+ ' allowCellSelect=\"true\",showPager=\"false\">';\r\n");
      out.write("\t\ttwinbody.innerHTML=temp;\r\n");
      out.write("\t\tmini.parse();\r\n");
      out.write("\t\tvar cdata=mini.get(\"id_flowselectwindow_datagrid\");\r\n");
      out.write("\t\tcdata.set({columns:mini.decode(mini.encode(grid.columns))});\r\n");
      out.write("\t\tcdata.set({data:mini.decode(cdate)});\r\n");
      out.write("\t}\r\n");
      out.write("\t//取消流程数据对比\r\n");
      out.write("\tfunction cancelFlowDifInputRed(){\r\n");
      out.write("\t\t$(\"#id_viewFlowDataContrast>span\").text(\"流程数据对比\");\r\n");
      out.write("\t\t$(\"#id_viewFlowDataContrast\").attr(\"flag\",\"compare\");\r\n");
      out.write("\t\tvar imgs=$(\"img[src$='d02.png']\")//删除提示信息\r\n");
      out.write("\t\tfor(var i=0;i<imgs.length;i++){\r\n");
      out.write("\t\t\timgs[i].parentNode.removeChild(imgs[i]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar spans=$(\"span[isFlowDateCompare='true']\");//删除红框\r\n");
      out.write("\t\tfor(var i=0;i<spans.length;i++){\r\n");
      out.write("\t\t    spans[i].style.border='';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar spans=$(\"span[style*='border: 3px solid red']\");//删除红框\r\n");
      out.write("\t\tfor(var i=0;i<spans.length;i++){\r\n");
      out.write("\t\t    spans[i].style.border='';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar spans=$(\"span[id*='id_compare_grid_']\");//删除\r\n");
      out.write("\t\tfor(var i=0;i<spans.length;i++){\r\n");
      out.write("\t\t\tvar before=spans[i].previousSibling;\r\n");
      out.write("\t\t\tif(before!=null){\r\n");
      out.write("\t\t\t\tif(before.getAttribute(\"class\")==\"separator\"){\r\n");
      out.write("\t\t\t\t\tspans[i].parentNode.removeChild(before);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t    spans[i].parentNode.removeChild(spans[i]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//删除流程实例\r\n");
      out.write("\tfunction removeProcessInstance(){\r\n");
      out.write("\t    try{\r\n");
      out.write("\t \t   closeWindow();\r\n");
      out.write("\t \t}catch(e){}\r\n");
      out.write("\t\t/*if(isDraft && !window.isCompletedTask){\r\n");
      out.write("\t\t   if(!window.loadMask)\r\n");
      out.write("\t\t   {\r\n");
      out.write("\t\t    \twindow.loadMask = new tracywindyLoadMask(document.body,\"数据处理中，请稍等...\");\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   window.loadMask.show();\r\n");
      out.write("\t\t   globalCurrentPressButtonText = deleteButtonNoSavedDisplayText;\r\n");
      out.write("\t\t   document.getElementById('id_currentTaskSubmitButtonText').value = globalCurrentPressButtonText;\r\n");
      out.write("\t\t   submitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\ttry{\r\n");
      out.write("\t\t\t   closeWindow();\r\n");
      out.write("\t\t\t}catch(e){}\r\n");
      out.write("\t\t}*/\r\n");
      out.write("\t\t/*try{\r\n");
      out.write("\t\t    if(window.top.opener)\r\n");
      out.write("\t\t    {\r\n");
      out.write("\t\t\t    window.top.opener.location.reload();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}catch(e){}\r\n");
      out.write("\t\tcloseWindow();*/\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("\t/*window.onbeforeunload = onbeforeunload_handler; \r\n");
      out.write("\twindow.onunload = onunload_handler; \r\n");
      out.write("\tfunction onbeforeunload_handler(){ \r\n");
      out.write("\t    var warning=\"确认退出?\";    \r\n");
      out.write("\t    return window.confirm(warning); \r\n");
      out.write("\t} \r\n");
      out.write("\t    \r\n");
      out.write("\tfunction onunload_handler(){ \r\n");
      out.write("\t    var warning=\"谢谢光临\"; \r\n");
      out.write("\t    mini.alert(warning); \r\n");
      out.write("\t} */\r\n");
      out.write("\t/*if(isDraft && !window.isCompletedTask){\r\n");
      out.write("\t\twindow.onbeforeunload = function(e){    \r\n");
      out.write("\t\t   var ev = getEvent(e);\r\n");
      out.write("\t       var n = ev.screenX - window.screenLeft;    \r\n");
      out.write("\t       var b = n >= (document.documentElement.clientWidth-30);    \r\n");
      out.write("\t       if(b && ev.clientY < 0 || ev.altKey)    \r\n");
      out.write("\t       { \r\n");
      out.write("\t         removeProcessInstance();\r\n");
      out.write("\t         try{\r\n");
      out.write("\t \t\t    if(window.opener)\r\n");
      out.write("\t \t\t    {\r\n");
      out.write("\t \t\t\t    window.opener.location.reload();\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t \t\t}catch(e){}\r\n");
      out.write("\t         try{\r\n");
      out.write("\t        \tcloseWindow();\r\n");
      out.write("\t         }catch(e){}\r\n");
      out.write("\t         cancelBubble(ev);\r\n");
      out.write("\t       } \r\n");
      out.write("\t    }; \r\n");
      out.write("\t}*/\r\n");
      out.write("\r\n");
      out.write("</script> \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowButtonsFunc.jsp(55,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty currentHistoryTaskInfo.keyOne}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t    mini.alert(\"流程关键字为空,请先设定流程《");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentHistoryTaskInfo.workflowName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("》的第一个流程关键字\");\r\n");
        out.write("\t\t    return;\r\n");
        out.write("\t\t");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
