/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-06-16 05:28:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.reckon.rent_005fcommon;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class knowing_005frent_005fplan_005fframe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\tnew ApTable({\r\n");
      out.write("\t\t\tid: \"condition_frame1\",\r\n");
      out.write("\t\t\trenderTo: \"content_table_id10\",\r\n");
      out.write("\t\t\twidth: 675,\r\n");
      out.write("\t\t\theight: 330,\r\n");
      out.write("\t\t\tlazyLoad: false,\r\n");
      out.write("\t\t\ttitle: \"\",\r\n");
      out.write("\t\t\tisClickLoad:false,\r\n");
      out.write("\t\t\tremoteOper : false,\r\n");
      out.write("\t\t\tshowPager: false,\r\n");
      out.write("\t\t\tmultiSelect: true,\r\n");
      out.write("\t\t\tsortMode : \"client\",\r\n");
      out.write("\t\t\ttools: ['add', '-', 'edit', '-', 'remove',\r\n");
      out.write("\t\t\t      \t{html:'保存并关闭',plain:true,iconCls:'icon-save',\r\n");
      out.write("\t                \thandler:function(miniTable,buttonText){\r\n");
      out.write("\t                \t\tvar rentOrRate = $minigetvalue(\"rentorrate\");\r\n");
      out.write("\t                \t\tvar periodType = $minigetvalue(\"periodtype\");\r\n");
      out.write("\t                \t\tif(\"knowing_rent\" == rentOrRate){\r\n");
      out.write("\t                \t\t\t//下拉如何取值？\r\n");
      out.write("\t                \t\t\tvar leaseAmt = getNumber(\"cleanleasemoney\"); //融资额\r\n");
      out.write("\t                \t\t\tif(leaseAmt <= 0){\r\n");
      out.write("\t                \t\t\t\tmini.alert(\"融资额为0无法计算年租息率!\");\r\n");
      out.write("\t                \t\t\t\treturn;\r\n");
      out.write("\t                \t\t\t}\r\n");
      out.write("\t                \t\t\t\r\n");
      out.write("\t                \t\t\tvar knowingRent = miniTable.getData();\r\n");
      out.write("\t                \t\t\tvar incomeNumber = checkKnowingRentList(knowingRent);\r\n");
      out.write("\t                \t\t\tif(incomeNumber == 0){\r\n");
      out.write("\t                \t\t\t\tjQuery(\"#id_json_knowing_rent_plan_str\").val(\"[]\");\r\n");
      out.write("\t                \t\t\t\treturn;\r\n");
      out.write("\t                \t\t\t} else {\r\n");
      out.write("\t                \t\t\t\t$mini(\"incomenumber\").setValue(incomeNumber); //填充还租次数\r\n");
      out.write("\t                \t\t\t\t$mini(\"grace\").setValue(0); //宽限期设置为0\r\n");
      out.write("\t                \t\t\t\t//onInput();\r\n");
      out.write("\t                \t\t\t}\r\n");
      out.write("\t                \t\t\t//月  付\tincome_1 , 季  付\tincome_3,半年付\tincome_6,年  付\tincome_12,双月付\tincome_2\r\n");
      out.write("\t                \t\t\tvar incomeNumberYear = $minigetvalue(\"incomenumberyear\");//租金支付类型\r\n");
      out.write("\t                \t\t\tincomeNumberYear = incomeNumberYear.replace('income_', '');\r\n");
      out.write("\t                \t\t\tincomeNumberYear = 12 / incomeNumberYear;\r\n");
      out.write("\t                \t\t\t\r\n");
      out.write("\t                \t\t\t//var tempAttr = $(\"#id_json_knowing_rent_plan_str\").val();\r\n");
      out.write("\t                \t\t\t\r\n");
      out.write("\t                \t\t\t//tableJsonData.sort(by(\"startrentlist\"));\r\n");
      out.write("\t                \t\t\tknowingRent.sort(function(a,b){return a.startrentlist - b.startrentlist;});//排序\r\n");
      out.write("\t                \t\t\tvar tableJsonData = mini.encode(knowingRent);\r\n");
      out.write("\t                \t\t\t//$(\"input[name='']\").attr('value',tableJsonData);\r\n");
      out.write("\t                \t\t\t$(\"#id_json_knowing_rent_plan_str\").val(tableJsonData);\r\n");
      out.write("\t                \t\t\tmini.mask({\r\n");
      out.write("\t                \t\t\t\tel: document.body,\r\n");
      out.write("\t                \t\t\t\tcls: 'mini-mask-loading',\r\n");
      out.write("\t                \t\t\t\thtml: '正在计算年利率，请稍后...'\r\n");
      out.write("\t                \t\t\t});\r\n");
      out.write("\t                \t\t\t$.ajax({\r\n");
      out.write("\t                \t\t        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/leasing/knowRentCalculate.action\",\r\n");
      out.write("\t                \t\t        type: \"post\",\r\n");
      out.write("\t                \t\t        data:  {\r\n");
      out.write("\t                \t\t\t\t\tperiodType : periodType,\r\n");
      out.write("\t                \t\t\t\t\tleaseAmt : leaseAmt,\r\n");
      out.write("\t                \t\t\t\t\tincomeNumberYear : incomeNumberYear,\r\n");
      out.write("\t                \t\t\t\t\tendRentList : incomeNumber,\r\n");
      out.write("\t                \t\t\t\t\ttempAttr : tableJsonData\r\n");
      out.write("\t                \t\t\t\t} ,\r\n");
      out.write("\t                \t\t        success: function (res) {\r\n");
      out.write("\t                \t\t        \tif (res != '') {\r\n");
      out.write("\t                \t\t        \t\tres = res.replace(/(^\\s+)|(\\s+$)/g, \"\"); \r\n");
      out.write("\t                \t\t\t     \t    if(res != '') {\r\n");
      out.write("\t                \t\t\t\t    \t \tmini.unmask(document.body);\r\n");
      out.write("\t                \t\t\t     \t    \tmini.alert('年利率测算成功，请点击租金测算按钮测算内部收益率');\r\n");
      out.write("\t                \t\t\t\t    \t \t$mini(\"yearrate\").setValue(res);\r\n");
      out.write("\t                \t\t\t\t    \t \t$miniSetCombValue(\"settlemethod\",\"irregular_rent\",\"不规则\");\r\n");
      out.write("\t                \t\t\t\t    \t \t//changeRentPlanTableButton('a');\r\n");
      out.write("\t                \t\t\t     \t    }\r\n");
      out.write("\t                \t\t\t     \t}\r\n");
      out.write("\t                \t\t        },\r\n");
      out.write("\t                \t\t        error: function (jqXHR, textStatus, errorThrown) {\r\n");
      out.write("\t                \t\t            alert(jqXHR.responseText);\r\n");
      out.write("\t                \t\t            mini.unmask(document.body);\r\n");
      out.write("\t                \t\t        }\r\n");
      out.write("\t                \t\t    });\r\n");
      out.write("\t                \t\t}\r\n");
      out.write("\t                \t\tvar editWindow = mini.get(\"editWindow\");\r\n");
      out.write("\t            \t\t\teditWindow.hide();\r\n");
      out.write("\t            \t\t\tchangeRentPlanTableButton('a');\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t],\r\n");
      out.write("\t\t\tdata: mini.decode('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_knowing_rent_plan_str ? \"[]\" : json_knowing_rent_plan_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'),\r\n");
      out.write("\t\t\taddOperCallBack :function(miniTable,rowData){\r\n");
      out.write("\t\t\t\t//miniTable.sortBy(\"startrentlist\"); \r\n");
      out.write("\t\t\t\tvar rowDatas = miniTable.getData();\r\n");
      out.write("\t\t\t\trowDatas.sort(function(a,b){return a.startrentlist - b.startrentlist;});\r\n");
      out.write("\t\t\t\tminiTable.setData(rowDatas);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tafterShowWindowCallBack: function(miniTable,miniForm,operFlag){\r\n");
      out.write("\t\t\t\tif(\"add\" == operFlag){\r\n");
      out.write("\t\t\t\t\tvar startrentlist = mini.getbyName(\"startrentlist\");\r\n");
      out.write("\t\t\t\t\tvar row = miniTable.getRow(miniTable.getData().length-1);\r\n");
      out.write("\t\t\t\t\tif(null != row && row != 'undifined'){\r\n");
      out.write("\t\t\t\t\t\tendrentlist = row.endrentlist;\r\n");
      out.write("\t\t\t\t\t\tstartrentlist.setValue(parseInt(endrentlist)+1);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tstartrentlist.setValue(1);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tstartrentlist.setEnabled(false);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcompleteCallBack: function(miniTable){\r\n");
      out.write("\t\t\t\tvar rowDatas = miniTable.getData();\r\n");
      out.write("\t\t\t\trowDatas.sort(function(a,b){return a.startrentlist - b.startrentlist;});\r\n");
      out.write("\t\t\t\tminiTable.setData(rowDatas);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tcolumns: [\r\n");
      out.write("\t\t\t\t{type: 'indexcolumn'},\r\n");
      out.write("\t\t\t\t{type: 'checkcolumn'},\r\n");
      out.write("\t\t\t\t{field: 'id', header: 'id', visible: false},\r\n");
      out.write("\t\t\t\t{field: 'startrentlist', header: '开始期次',\r\n");
      out.write("\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tnewLine :true,\r\n");
      out.write("\t\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\t\t\tmaxLength:120,\r\n");
      out.write("\t\t\t\t\t\tcolspan: 3,\r\n");
      out.write("\t\t\t\t\t\twidth: 345,\r\n");
      out.write("\t\t\t\t\t\treadonly :true\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t{field: 'endrentlist', header: '截止期次',\r\n");
      out.write("\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tnewLine :true,\r\n");
      out.write("\t\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\t\t\tmaxLength:120,\r\n");
      out.write("\t\t\t\t\t\tcolspan: 3,\r\n");
      out.write("\t\t\t\t\t\twidth: 345\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t{field: 'rent', header: '租金',\r\n");
      out.write("\t\t\t\t\tdataType:\"currency\",\r\n");
      out.write("\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tnewLine :true,\r\n");
      out.write("\t\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\t\t\tmaxLength:120,\r\n");
      out.write("\t\t\t\t\t\tcolspan: 3,\r\n");
      out.write("\t\t\t\t\t\twidth: 345,\r\n");
      out.write("\t\t\t\t\t\ttype : 'thousand'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write(" <div id='content_table_id10'></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
