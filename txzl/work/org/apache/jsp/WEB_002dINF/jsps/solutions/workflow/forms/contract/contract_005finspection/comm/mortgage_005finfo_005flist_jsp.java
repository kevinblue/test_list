/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-08-12 06:35:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.contract.contract_005finspection.comm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mortgage_005finfo_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<input style=\"display:none;\"\tclass=\"mini-textarea\" id=\"id_json_mortgage_info_list_str\" name=\"json_mortgage_info_list_str\" value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_mortgage_info_list_str ? \"[]\" : json_mortgage_info_list_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'></input>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\tvar showTools = true;\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.isView}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("' == 'true' || isViewHistoryTask == true){showTools = false;};\r\n");
      out.write("\ttenwa.createTable({\r\n");
      out.write("\t\tid: \"mortgage_info_list\",\r\n");
      out.write("\t\trenderTo: \"id_table_mortgage_info_list\",\r\n");
      out.write("\t\twidth: globalClientWidth - 25,\r\n");
      out.write("\t\theight: 365,\r\n");
      out.write("\t\tlazyLoad: false,\r\n");
      out.write("\t\ttitle: \"\",\r\n");
      out.write("\t\tallowCellWrap: true,\r\n");
      out.write("\t\tremoteOper : false,\r\n");
      out.write("\t\tshowPager: true,\r\n");
      out.write("\t\tshowToolbar: showTools,\r\n");
      out.write("\t\t/* tools: ['add', '-', 'edit', '-', 'remove'], */\r\n");
      out.write("\t\t params:{contractidselect:contractidselect},\r\n");
      out.write("\t\t    xmlFileName: '/eleasing/workflow/contract/contract_finish/contract_collateral_list.xml',\r\n");
      out.write("\t\t\tcolumns: [\r\n");
      out.write("             {type:'indexcolumn'},\r\n");
      out.write("\t\t\t{field:'id', header:'id', visible:false},\r\n");
      out.write("\t\t\t{field:'equipname', header:'抵押物一名称', visible: true,\r\n");
      out.write("\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t    \t labelWidth:110,\r\n");
      out.write("\t\t\t\t    \t required:true,\r\n");
      out.write("\t\t\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'guarantyvalue', header:'原抵押物价值（万元）',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'presentvalue', header:'最新评估价值（万元）',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'mortgage_proportion1', header:'抵押率',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: false}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'whetherinsurance', header:'抵押物一是否保险',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'insuranceid', header:'保险单号码',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'purchaselife', header:'保险期限',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true},\r\n");
      out.write("\t\t\t     renderer:function(e){\r\n");
      out.write("\t\t\t    \t if(e.record.startdata==null||e.record.startdata==\"\"){\r\n");
      out.write("\t                \t\treturn null;\r\n");
      out.write("\t                \t}\r\n");
      out.write("\t\t\t    \t return e.record.startdata+\"至\"+e.record.enddata;\r\n");
      out.write("\t\t\t     }\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'firstbeneficiary', header:'第一受益人',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'mortgage_signday1', header:'抵押合同签署日',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field:'mortgage_startdate1', header:'担保时效起始日期',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t,\r\n");
      out.write("\t\t\t{field:'mortgage_enddate1', header:'担保时效截至日期',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t,\r\n");
      out.write("\t\t\t{field:'mortgage_currentstatus1', header:'抵押物目前状态',formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine:true,required:true,\r\n");
      out.write("\t\t\t\tlabelWidth:110,\r\n");
      out.write("\t\t    \t required:true,\r\n");
      out.write("\t\t\t     fieldVisible: true}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t]\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"id_table_mortgage_info_list\" style=\"width:100%;height:100%;\"></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
