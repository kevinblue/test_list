/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-08-12 06:35:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.jbpm_002dcore;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class getWorkflowHisAttachment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/spring.tld", Long.valueOf(1486185689584L));
    _jspx_dependants.put("/WEB-INF/tlds/c.tld", Long.valueOf(1486185689570L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"id_workflowhisAttachmentContainer\" style=\"width: 100%;\"></div>\r\n");
      out.write("\r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write(" jQuery(function(){\r\n");
      out.write("\t    var pageHeightV = jQuery(window).height() - 100;\r\n");
      out.write("\t\tjQuery('#id_workflowhisAttachmentContainer').css({height:pageHeightV});\t\r\n");
      out.write(" \t\r\n");
      out.write("\t\tvar instanceIds = '';\r\n");
      out.write("\t\tajaxRequest({\r\n");
      out.write("\t\t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/table/getTableData.action\",\r\n");
      out.write("\t\t\tasync:false,\r\n");
      out.write("\t\t\tsuccess:function(response) { \r\n");
      out.write("\t\t\t\tvar rt = (response.responseText);\r\n");
      out.write("\t\t\t\tvar jsonData = mini.decode(rt);\r\n");
      out.write("\t\t\t\tif(jsonData.datas.length > 0){\r\n");
      out.write("\t\t\t\t\tinstanceIds = jsonData.datas[0].instance_ids_;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfailure:function(response){ },\r\n");
      out.write("\t\t\tparams:{\r\n");
      out.write("\t\t\t\txmlFileName:'/jbpm/flowHisAttachemntRelated.xml',\r\n");
      out.write("\t\t\t\tcurrentTaskId:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentHistoryTaskInfo.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write(" \t\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\t\tnew ApTable({\r\n");
      out.write("\t\t\t\tid:'id_workflowhisAttachment',\r\n");
      out.write("\t\t\t\trenderTo: \"id_workflowhisAttachmentContainer\",\r\n");
      out.write("\t\t\t\twidth:\"100%\",\r\n");
      out.write("\t\t\t\theight:\"100%\",\r\n");
      out.write("\t\t\t\ttitle:'其他流程附件',\r\n");
      out.write("\t\t\t\t//iconCls:'icon-node',\r\n");
      out.write("\t\t\t\tmultiSelect:false,\r\n");
      out.write("\t\t\t\thiddenQueryArea:false,//是否将查询区域折叠起来\r\n");
      out.write("\t\t\t\tqueryButtonColSpan:2,\r\n");
      out.write("\t\t\t\tqueryButtonNewLine:false,\r\n");
      out.write("\t\t\t\tshowPager:false,\t\t\t\t\r\n");
      out.write("\t\t\t\txmlFileName:'/jbpm/flowHisAttachemnt.xml',\r\n");
      out.write("\t\t\t\tparams:{\r\n");
      out.write("\t\t\t\t\tinstanceIds:instanceIds,\r\n");
      out.write("\t\t\t\t\tkey : jQuery(\"#id_currentHistoryTaskInfo_keyOne\").val()\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t//<a style='text-decoration:none;' onclick='downloadUploadFile(\\\"\" + fileUUIDListArr[i] + \"\\\");' title='\"+workFlowlocale['DownloadFile']+\"' href='javascript:void(0);'>\" + fileNameListArr[i] + \"</a>\r\n");
      out.write("\t\t\t\tcolumns:[ \r\n");
      out.write("\t\t\t\t   \t{field:'display_name_',header:'流程名称'},\r\n");
      out.write("\t\t\t\t   \t{field:'activity_name_',header:'上传步骤'},\r\n");
      out.write("\t\t\t\t   \t{field:'filetypename',header:'文件名称'},\r\n");
      out.write("\t\t\t\t\t{field:'username',header:'上传人'},\r\n");
      out.write("\t\t\t\t   \t{field:'uploadtime',header:'上传时间',dateFormat:'yyyy-MM-dd HH:mm:ss'},\r\n");
      out.write("\t\t\t\t\t{field:'filenames',header:'文件清单',width:'25%',\t\r\n");
      out.write("\t\t\t\t   \t\trenderer : function(e){\r\n");
      out.write("\t\t\t\t\t\t\tvar id = e.record.id;\r\n");
      out.write("\t\t\t\t\t\t\tvar filenames = e.record.filenames;\r\n");
      out.write("\t\t\t\t\t\t\treturn \"<a style='text-decoration:none;' onclick='downloadUploadFile(\\\"\" +id+ \"\\\");' title='\"+workFlowlocale['DownloadFile']+\"' href='javascript:void(0);'>\" + filenames + \"</a>\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write(" \t});\r\n");
      out.write(" </script>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
