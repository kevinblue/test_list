/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-06-02 01:34:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.fund.fund_005fput;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fund_005fput_005fcurrent_005finfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\t//获取父页面中保存在hidden域的值\r\n");
      out.write("\tvar showTools = true;\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.isView}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("' == 'true'||isViewHistoryTask==true){showTools = false;};\r\n");
      out.write("\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\tnew ApTable({\r\n");
      out.write("\t\tid: \"put_current\",\r\n");
      out.write("\t\trenderTo: \"id_table_put_current\",\r\n");
      out.write("\t\twidth : globalClientWidth-10,\r\n");
      out.write("\t\theight : 300,\r\n");
      out.write("\t\teditFormPopupWindowWidth : 600,\r\n");
      out.write("\t\tlazyLoad: true,\r\n");
      out.write("\t\tisClickLoad:false,\r\n");
      out.write("\t\ttitle: \"\",\r\n");
      out.write("\t\tremoteOper : false,\r\n");
      out.write("\t\tshowPager: false,\r\n");
      out.write("\t\tshowToolbar: showTools,\r\n");
      out.write("\t\tmultiSelect: true,\r\n");
      out.write("\t\ttools: ['edit','-','copy','-','remove'],\r\n");
      out.write("\t\tvalidateForm: function(miniTable, miniForm){\r\n");
      out.write("\t\t\tvar comparemoney =getMiniEditFormField(\"put_current.comparemoney\").getValue();\r\n");
      out.write("\t\t\tvar factmoney =getMiniEditFormField(\"put_current.factmoney\").getValue();\r\n");
      out.write("\t\t\tcomparemoney=parseFloat(comparemoney).toFixed(2);\r\n");
      out.write("\t\t\tfactmoney=parseFloat(factmoney).toFixed(2);\r\n");
      out.write("\t\t\tif (parseFloat(comparemoney) < parseFloat(factmoney))\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tmini.alert(\"本次付款金额不能大于计划可付款金额!(\"+comparemoney+\")\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t  var purpose=getMiniEditFormField(\"put_current.purpose\").getValue();\r\n");
      out.write("\t\t  if(getLength(purpose)>25){\r\n");
      out.write("\t\t\t  mini.alert(\"支付用途不能超过25个字符或8个汉字\");\r\n");
      out.write("\t\t\t  return false;\r\n");
      out.write("\t\t  } \r\n");
      out.write("\t\t  var clientaccnum=getMiniEditFormField(\"put_current.clientaccnumber\").getValue();\r\n");
      out.write("\t\t  if(clientaccnum==\"\"||clientaccnum==null){\r\n");
      out.write("\t\t\t  mini.alert(\"对方收款账号不能为空！\");\r\n");
      out.write("\t\t\t  return false;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t  var bankshortname=getMiniEditFormField(\"put_current.depositbanktype\").getValue();\r\n");
      out.write("\t\t  if(bankshortname==\"\"||bankshortname==null){\r\n");
      out.write("\t\t\t  mini.alert(\"收款方银行简称不能为空！\");\r\n");
      out.write("\t\t\t  return false;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tupdateOperCallBack: function(miniTable,rowData){\r\n");
      out.write("\t\t\tvar datas = miniTable.getData();//获取所有对象\r\n");
      out.write("\t\t\tif(rowData.settlemethod == \"payfund6\"){\r\n");
      out.write("\t\t\t\tfor(var i = 0;i < datas.length;i ++){\r\n");
      out.write("\t\t\t\t\tif(datas[i].paymentid == rowData.paymentid&&datas[i].settlemethod==\"payfund11\"){\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].accountingdate = rowData.accountingdate;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].accountbankname = rowData.accountbankname;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].accountbank = rowData.accountbank;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].account = rowData.account;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].accnumber = rowData.accnumber;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].clientbank = rowData.clientbank;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].clientaccount = rowData.clientaccount;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].clientaccnumber = rowData.clientaccnumber;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].memo = rowData.memo;\r\n");
      out.write("\t\t\t\t\t\t\tdatas[i].memoname = rowData.memoname;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tminiTable.setData(datas);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tremoveOperCallBack:function(miniTable, rowDatas){ \r\n");
      out.write("\t           var guarantable=mini.get(\"premise_condition\");\r\n");
      out.write("\t           var guarantableData=guarantable.getData();\r\n");
      out.write("\t\t\t   for(j=0;j<rowDatas.length;j++){\r\n");
      out.write("\t               var paymentid=rowDatas[j].paymentid;\r\n");
      out.write("\t               var feetype=rowDatas[j].feetype;\r\n");
      out.write("\t               for(var i=0;i<guarantableData.length;i++){\r\n");
      out.write("\t            \t   var paymentidTmp=guarantableData[i].paymentid.replace(/[^0-9]/ig,\"\");//去除所有字符串只取数字\r\n");
      out.write("\t                    if(paymentid==paymentidTmp&&feetype==guarantableData[i].feetype){\r\n");
      out.write("\t                    \tguarantable.removeRow(guarantableData[i]);\r\n");
      out.write("\t                    }\r\n");
      out.write("\t               }                \r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t       return true;\r\n");
      out.write("\t    },\r\n");
      out.write("\t\tdata: JsonUtil.decode('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_put_current_str ? \"[]\" : json_put_current_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'),\r\n");
      out.write("\t\tcolumns: [\r\n");
      out.write("\t\t\t{type: 'indexcolumn'},\r\n");
      out.write("\t\t\t{type: 'checkcolumn'},\r\n");
      out.write("\t\t\t{field: 'id', header: 'id', visible: false},\r\n");
      out.write("\t\t\t{field: 'pid', header: 'pid', visible: false},\r\n");
      out.write("\t\t\t{field:'fundfundchargeplan',header:'付款计划',visible: false},\r\n");
      out.write("\t\t\t{field: 'paymentid', header: '付款编号',formEditorConfig:{readOnly : true}}, \r\n");
      out.write("\t\t\t{field: 'comparemoney', header: '比较金额', visible: false,formEditorConfig:{readOnly : true}}, \r\n");
      out.write("\t\t\t{field: 'feetype', header: '费用类型',formEditorConfig:{}, visible: false},\r\n");
      out.write("\t\t\t{field: 'feetypename', header: '费用类型',formEditorConfig:{readOnly : true}},\r\n");
      out.write("\t\t\t{field: 'paytype', header: '支付类型',formEditorConfig:{newLine:true}, visible: false},\r\n");
      out.write("\t\t\t{field: 'paytypename', header: '支付类型', visible: false,formEditorConfig:{newLine:true,readOnly:true}},\r\n");
      out.write("\t\t\t{field: 'factobjectname', header: '支付对象',width:150,formEditorConfig:{fieldVisible: false}},\r\n");
      out.write("\t\t\t{field: 'factobject', header: '支付对象',visible: false,formEditorConfig:{\r\n");
      out.write("\t\t\t\tnewLine: true,\r\n");
      out.write("\t\t\t\ttype : 'queryinput',\r\n");
      out.write("\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\ttextField: 'name',\r\n");
      out.write("\t\t\t\tvalueField: 'name',\r\n");
      out.write("\t\t\t\tallowInput: false,\r\n");
      out.write("\t\t\t\tfieldVisible: true,\r\n");
      out.write("\t\t\t\tonSelect:function(combo,rowData){\r\n");
      out.write("\t\t\t\t\tvar rowDatas = combo.getSelectedOptionData();\r\n");
      out.write("\t\t\t\t\tvar customer = rowDatas.customertypename;\r\n");
      out.write("\t\t\t\t\t var customertype = rowDatas.customertype;\r\n");
      out.write("\t\t\t\t\tvar objid = rowDatas.value;\r\n");
      out.write("\t\t\t\t\tmini.getbyName(\"factobjectid\").setValue(objid);\r\n");
      out.write("\t\t\t\t\tif(customertype==\"\"){\r\n");
      out.write("\t\t\t\t\t\tgetMiniEditFormField(\"put_current.customertype\").setValue(\"1\");\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tgetMiniEditFormField(\"put_current.customertype\").setText(customer);\r\n");
      out.write("\t\t\t\t\tgetMiniEditFormField(\"put_current.customertype\").setValue(customertype);\r\n");
      out.write("\t\t\t\t\tgetMiniEditFormField(\"put_current.customertypename\").setValue(customer);}\r\n");
      out.write("\t\t\t\t\tclearCustbank();\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\txmlFileName: 'common/customertype.xml'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}},\r\n");
      out.write("\t\t\t{field: 'factobjectid', header: 'factobjectid',visible: false,formEditorConfig:{\r\n");
      out.write("\t\t\t\ttype:'text',\r\n");
      out.write("\t\t\t\ttextField: 'factobjectid',\r\n");
      out.write("\t\t\t\tfieldVisible: false,\r\n");
      out.write("\t\t\t\tvalueField:'factobjectid'\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}},\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t{field: 'customertype', header: '客户类型',visible: false,formEditorConfig:{\r\n");
      out.write("\t\t\t\ttype : 'combobox',\r\n");
      out.write("\t\t\t\ttextField: 'name',\r\n");
      out.write("\t\t\t\tfieldVisible:true,\r\n");
      out.write("\t\t\t\tallowInput: false,\r\n");
      out.write("\t\t\t\tvalueField:'value',\r\n");
      out.write("\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\tpid:'proj_type',\r\n");
      out.write("\t\t\t\t\txmlFileName: '/combos/comboDict.xml'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}},\r\n");
      out.write("\t\t\t{field: 'customertypename', header: '客户类型',visible: true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfieldVisible: false,\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'customertype',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'name'\r\n");
      out.write("\t\t\t\t\t}},\r\n");
      out.write("\t\t\t{field: 'factmoney', header: '付款金额',summary : true,dataType : \"currency\",\r\n");
      out.write("\t\t\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\t\t\t\tvtype:\"float\",\r\n");
      out.write("\t\t\t\t\t\t\trequired: true\r\n");
      out.write("\t\t\t\t\t\t}},\r\n");
      out.write("\t\t\t{field: 'settlemethod', header: '结算方式', visible: false,formEditorConfig:{\r\n");
      out.write("\t\t\t\ttype : 'combobox',\r\n");
      out.write("\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\ttextField: 'name',\r\n");
      out.write("\t\t\t\tvalueField: 'value',\r\n");
      out.write("\t\t\t\tallowInput: true,\r\n");
      out.write("\t\t\t\tfieldVisible: true,\r\n");
      out.write("\t\t\t\tcolspan : 3,\t\r\n");
      out.write("\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t     pid: 'PayFund',\r\n");
      out.write("\t\t\t\t\t xmlFileName: 'combos/comboDict.xml'\t\r\n");
      out.write("\t\t\t\t}}},\r\n");
      out.write("\t\t\t{field: 'settlemethodname', header: '结算方式',formEditorConfig:{fieldVisible: false,\r\n");
      out.write("\t\t\t\t  fillFromFieldName : 'settlemethod',\r\n");
      out.write("\t\t\t\tfillProperty : 'name'}},\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t{field: 'factdate', header: '付款日期',formEditorConfig:{newLine:true,type:'date'}},\r\n");
      out.write("\t\t\t{field: 'accountingdate', header: '会计处理日',formEditorConfig:{type:'date',required: true}},\r\n");
      out.write("\t\t\t{field: 'accountbankname', header: '对方银行',visible: false,formEditorConfig:{\r\n");
      out.write("\t\t\t\tfillFromFieldName : 'accountbank',\r\n");
      out.write("\t\t\t\tfillProperty : 'accbank'}},\r\n");
      out.write("\t\t\t/* {field: 'accountbank', header: '本方银行',\r\n");
      out.write("\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\t\ttype : 'combobox', \r\n");
      out.write("\t\t\t\t\tmultiSelect : false, \r\n");
      out.write("\t\t\t\t\tvalueField : 'accbank', \r\n");
      out.write("\t\t\t\t\ttextField : 'memo', \r\n");
      out.write("\t\t\t\t\tlabelWidth : 100, \r\n");
      out.write("\t\t\t\t\twidth : 200, \r\n");
      out.write("\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\txmlFileName : 'eleasing/jsp/sysmgr/sysdatamgr/ownaccountinfo.xml'\r\n");
      out.write("\t\t\t\t\t   \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, */ \r\n");
      out.write("\t\t\t{field: 'memoname', header: '本方账户别名',visible: false},\r\n");
      out.write("\t\t\t{field: 'memo',header: '本方账户别名',visible: false,formEditorConfig: {\r\n");
      out.write("\t\t\t\ttype : 'queryinput',\r\n");
      out.write("\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\tmultiSelect : false,\r\n");
      out.write("\t\t\t\tfieldVisible: true,\r\n");
      out.write("\t\t\t\treadOnly: false,\r\n");
      out.write("\t\t\t\tvalueField : 'accbank',\r\n");
      out.write("\t\t\t\ttextField : 'memoname',\r\n");
      out.write("\t\t\t\tonSelect:function($me, inputObj, rowData){\r\n");
      out.write("\t\t\t\t\tmini.getbyName(\"account\").setValue(rowData.accname);\r\n");
      out.write("\t\t\t\t\tmini.getbyName(\"accnumber\").setValue(rowData.accnumber);\r\n");
      out.write("\t\t\t\t\tmini.getbyName(\"accountbank\").setValue(rowData.accbank);\r\n");
      out.write("\t\t\t\t\tmini.getbyName(\"memoname\").setValue(rowData.memoname);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\txmlFileName : 'eleasing/jsp/sysmgr/sysdatamgr/ownaccountinfo.xml'\r\n");
      out.write("\t\t\t\t\t/* userid:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("', */\r\n");
      out.write("\t\t\t\t\t//applydate:applydate /*关联省份内容*/\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t}},\r\n");
      out.write("\t\t{field:'accountbank',header:'本方银行',width:150,formEditorConfig: {readonly:true}},\r\n");
      out.write("\t\t\t{field: 'account', header: '本方账户',width:150,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\t/* fillFromFieldName : 'accountbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'accname', */\r\n");
      out.write("\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field: 'accnumber', header: '本方账号',width:150,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\t/* fillFromFieldName : 'accountbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'accnumber', */\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field: 'clientbankname', header: '对方银行',visible: false,formEditorConfig:{\r\n");
      out.write("\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\tfillProperty : 'clientbank'}},\r\n");
      out.write("\t\t\t{field: 'clientbank', header: '对方银行',width:150,\r\n");
      out.write("\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\t\ttype : 'combobox',\r\n");
      out.write("\t\t\t\t\trequired : true,\r\n");
      out.write("\t\t\t\t\tmultiSelect : false, \r\n");
      out.write("\t\t\t\t\tvalueField : 'clientbank',\r\n");
      out.write("\t\t\t\t\ttextField : 'clientbank',\r\n");
      out.write("\t\t\t\t\tlabelWidth : 100,\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\t//onclick:'initCustbank',\r\n");
      out.write("\t\t\t\t\tonbuttonclick:'initCustbank',\r\n");
      out.write("\t\t\t\t\t//onbeforeshowpopup:'initCustbank',\r\n");
      out.write("\t\t\t\t\tlazyLoad: true,\r\n");
      out.write("\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\txmlFileName : 'common/custbankInfo.xml',\r\n");
      out.write("\t\t\t\t\t\tcustname:'xxxxx'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t//账户名称\r\n");
      out.write("\t\t\t{field: 'clientaccount', header: '对方账户',width:150,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'clientaccount',\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\t \t\t\r\n");
      out.write("\t\t\t{field: 'clientaccnumber', header: '对方账号',width:150,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'clientaccnumber',\r\n");
      out.write("\t\t   \t\t\treadonly:true,\r\n");
      out.write("\t\t   \t\t\tnewLine:true,\r\n");
      out.write("\t\t   \t\t\tcolspan : 1\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t//银行行号--\r\n");
      out.write("\t\t\t{field: 'clientbankno', header: '银行行号',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'clientbankno',\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t//银行简称--\r\n");
      out.write("\t\t\t{field: 'depositbanktype', header: '对方银行简称',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'depositbanktype',\r\n");
      out.write("\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\t\t\t\r\n");
      out.write("\t\t\t//银联号--\r\n");
      out.write("\t\t\t{field: 'unionclientbankno', header: '银联号',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'unionclientbankno',\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t//开户行省--\r\n");
      out.write("\t\t\t{field: 'depositprovince', header: '开户行省',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'depositprovince',\r\n");
      out.write("\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t//开户行市--\r\n");
      out.write("\t\t\t{field: 'depositcity', header: '开户行市',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\tfillFromFieldName : 'clientbank',\r\n");
      out.write("\t\t\t\t\tfillProperty : 'depositcity',\r\n");
      out.write("\t\t   \t\t\treadonly:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field: 'purpose', header: '用途',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\trequired : true,\r\n");
      out.write("\t\t\t\t\tnewLine:true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field: 'priorityflag', header: '加急标识',width:150,visible:true,\r\n");
      out.write("\t\t\t\tformEditorConfig:{\t\r\n");
      out.write("\t\t\t\t\tshowNullItem:true,\r\n");
      out.write("\t\t\t\t\tvisible:true,\r\n");
      out.write("\t\t\t\t\ttype:'combobox',\r\n");
      out.write("\t\t\t\t\ttextField:'text',\r\n");
      out.write("\t\t\t\t\tvalueField:'id',\r\n");
      out.write("\t\t\t\t\tdata:[{id:'Y',text:'Y'},{id:'N',text:'N'}]\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t{field: 'ffcmemo', header: '备注',formEditorConfig:{\r\n");
      out.write("\t\t\t\ttype: 'textarea',\r\n");
      out.write("\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\tcolspan : 3,\r\n");
      out.write("\t\t\t\twidth: 400,\r\n");
      out.write("\t\t\t\theight:70\r\n");
      out.write("\t\t\t}}\r\n");
      out.write("\r\n");
      out.write("\t\t]\r\n");
      out.write("\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t \r\n");
      out.write("});\r\n");
      out.write("function initCustbank(){\r\n");
      out.write("    var factobj=getMiniEditFormField(\"put_current.factobject\");\r\n");
      out.write("    var clientbank=getMiniEditFormField(\"put_current.clientbank\");\r\n");
      out.write("    fact=factobj.getText();\r\n");
      out.write("    if(fact==\"\"){mini.alert(\"请选择付款对象\");return false;}\r\n");
      out.write("    var param={};\r\n");
      out.write("    param[\"custname\"]=fact;\r\n");
      out.write("    param[\"xmlFileName\"]=\"common/custbankInfo.xml\",\r\n");
      out.write("    seajs.use([ \"js/apcomponent/aputil/aputil.js\" ],function(ApUtil){\r\n");
      out.write("    \t ApUtil.setComboxParams(clientbank,param);\r\n");
      out.write("     });\r\n");
      out.write("}\r\n");
      out.write("function checkFundPutInfo()\r\n");
      out.write("{\t\r\n");
      out.write("\tvar chargeData= mini.get(\"put_current\").getData()\r\n");
      out.write("\tif( put_current.length == 0)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tmini.alert(\"本次付款明细不能为空!\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function clearCustbank(){\r\n");
      out.write("\tgetMiniEditFormField(\"put_current.clientaccount\").setValue(\"\");\r\n");
      out.write("\tgetMiniEditFormField(\"put_current.clientaccnumber\").setValue(\"\");\r\n");
      out.write("\tgetMiniEditFormField(\"put_current.clientbank\").setValue(\"\");\r\n");
      out.write("\tgetMiniEditFormField(\"put_current.clientbank\").setText(\"\");\r\n");
      out.write("}\r\n");
      out.write("//检查抵扣的金额和被抵扣金额是不是一样\r\n");
      out.write("function CheckDecdueMoney(){\r\n");
      out.write("   var payData=mini.get(\"put_current\").getData();\r\n");
      out.write("   var fundData=mini.get(\"caution_money_refund_detail\").getData();\r\n");
      out.write("   var rentData=mini.get(\"rent_income_detail\").getData();\r\n");
      out.write("   if(payData.length>0){\r\n");
      out.write("       for(var i=0;i<payData.length;i++){\r\n");
      out.write("            for(var j=0;j<fundData.length;j++){\r\n");
      out.write("                if(payData[i].pid==fundData[j].fundfundchargeplan&&(parseFloat(payData[i].factmoney)!=parseFloat(fundData[j].factmoney))){\r\n");
      out.write("                    mini.alert(\"设备款(\"+payData[i].factmoney+\")与被抵扣的\"+fundData[j].feetypename+\"(\"+fundData[j].factmoney+\")不一样\");\r\n");
      out.write("                      return false;\r\n");
      out.write("                 }\r\n");
      out.write("            }\r\n");
      out.write("            for(var h=0;h<rentData.length;h++){\r\n");
      out.write("            \t   if(payData[i].pid==rentData[h].planid&&(parseFloat(payData[i].factmoney)!=parseFloat(rentData[h].rent))){\r\n");
      out.write("                       mini.alert(\"设备款(\"+payData[i].factmoney+\")与被抵扣的租金(\"+rentData[h].rent+\")不一样\");\r\n");
      out.write("                         return false;\r\n");
      out.write("                    }\r\n");
      out.write("            }\r\n");
      out.write("       }\r\n");
      out.write("       return true;\r\n");
      out.write("   }else{\r\n");
      out.write("     return true;\r\n");
      out.write("   }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getLength(str)   \r\n");
      out.write("{  \r\n");
      out.write("    var realLength = 0;  \r\n");
      out.write("    for (var i = 0; i < str.length; i++)   \r\n");
      out.write("    {  \r\n");
      out.write("        charCode = str.charCodeAt(i);  \r\n");
      out.write("        if (charCode >= 0 && charCode <= 128)   \r\n");
      out.write("        realLength += 1;  \r\n");
      out.write("        else   \r\n");
      out.write("        realLength += 3;  \r\n");
      out.write("    }  \r\n");
      out.write("    return realLength;  \r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"id_table_put_current\"></div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
