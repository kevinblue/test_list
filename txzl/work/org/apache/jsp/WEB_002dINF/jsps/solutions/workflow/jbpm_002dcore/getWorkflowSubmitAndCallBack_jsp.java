/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-08-12 06:35:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.jbpm_002dcore;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class getWorkflowSubmitAndCallBack_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/spring.tld", Long.valueOf(1486185689584L));
    _jspx_dependants.put("/WEB-INF/tlds/c.tld", Long.valueOf(1486185689570L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    if (_005fjspx_005ftagPool_005fc_005fif_0026_005ftest != null) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    if (_005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody != null) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//提交按钮时候执行回调函数\r\n");
      out.write("\tfunction btn_callBack(buttonText, assignmentIsSilentModel) {\r\n");
      out.write("\t\tmini.unmask(document.body);\r\n");
      out.write("\t\tmini.mask({el: document.body,cls: 'mini-mask-loading',html: '请稍后...'});\r\n");
      out.write("\t\tif(true == assignmentIsSilentModel){\r\n");
      out.write("\t\t\tdocument.getElementById(\"id_assignmentIsSilentModel\").value =\"true\"; \r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tdocument.getElementById(\"id_assignmentIsSilentModel\").value =\"false\"; \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tglobalCurrentPressButtonText = buttonText;\r\n");
      out.write("\t\tdocument.getElementById('id_currentTaskSubmitButtonText').value = globalCurrentPressButtonText;\r\n");
      out.write("\t\tif(resetRouteButtonDisplayText == globalCurrentPressButtonText){\r\n");
      out.write("\t\t\tvar infoFlag = \"all\";\r\n");
      out.write("\t\t\tif(getLazyLoadedObj(infoFlag,jQuery(document.body),function(){\r\n");
      out.write("\t\t\t\tmini.get('__allRouteChoseWindow').show();\r\n");
      out.write("\t\t\t})){\r\n");
      out.write("\t\t\t\tmini.get('__allRouteChoseWindow').show();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(saveButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\t//是否保存\t\r\n");
      out.write("\t\t\tif(window.workflowSaveCallBack) { //返回true提交，返回false不提交 ，该回调函数可与用表单字段验证\r\n");
      out.write("\t\t\t\tif(!workflowSaveCallBack()) {\r\n");
      out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t} else if((submitButtonDisplayText == globalCurrentPressButtonText)) {\r\n");
      out.write("\t\t\tif(!checkAttachmentInfoFunc()){\r\n");
      out.write("\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t//是否提交\t\r\n");
      out.write("\t\t\tif(window.workflowSubmitCallBack &&　submitButtonDisplayText == globalCurrentPressButtonText) { //返回true提交，返回false不提交 ，该回调函数可与用表单字段验证\r\n");
      out.write("\t\t\t\tif(!workflowSubmitCallBack(buttonText)) {\r\n");
      out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t/*\r\n");
      out.write("\t\t\t//通过哪条路由路线进行提交\r\n");
      out.write("\t\t\tvar isNeedChoseOper = false;\r\n");
      out.write("\t\t\tvar requestNextRoute = document.getElementById(\"id_requestInitiatorRoute\");\r\n");
      out.write("\t\t\tmini.alert(requestNextRoute.value);\r\n");
      out.write("\t\t\t//modify by tracywindy 20140211\r\n");
      out.write("\t\t\tif(!requestNextRoute.value){\r\n");
      out.write("\t\t\t\tif(window.workflowNextRouteCallBack){ //该回调函数可用于设置提交提交的路由线路通过(requestNextRoute.value=路由线路值)进行设置;\r\n");
      out.write("\t\t\t\t\t//该回调函数先于endAction中的appointRequestRoute方法的执行\r\n");
      out.write("\t\t\t\t\tisNeedChoseOper = workflowNextRouteCallBack(buttonText,requestNextRoute);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\trequestNextRoute.value=\"\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}*/\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif((submitButtonDisplayText == globalCurrentPressButtonText)) {\r\n");
      out.write("\t\t\t\tvar infoFlag=\"next\";\r\n");
      out.write("\t\t\t\tif(getLazyLoadedObj(infoFlag,jQuery(document.body),function(){\r\n");
      out.write("\t\t\t\t\tdealNextRouteChoseWindow();\r\n");
      out.write("\t\t\t\t\tif(!isShowSubmitChosePersonWindow) {\r\n");
      out.write("\t\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tmini.get('__nextRouteChoseWindow').show();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t})){\r\n");
      out.write("\t\t\t\t\tdealNextRouteChoseWindow();\r\n");
      out.write("\t\t\t\t\tif(!isShowSubmitChosePersonWindow) {\r\n");
      out.write("\t\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tmini.get('__nextRouteChoseWindow').show();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t}else if(backButtonDisplayText == globalCurrentPressButtonText){\r\n");
      out.write("\t\t\tif(window.workflowSaveCallBack) { //返回true提交，返回false不提交 ，该回调函数可与用表单字段验证\r\n");
      out.write("\t\t\t\tif(!workflowSaveCallBack()) {\r\n");
      out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t  ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\tvar infoFlag=\"back\";\r\n");
      out.write("\t\t\tif(getLazyLoadedObj(infoFlag,jQuery(document.body),function(){\r\n");
      out.write("\t\t\t\t//modify by tracywindy for default chose first person\r\n");
      out.write("\t\t\t\tdealNextRouteChoseWindow();\r\n");
      out.write("\t\t\t\tif(!isShowBackChosePersonWindow) {\r\n");
      out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\tmini.alert(\"退回选择列表为空，不允许退回\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tmini.get('__backRouteChoseWindow').show();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})) { \r\n");
      out.write("\t\t\t\t//modify by tracywindy for default chose first person\r\n");
      out.write("\t\t\t\tdealNextRouteChoseWindow();\r\n");
      out.write("\t\t\t\tif(!isShowBackChosePersonWindow) {\r\n");
      out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\tmini.alert(\"退回选择列表为空，不允许退回\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tmini.get('__backRouteChoseWindow').show();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\telse if(deleteButtonDisplayText == buttonText) {\r\n");
      out.write("\t\t\tmini.confirm(\"确认删除该流程实例么？\", \"确定？\",\r\n");
      out.write("\t            function (action) {\r\n");
      out.write("\t                if (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\t\tmini.mask({el: document.body,cls: 'mini-mask-loading',html: '数据处理中，请稍后...'});\r\n");
      out.write("\t\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t                }\r\n");
      out.write("\t            }\r\n");
      out.write("\t        );\r\n");
      out.write("\t\t} else if(abondonButtonDisplayText == buttonText) {\r\n");
      out.write("\t\t\tmini.confirm(\"确认废弃该流程实例么？\", \"确定？\",\r\n");
      out.write("\t            function (action) {\r\n");
      out.write("\t                if (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\t\tmini.mask({el: document.body,cls: 'mini-mask-loading',html: '数据处理中，请稍后...'});\r\n");
      out.write("\t\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t                }\r\n");
      out.write("\t            }\r\n");
      out.write("\t        );\r\n");
      out.write("\t\t} else if(readButtonDisplayText == buttonText) {\r\n");
      out.write("\t\t\tnew tracywindyCommonUserSelection({\r\n");
      out.write("\t\t\t\thiddenInput:'id_readUserIds_hidden',\r\n");
      out.write("\t\t\t\tdisplayInput:'id_readUserRealNames_display',\r\n");
      out.write("\t\t\t\tdisplayPromit:'参与传阅的人员',\r\n");
      out.write("\t\t\t\tisMultiSelect:true,\r\n");
      out.write("\t\t\t\tchoseCallBack:function(){\r\n");
      out.write("\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).show();\r\n");
      out.write("\t\t} else if(signatureButtonDisplayText == buttonText) {\r\n");
      out.write("\t\t\tnew tracywindyCommonUserSelection({\r\n");
      out.write("\t\t\t\thiddenInput:'id_signatureUserIds_hidden',\r\n");
      out.write("\t\t\t\tdisplayInput:'id_signatureUserRealNames_display',\r\n");
      out.write("\t\t\t\tdisplayPromit:'参与会签的人员',\r\n");
      out.write("\t\t\t\tisMultiSelect:true,\r\n");
      out.write("\t\t\t\tchoseCallBack:function(){\r\n");
      out.write("\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).show();\r\n");
      out.write("\t\t} else if(assignmentButtonDisplayText == buttonText) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tnew tracywindyCommonUserSelection({\r\n");
      out.write("\t\t\t\thiddenInput:'id_assignmentedUserId_hidden',\r\n");
      out.write("\t\t\t\tdisplayInput:'id_assignmentUserRealName_display',\r\n");
      out.write("\t\t\t\tdisplayPromit:'被指派人员',\r\n");
      out.write("\t\t\t\tisMultiSelect:true,\r\n");
      out.write("\t\t\t\tchoseCallBack:function(){\r\n");
      out.write("\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).show();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* new tracywindyCommonUserSelection({\r\n");
      out.write("\t\t\t\thiddenInput:'id_assignmentedUserId_hidden',\r\n");
      out.write("\t\t\t\tdisplayInput:'id_assignmentUserRealName_display',\r\n");
      out.write("\t\t\t\tisMultiSelect:false,\r\n");
      out.write("\t\t\t\tdisplayPromit:'被指派人员',\r\n");
      out.write("\t\t\t\tchoseCallBack:function(){\r\n");
      out.write("\t\t\t\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).show(); */\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmini.unmask(document.body);\r\n");
      out.write("\t}\r\n");
      out.write(" \r\n");
      out.write("\tfunction submitFormWithoutWorkflowNextCallBack() {\r\n");
      out.write("\t\t//条件通过提交表单\r\n");
      out.write("\t\tjQuery(\"#id_workflowAdviseContainer\").css(\"overflow\",\"hidden\");\r\n");
      out.write("\t\tjQuery(\"#id_workflowFormContainer\").css(\"overflow\",\"hidden\");\r\n");
      out.write("\t\tmini.unmask(document.body);\r\n");
      out.write("\t\tmini.mask({el: document.body,cls: 'mini-mask-loading',html: '数据加载中，请稍后...'});\r\n");
      out.write("\t\twindow.top.document.body.style.overflow=\"hidden\";\r\n");
      out.write("\t\tvar submitProcessedForm = document.getElementById(\"id_submitProcessedForm\");\r\n");
      out.write("\t\tsubmitProcessedForm.submit();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t/*function saveCallBack(returnResult){}*///保存回调函数\r\n");
      out.write("\tfunction ajaxCallBack(returnResult,assignmentIsSilentModel) {\r\n");
      out.write("\t\tjQuery(\"#id_workflowAdviseContainer\").css(\"overflow\",\"auto\");\r\n");
      out.write("\t\tjQuery(\"#id_workflowFormContainer\").css(\"overflow\",\"auto\");\r\n");
      out.write("\r\n");
      out.write("\t\tvar isReturn = false;// 防止mini的alert起不到阻塞线程的作用\r\n");
      out.write("\t\tif(saveButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\tif(window.saveCallBack) { //保存成功时候的回调函数\r\n");
      out.write("\t\t\t\tsaveCallBack(returnResult);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(!assignmentIsSilentModel){\r\n");
      out.write("\t\t\t\tvar promitInfo = '");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\tmini.alert(promitInfo);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tisReturn = true;\r\n");
      out.write("\t\t} else if(readButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\tvar promitInfo = '");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\tmini.alert(promitInfo);\r\n");
      out.write("\t\t\tisReturn = true;\r\n");
      out.write("\t\t} else if(signatureButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\tvar promitInfo = '");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      if (_jspx_meth_spring_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\tmini.alert(promitInfo);\r\n");
      out.write("\t\t\tisReturn = true;\r\n");
      out.write("\t\t} else if(assignmentButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\treturnResult = '");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      if (_jspx_meth_spring_005fmessage_005f7(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\t\tisReturn = false;\r\n");
      out.write("\t\t} else if(deleteButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\treturnResult = \"该流程已被成功删除\";\r\n");
      out.write("\t\t} else if(abondonButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\treturnResult = \"该流程已被成功废弃\";\r\n");
      out.write("\t\t} else if(assignmentButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else if(submitButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else if(backButtonDisplayText == globalCurrentPressButtonText) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(isReturn == false){\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\tif(window.opener) {\r\n");
      out.write("\t\t\t\t\twindow.opener.location.reload();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} catch(e) {}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\tif(deleteButtonNoSavedDisplayText != globalCurrentPressButtonText){\r\n");
      out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
      out.write("\t\t\t\t\tmini.alert(returnResult, '提示', function(){\r\n");
      out.write("\t\t\t\t\t\tcloseWindow();\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tcloseWindow();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} catch(e) {}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//提交下一步\r\n");
      out.write("\tfunction submitNextTask(){\r\n");
      out.write("\t\tjQuery(\"#id_currentTaskSubmitButtonText\").val(submitButtonDisplayText);\r\n");
      out.write("\t\tjQuery(\"#id_submitProcessedForm\")[0].submit();\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction doChoseRouteOper(operFlag) {\r\n");
      out.write("\t\t//短信\r\n");
      out.write("\t\t/*if(true){\r\n");
      out.write("\t\t\tif(jQuery('#isSendMsgFlag').attr('checked')){\r\n");
      out.write("\t\t\t\t//短信内容\r\n");
      out.write("\t\t\t\tvar value = jQuery('#sendMsgContent');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}*/\r\n");
      out.write("\t\tvar currentChosePersonArr = [];\r\n");
      out.write("\t\tvar displayPromit = \"\";\r\n");
      out.write("\t\tif('next' == operFlag) {\r\n");
      out.write("\t\t\tdisplayPromit = \"请选择要提交到的节点\";\r\n");
      out.write("\t\t} else if('back' == operFlag) {\r\n");
      out.write("\t\t\tdisplayPromit = \"请选择要退回到的节点\";\r\n");
      out.write("\t\t} else if('all' == operFlag) {\r\n");
      out.write("\t\t\tdisplayPromit = \"请选择要重置路由的节点\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar firstAlllement = jQuery(\"input[name^='\"+operFlag+\"_chose_']:checked:first\")[0];\r\n");
      out.write("\t\tif(!firstAlllement){\r\n");
      out.write("\t\t\tmini.alert(displayPromit);\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar parent_name = firstAlllement.getAttribute(\"parent_name\");\r\n");
      out.write("\t\tjQuery(\"input[parent_name='\"+parent_name+\"']\").each(function(){\r\n");
      out.write("\t\t\tvar currentName = this.getAttribute(\"name\");\r\n");
      out.write("\t\t\tif(!currentChosePersonArr.contains(currentName)){\r\n");
      out.write("\t\t\t\tcurrentChosePersonArr.push(currentName);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tvar allActivityRequestInitiators = {};\r\n");
      out.write("\t\tvar signatureAllActivityRequestInitiators = {};\r\n");
      out.write("\t\tvar readAllActivityRequestInitiators = {};\r\n");
      out.write("\t\tvar chosedRoutePath = null;\r\n");
      out.write("\t\tif(currentChosePersonArr) {\r\n");
      out.write("\t\t\tfor(var i=0;i<currentChosePersonArr.length;i++) {\r\n");
      out.write("\t\t\t\tvar currentChosePerson = currentChosePersonArr[i];\r\n");
      out.write("\t\t\t\tcurrentChoses = jQuery(\"input[name='\"+currentChosePerson+\"']:checked\");\r\n");
      out.write("\t\t\t\t//modify by tracywindy 2013-08-26 \r\n");
      out.write("\t\t\t\tactorCurrentChoses = jQuery(\"input[name='\"+currentChosePerson+\"'][flag='actor']\");\r\n");
      out.write("\t\t\t\tactorCurrentChosesChecked = jQuery(\"input[name='\"+currentChosePerson+\"'][flag='actor']:checked\");\r\n");
      out.write("\t\t\t\treadCurrentChoses = jQuery(\"input[name='\"+currentChosePerson+\"'][flag='read']\");\r\n");
      out.write("\t\t\t\treadCurrentChosesChecked = jQuery(\"input[name='\"+currentChosePerson+\"'][flag='read']:checked\");\r\n");
      out.write("\t\t\t\tsignatureCurrentChoses = jQuery(\"input[name='\"+currentChosePerson+\"'][flag='signature']\");\r\n");
      out.write("\t\t\t\tsignatureCurrentChosesChecked = jQuery(\"input[name='\"+currentChosePerson+\"'][flag='signature']:checked\");\r\n");
      out.write("\t\t\t\tif(operFlag == 'back'){\r\n");
      out.write("\t\t\t\t\tvar backmodel =  jQuery(\"input[name='backmodel']:checked\").val();\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"id_workflowbackmodel\").value = backmodel;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tvar isNeedSignature = (signatureCurrentChoses.length>0)&&(0 == signatureCurrentChosesChecked.length);\r\n");
      out.write("\t\t\t\tvar isNeedRead = (readCurrentChoses.length>0)&&(0 == readCurrentChosesChecked.length);\r\n");
      out.write("\t\t\t\tvar msg = \"\";\r\n");
      out.write("\t\t\t\tif((actorCurrentChoses.length>0)&&(0 == actorCurrentChosesChecked.length)){\r\n");
      out.write("\t\t\t\t\tmsg = \"任务处理人\";\r\n");
      out.write("\t\t\t\t} else if(isNeedSignature){\r\n");
      out.write("\t\t\t\t\tmsg = \"会签对象\";\r\n");
      out.write("\t\t\t\t} else if(isNeedRead){\r\n");
      out.write("\t\t\t\t\tmsg = \"传阅对象\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(msg/*!currentChoses[0]*/) {\r\n");
      out.write("\t\t\t\t\tmini.alert(\"请选择【\"+currentChosePerson.substring(currentChosePerson.lastIndexOf(\"_\")+1)+\"】\"+msg);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tvar dealMethod = null;\r\n");
      out.write("\t\t\t\t\tvar passedCount = null;\r\n");
      out.write("\t\t\t\t\tvar requestInitiators = new Array();\r\n");
      out.write("\t\t\t\t\tvar readRequestInitiators = new Array();\r\n");
      out.write("\t\t\t\t\tvar signatureRequestInitiators = new Array();\r\n");
      out.write("\t\t\t\t\tcurrentChoses.each(function(i){\r\n");
      out.write("\t\t\t\t\t\tif(0 == i) {\r\n");
      out.write("\t\t\t\t\t\t\tchosedRoutePath = this.getAttribute(\"routePath\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tvar flag = this.getAttribute(\"flag\");\r\n");
      out.write("\t\t\t\t\t\tswitch(flag){\r\n");
      out.write("\t\t\t\t\t\t\tcase \"actor\":{\r\n");
      out.write("\t\t\t\t\t\t\t\tif(0 == i){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdealMethod = this.getAttribute(\"dealMethod\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tpassedCount = this.getAttribute(\"passedCount\");\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\trequestInitiators.push({username:this.getAttribute(\"login_name\")});break;}\r\n");
      out.write("\t\t\t\t\t\t\tcase \"read\":{readRequestInitiators.push({username:this.getAttribute(\"login_name\")});break;}\r\n");
      out.write("\t\t\t\t\t\t\tcase \"signature\":{signatureRequestInitiators.push({username:this.getAttribute(\"login_name\")});break;}\r\n");
      out.write("\t\t\t\t\t\t\tdefault:{requestInitiators.push({username:this.getAttribute(\"login_name\")});break;}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\t*\tchangeRequestInitiator={\r\n");
      out.write("\t\t\t\t\t* \t\t\"02-分支任务1\":[{\"username\":\"Admin\"}],\r\n");
      out.write("\t\t\t\t\t* \t\t\"03-分支任务2\":[{\"username\":\"Admin\"}],\r\n");
      out.write("\t\t\t\t\t* \t\t\"04-分支任务3\":[{\"username\":\"Admin\"}]\r\n");
      out.write("\t\t\t\t\t* \t}\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\tvar node_name = currentChoses[0].getAttribute(\"node_name\");\r\n");
      out.write("\t\t\t\t\tif(\"NPassed\" == dealMethod){\r\n");
      out.write("\t\t\t\t\t\tif(parseInt(passedCount) > requestInitiators.length){\r\n");
      out.write("\t\t\t\t\t\t\tmini.alert(\"节点【\"+node_name+\"】所勾选的处理人员数量必须大于等于需要通过的\"+passedCount+\"人!\");\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tallActivityRequestInitiators[node_name] =requestInitiators; \r\n");
      out.write("\t\t\t\t\treadAllActivityRequestInitiators[node_name] =readRequestInitiators; \r\n");
      out.write("\t\t\t\t\tsignatureAllActivityRequestInitiators[node_name] =signatureRequestInitiators; \r\n");
      out.write("\t\t\t\t\t//设置任意路由的节点名称\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"id_choseRequestNextRouteNodeName\").value =currentChoses[0].getAttribute(\"parent_node_name\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif('next' == operFlag) {\r\n");
      out.write("\t\t\tmini.get('__nextRouteChoseWindow').hide();\r\n");
      out.write("\t\t} else if('back' == operFlag) {\r\n");
      out.write("\t\t\tmini.get('__backRouteChoseWindow').hide();\r\n");
      out.write("\t\t} else if('all' == operFlag) {\r\n");
      out.write("\t\t\tmini.get('__allRouteChoseWindow').hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar requestNextRoute = document.getElementById(\"id_requestInitiatorRoute\");\r\n");
      out.write("\t\tvar changeRequestInitiator = document.getElementById(\"id_changeRequestInitiator\");\r\n");
      out.write("\t\tvar signatureChangeRequestInitiator = document.getElementById(\"id_signatureChangeRequestInitiator\");\r\n");
      out.write("\t\tvar readChangeRequestInitiator = document.getElementById(\"id_readChangeRequestInitiator\");\r\n");
      out.write("\t\trequestNextRoute.value = chosedRoutePath;\r\n");
      out.write("\t\tchangeRequestInitiator.value = JsonUtil.encode(allActivityRequestInitiators);\r\n");
      out.write("\t\tsignatureChangeRequestInitiator.value = JsonUtil.encode(signatureAllActivityRequestInitiators);\r\n");
      out.write("\t\treadChangeRequestInitiator.value = JsonUtil.encode(readAllActivityRequestInitiators);\r\n");
      out.write("\t\tsubmitFormWithoutWorkflowNextCallBack();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction dealNextRouteChoseWindow() {\r\n");
      out.write("\t\t//通过哪条路由路线进行提交\r\n");
      out.write("\t\tvar requestNextRoute = document.getElementById(\"id_requestInitiatorRoute\");\r\n");
      out.write("\t\tvar conditionRouteType = document.getElementById(\"conditionRouteType\").value;\r\n");
      out.write("\t\t//modify by tracywindy 20140211\r\n");
      out.write("\t\tif(!requestNextRoute.value){\r\n");
      out.write("\t\t\tif(conditionRouteType == 'pageCallBack' && window.workflowNextRouteCallBack)//该回调函数可用于设置提交提交的路由线路通过(requestNextRoute.value=路由线路值)进行设置;\r\n");
      out.write("\t\t\t{//该回调函数先于endAction中的appointRequestRoute方法的执行\r\n");
      out.write("\t\t\t\tworkflowNextRouteCallBack(globalCurrentPressButtonText,requestNextRoute);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\trequestNextRoute.value=\"\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar currentChosePersonArr = null;\r\n");
      out.write("\t\t//var requestNextRoute = document.getElementById(\"id_requestInitiatorRoute\");\r\n");
      out.write("\t\tvar requestNextRouteValue = (!requestNextRoute.value?\"\":requestNextRoute.value);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tjQuery(\"tr[identity]\").show();\r\n");
      out.write("\t\t//jQuery(\"input[name^='back_chose_']:first\").attr(\"checked\",true);\r\n");
      out.write("\t\tif((backButtonDisplayText == globalCurrentPressButtonText)) {//modify by tracywindy for default chose first person\r\n");
      out.write("\t\t\tcurrentChosePersonArr = backChosePersonArr;\r\n");
      out.write("\t\t\t/*\r\n");
      out.write("\t\t\tif(window.workflowNextRouteCallBack) {\r\n");
      out.write("\t\t\t\tjQuery(\"tr[identity][identity!='back_chose_tr_\"+requestNextRouteValue+\"']\").hide();\r\n");
      out.write("\t\t\t\t// jQuery(\"tr[identity][identity^='back_chose_tr_'][routePath!='\"+requestNextRouteValue+\"']\").hide();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t*/\r\n");
      out.write("\t\t\t//jQuery(\"input[name^='back_chose_']:first\").attr(\"checked\",true);\r\n");
      out.write("\t\t\t//return;\r\n");
      out.write("\t\t} else if((submitButtonDisplayText == globalCurrentPressButtonText)) {\t\r\n");
      out.write("\t\t\tcurrentChosePersonArr = nextChosePersonArr;\r\n");
      out.write("\t\t\tif(requestNextRouteValue || (conditionRouteType == 'pageCallBack' && window.workflowNextRouteCallBack)) {\r\n");
      out.write("\t\t\t\t//历史\r\n");
      out.write("\t\t\t\tjQuery(\"tr[identity][submitType!='lastBack'][identity!='next_chose_tr_\"+requestNextRouteValue+\"']\").hide();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//modify by tracywindy for default chose first person\r\n");
      out.write("\t\tvar $firstCheckedInput = null;\r\n");
      out.write("\t\t//modify by tracywindy 2014-03-18\r\n");
      out.write("\t\tvar $submitBackedElement = jQuery(\"tr[submitType='lastBack'] input[parent_node_name][parent_name]:first\");\r\n");
      out.write("\t\t//默认勾选取消\r\n");
      out.write("\t\tif(currentChosePersonArr) {\r\n");
      out.write("\t\t\tfor(var i=0;i<currentChosePersonArr.length;i++) {\r\n");
      out.write("\t\t\t\tvar currentChoses = null;\r\n");
      out.write("\t\t\t\tjQuery(\"input[name='\"+currentChosePersonArr[i]+\"']\").attr(\"checked\",false);\r\n");
      out.write("\t\t\t\tif(requestNextRouteValue || (conditionRouteType == 'pageCallBack' && window.workflowNextRouteCallBack)) {\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\t//var nameFlag = \"\";\r\n");
      out.write("\t\t\t\t\tif((submitButtonDisplayText == globalCurrentPressButtonText)) {\r\n");
      out.write("\t\t\t\t\t\t//nameFlag =\"next_chose_\";\r\n");
      out.write("\t\t\t\t\t\tcurrentChoses = jQuery(\"input[routePath='\"+requestNextRouteValue+\"'][name='\"+currentChosePersonArr[i]+\"']:first\"); \r\n");
      out.write("\t\t\t\t\t} else if((backButtonDisplayText == globalCurrentPressButtonText)) {\r\n");
      out.write("\t\t\t\t\t\t//nameFlag =\"back_chose_\";\r\n");
      out.write("\t\t\t\t\t\tcurrentChoses = jQuery(\"input[name='\"+currentChosePersonArr[i]+\"']:first\"); \r\n");
      out.write("\t\t\t\t\t}*/\r\n");
      out.write("\t\t\t\t\t//预留退回选择\r\n");
      out.write("\t\t\t\t\t//modify by tracywindy 2014-03-18\r\n");
      out.write("\t\t\t\t\tif($submitBackedElement[0]){\r\n");
      out.write("\t\t\t\t\t\tcurrentChoses = $submitBackedElement;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tcurrentChoses = jQuery(\"input[routePath='\"+requestNextRouteValue+\"'][name='\"+currentChosePersonArr[i]+\"']:first\"); \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(null == $firstCheckedInput){\r\n");
      out.write("\t\t\t\t\t\t$firstCheckedInput = currentChoses;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tcurrentChoses = jQuery(\"input[name='\"+currentChosePersonArr[i]+\"']:first\");\r\n");
      out.write("\t\t\t\t\tif(null == $firstCheckedInput){\r\n");
      out.write("\t\t\t\t\t\t$firstCheckedInput = currentChoses;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//如果是多人任一 或 多人全部时选中所有人 \r\n");
      out.write("\t\t\t\tvar dealMethod = jQuery(\"input[name='\"+currentChosePersonArr[i]+\"']\").attr(\"dealMethod\");\r\n");
      out.write("\t\t\t\tif(dealMethod == \"AllPassed\" || dealMethod == \"OnePassed\"){\r\n");
      out.write("\t\t\t\t\t/* alert(\"next_chose\"+requestNextRouteValue+\"_checkedAll_actor\");\r\n");
      out.write("\t\t\t\t\talert(currentChosePersonArr[i]);\r\n");
      out.write("\t\t\t\t\tjQuery(\"#next_chose_\"+requestNextRouteValue+\"_checkedAll_actor\").click(); */\r\n");
      out.write("\t\t\t\t\tif(jQuery(\"input[name='\"+currentChosePersonArr[i]+\"']\").length > 0){\r\n");
      out.write("\t\t\t\t\t\tvar firstNode = jQuery(jQuery(\"input[name='\"+currentChosePersonArr[i]+\"']\")[0]);\r\n");
      out.write("\t\t\t\t\t\tvar parent_name = firstNode.attr('parent_name');\r\n");
      out.write("\t\t\t\t\t\tvar allChecked = jQuery(\"input[id='\"+parent_name+\"_checkedAll_actor']\");\r\n");
      out.write("\t\t\t\t\t\tif($submitBackedElement.length <= 0 ){\r\n");
      out.write("\t\t\t\t\t\t\tvar isOnly = true;\r\n");
      out.write("\t\t\t\t\t\t\tif(currentChosePersonArr.length >1 ){\r\n");
      out.write("\t\t\t\t\t\t\t\tisOnly = false;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif(isOnly){\r\n");
      out.write("\t\t\t\t\t\t\t  //allChecked.attr('disabled','true');\r\n");
      out.write("\t\t\t\t\t\t\t  allChecked.click();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tjQuery(\"input[name='\"+currentChosePersonArr[i]+\"']\").each(function(){\r\n");
      out.write("\t\t\t\t\t\t\t\tjQuery(this).attr('disabled','true');\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t//currentChoses.attr(\"checked\",true);\r\n");
      out.write("\t\t\t\t\tcurrentChoses.click();\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//added by tracywindy\r\n");
      out.write("\t\tif(null != $firstCheckedInput){\r\n");
      out.write("\t\t\tvar first_parent_name = $firstCheckedInput.attr(\"parent_name\");\r\n");
      out.write("\t\t\tif(first_parent_name){\r\n");
      out.write("\t\t\t\tjQuery(\"input[parent_node_name][parent_name][parent_name!='\"+first_parent_name+\"']\").attr(\"checked\",false); \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//add by zhangc 传阅自动选中\r\n");
      out.write("\t\tjQuery(\"#id_nextRouteChoseWindow input[id$='_checkedAll_read']\").click();\r\n");
      out.write("\t\tjQuery(\"#id_nextRouteChoseWindow input[flag='read']\").attr(\"disabled\",true);\r\n");
      out.write("\t}\r\n");
      out.write("\t//选择会签人或者传阅人\r\n");
      out.write("\tfunction readOrSignatureOper(flag) {\r\n");
      out.write("\t\tvar msg = \"确认提交么？\";\r\n");
      out.write("\t\tif(!window.confirm(msg)) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar hidden_text_choseAdvise = document.getElementById('id_hidden_text_choseAdvise');\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/jbpm/removeReadPersonToTask.action\";\r\n");
      out.write("\t\tif('read'!=flag) {\r\n");
      out.write("\t\t\tif(!hidden_text_choseAdvise.value){mini.alert(\"请填写处理意见\");return;};\r\n");
      out.write("\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/jbpm/removeSignaturePersonToTask.action\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmini.unmask(document.body);\r\n");
      out.write("\t\tmini.mask({el: document.body,cls: 'mini-mask-loading',html: '数据加载中，请稍后...'});\r\n");
      out.write("\t\tajaxRequest({\r\n");
      out.write("\t\t\turl:url,\r\n");
      out.write("\t\t\tsuccess:function(res){mini.alert(\"操作成功\");if(window.opener){window.opener.location.reload();}closeWindow();},\r\n");
      out.write("\t\t\tfailure:function(res){mini.alert(\"操作失败\");if(window.opener){window.opener.location.reload();}closeWindow();},\r\n");
      out.write("\t\t\tparams:{\r\n");
      out.write("\t\t\t\tjbpmWorkflowHistoryInfoId:currentJbpmWorkflowHistoryInfoId,\r\n");
      out.write("\t\t\t\tprocessedAdvise:hidden_text_choseAdvise.value\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(41,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'1' eq currentTaskIsNeedAdvise}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t\t\tvar hidden_text_choseAdvise = document.getElementById('id_hidden_choseResult');\r\n");
        out.write("\t\t\t\tif(!hidden_text_choseAdvise.value){\r\n");
        out.write("\t\t\t\t\tmini.unmask(document.body);\r\n");
        out.write("\t\t\t\t\tmini.alert(\"请填写审批结论\");\r\n");
        out.write("\t\t\t\t\tvar tab = mini.get('__jbpmProcessFormTabs');\r\n");
        out.write("\t\t\t\t\ttab.setActiveIndex(1);\r\n");
        out.write("\t\t\t\t\treturn;\r\n");
        out.write("\t\t\t\t};\r\n");
        out.write("\t\t\t");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(98,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'1' eq currentTaskIsNeedAdvise}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t\tvar hidden_text_choseAdvise = document.getElementById('id_hidden_choseResult');\r\n");
        out.write("\t\t\tif(!hidden_text_choseAdvise.value){\r\n");
        out.write("\t\t\t\tmini.unmask(document.body);\r\n");
        out.write("\t\t\t\tmini.alert(\"请填写审批结论\");\r\n");
        out.write("\t\t\t\tvar tab = mini.get('__jbpmProcessFormTabs');\r\n");
        out.write("\t\t\t\ttab.setActiveIndex(1);\r\n");
        out.write("\t\t\t\treturn;\r\n");
        out.write("\t\t\t};\r\n");
        out.write("\t\t   ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f0.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(222,22) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setCode("Save");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(222,22) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setText("保存");
    int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
      if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f0.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f1.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(222,61) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f1.setCode("Success");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(222,61) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f1.setText("成功");
    int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
      if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f1.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f2.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(228,21) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f2.setCode("WorkflowRead");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(228,21) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f2.setText("传阅");
    int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
      if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f2.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f3.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(228,68) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f3.setCode("Success");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(228,68) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f3.setText("成功");
    int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
      if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f3.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f4.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(233,21) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f4.setCode("Signature");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(233,21) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f4.setText("会签");
    int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
      if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f4.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f5.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(233,65) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f5.setCode("Success");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(233,65) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f5.setText("成功");
    int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
      if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f5.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f6.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(238,19) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f6.setCode("Assignment");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(238,19) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f6.setText("工作指派");
    int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
      if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f6.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f7.setParent(null);
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(238,66) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f7.setCode("Success");
    // /WEB-INF/jsps/solutions/workflow/jbpm-core/getWorkflowSubmitAndCallBack.jsp(238,66) name = text type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f7.setText("成功");
    int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
      if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f7.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005ftext_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
    }
    return false;
  }
}
