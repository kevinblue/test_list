/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-06-16 05:43:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.reckon.rent_005fonhire;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class condition_005fframe_005f5_005f1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tlds/c.tld", Long.valueOf(1486185689570L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../rent_common/cal_js_5_1.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("process", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("onhire", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t#businessconditionFormOnhireOnhire .td-content-title{\r\n");
      out.write("\t\twidth:160px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#businessconditionFormOnhireOnhire .td-content{\r\n");
      out.write("\t\twidth:160px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"businessconditionFormOnhireOnhire\">\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../rent_common/condition_content_5_1.jsp", out, false);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"beforeInterestContainer\" class=\"mini-window\" title=\"租前息计算\" style=\"width:700px;height:400px;\" \r\n");
      out.write("\t    showModal=\"true\" allowResize=\"true\" allowDrag=\"true\"\r\n");
      out.write("\t    >\r\n");
      out.write("\t    <div id='content_table_beforeInterest_id'></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var businessForm = new mini.Form(\"businessconditionFormOnhireOnhire\");\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\t//inputs[d].className=inputs[d].className+\" element-readonly\";\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.isView}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("' == 'true' || isViewHistoryTask==true){\r\n");
      out.write("\t\tminiui_ext.disableFormFields(\"businessconditionFormOnhireOnhire\");\r\n");
      out.write("\t\t$('#calculateButton').hide();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t//var inputs = jQuery('#businessconditionFormOnhireOnhire').find('input').css('background','#f5f8fa');\r\n");
      out.write("\t\tvar form = new mini.Form(\"businessconditionFormOnhireOnhire\");\r\n");
      out.write("\t\tvar fields = form.getFields();\r\n");
      out.write("\t\tfor(var index =0;index<fields.length;index++){\r\n");
      out.write("\t\t\t //判断是否是下拉框控件，是则同时把text属性传入后台\r\n");
      out.write("\t\t\tif(fields[index].uiCls != \"mini-datepicker\" && fields[index].name != 'beforeinterest'){\r\n");
      out.write("\t\t\t\tfields[index].disable();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\t\tnew ApTable({\r\n");
      out.write("\t\t\t\tid: \"condition_beforeInterest\",\r\n");
      out.write("\t\t\t\trenderTo: \"content_table_beforeInterest_id\",\r\n");
      out.write("\t\t\t\twidth: 675,\r\n");
      out.write("\t\t\t\theight: 330,\r\n");
      out.write("\t\t\t\tlazyLoad: false,\r\n");
      out.write("\t\t\t\ttitle: \"\",\r\n");
      out.write("\t\t\t\tisClickLoad:false,\r\n");
      out.write("\t\t\t\tremoteOper : false,\r\n");
      out.write("\t\t\t\tshowPager: false,\r\n");
      out.write("\t\t\t\tmultiSelect: true,\r\n");
      out.write("\t\t\t\tsortMode : \"client\",\r\n");
      out.write("\t\t\t\tdata: mini.decode('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_fund_plan_equipamt_str ? \"[]\" : json_fund_plan_equipamt_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'),\r\n");
      out.write("\t\t\t\ttools:[{html:'保存',plain:true,iconCls:'icon-save',\r\n");
      out.write("                \thandler:function(miniTable,buttonText){\r\n");
      out.write("                \t\t//起租日\r\n");
      out.write("                \t\tcalculateBeforeInterest(miniTable);\r\n");
      out.write("                \t}\t\r\n");
      out.write("\t\t\t\t}], \r\n");
      out.write("\t\t\t\tcolumns: [\r\n");
      out.write("\t\t\t\t\t{type: 'indexcolumn'},\r\n");
      out.write("\t\t\t\t\t{type: 'checkcolumn'},\r\n");
      out.write("\t\t\t\t\t{field: 'id', header: 'id', visible: false},\r\n");
      out.write("\t\t\t\t\t{field: 'factmoney', header: '投放金额',\r\n");
      out.write("\t\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tnewLine :true,\r\n");
      out.write("\t\t\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t\tmaxLength:120,\r\n");
      out.write("\t\t\t\t\t\t\tcolspan: 3,\r\n");
      out.write("\t\t\t\t\t\t\twidth: 345,\r\n");
      out.write("\t\t\t\t\t\t\treadonly :true\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t{field: 'plandate', header: '投放日期',\r\n");
      out.write("\t\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tnewLine :true,\r\n");
      out.write("\t\t\t\t\t\t\trequired: true,\r\n");
      out.write("\t\t\t\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t\tmaxLength:120,\r\n");
      out.write("\t\t\t\t\t\t\tcolspan: 3,\r\n");
      out.write("\t\t\t\t\t\t\twidth: 345\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t{field: 'datediff', header: '计息天数'},\r\n");
      out.write("\t\t\t\t\t{field: 'beforeinterestbranch', header: '计息金额',dataType : \"currency\",summary : true}\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tvar rentorrate = mini.get('rentorrate').getValue();\r\n");
      out.write("\tif(rentorrate == 'rate'||rentorrate == 'handle_method'){\r\n");
      out.write("\t\t$('#testrent').hide();\r\n");
      out.write("\t\t$('#testrate').show();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$('#testrent').show();\r\n");
      out.write("\t\t$('#testrate').hide();\r\n");
      out.write("\t}\r\n");
      out.write("\tupdateInputThousand();\r\n");
      out.write("\t//calculateBeforeInterest('start');\r\n");
      out.write("\t//$('#calculateButton').show();这句会导致在只读页面还会显示测算按钮\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function beforeInterestButtonClick(e){\r\n");
      out.write("\tvar miniTable = mini.get('condition_beforeInterest');\r\n");
      out.write("\tvar yearRate = mini.get('yearrate').getValue();\r\n");
      out.write("\tvar startDate = mini.get('startdate').getFormValue();\r\n");
      out.write("\tvar fundChargeList =  miniTable.getData();\r\n");
      out.write("\tfor(var i = 0 ; i < fundChargeList.length ; i++){\r\n");
      out.write("\t\tvar fundCharge = fundChargeList[i];\r\n");
      out.write("\t\tvar betweenDays = Number(startDate.toDate('yyyy-MM-dd') - fundCharge.plandate.toDate('yyyy-MM-dd'))/(24 * 60 *60 *1000);\r\n");
      out.write("\t\tvar beforeInterestBranch = decimal(betweenDays/365*Number(fundCharge.factmoney)*Number(yearRate)/100,2); \r\n");
      out.write("\t\tfundCharge.datediff = betweenDays;\r\n");
      out.write("\t\tfundCharge.beforeinterestbranch = beforeInterestBranch\r\n");
      out.write("\t}\r\n");
      out.write("\tminiTable.setData(fundChargeList);\r\n");
      out.write("\tmini.get('beforeInterestContainer').show();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//刷新页面当中的所有的输入框的钱数为千分位\r\n");
      out.write("function updateInputThousand(){\r\n");
      out.write("\tvar fields = form.getFields();\r\n");
      out.write("\tfor(var index =0;index<fields.length;index++){\r\n");
      out.write("\t\t //判断是否是下拉框控件，是则同时把text属性设置combobox\r\n");
      out.write("\t\tif(fields[index].vtype == 'double'){\r\n");
      out.write("\t\t\tfields[index].setValue(formatNumberThousand(fields[index].getValue()));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
