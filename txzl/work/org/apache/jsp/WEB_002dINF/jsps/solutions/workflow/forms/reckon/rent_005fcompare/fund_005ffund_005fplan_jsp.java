/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2017-03-09 04:12:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.solutions.workflow.forms.reckon.rent_005fcompare;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fund_005ffund_005fplan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("jQuery(function(){\r\n");
      out.write("\tseajs.use([ \"js/apcomponent/aptable/aptable.js\" ], function(ApTable) {\r\n");
      out.write("\t\tnew ApTable({\r\n");
      out.write("\t\t\tid: \"fund_fund_charge_new\",\r\n");
      out.write("\t\t\trenderTo: \"id_fund_fund_plan_compare\",\r\n");
      out.write("\t\t\twidth: globalClientWidth - 30,\r\n");
      out.write("\t\t\theight: 360,\r\n");
      out.write("\t\t\tlazyLoad: false,\r\n");
      out.write("\t\t\tisClickLoad:false,\r\n");
      out.write("\t\t\tremoteOper : false,\r\n");
      out.write("\t\t\tshowPager: false,\r\n");
      out.write("\t\t\tmultiSelect: true,\r\n");
      out.write("\t\t\tdata: mini.decode('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty json_fund_fund_charge_new_str ? \"[]\" : json_fund_fund_charge_new_str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("'),\r\n");
      out.write("\t\t\tcolumns: [\r\n");
      out.write("\t\t\t\t{type:'indexcolumn'},\r\n");
      out.write("\t\t\t\t{type:'checkcolumn'},\r\n");
      out.write("\t\t\t\t{field:'id', header:'id', visible:false},\r\n");
      out.write("\t\t\t\t{field:'docid', header:'docid', visible:false},\t\r\n");
      out.write("\t\t\t\t{field:'contractid', header:'合同号',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}},\r\n");
      out.write("\t\t\t\t{field:'paymentid', header:'编号',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}},\r\n");
      out.write("\t\t\t\t{field:'plandate', header:'计划收款日期',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}},\r\n");
      out.write("\t\t\t\t{field:'planmoney', header:'金额',dataType :\"currency\",summary :true,align:'right',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}},\r\n");
      out.write("\t\t\t\t{field:'feetypename', header:'款项名称',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}},\r\n");
      out.write("\t\t\t\t{field:'paytype', header:'收付方向id', visible:false},\r\n");
      out.write("\t\t\t\t{field:'paytypename', header:'收付方向',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}},\r\n");
      out.write("\t\t\t\t\t\t            {field: 'payconditionname', header: '支付条件',visible: true,formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treadOnly:true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfieldVisible:false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tallowInput:false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfillFromFieldName:'paycondition',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfillProperty:'name'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{field: 'paycondition', header: '支付条件id',visible: false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype:'combobox',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tnewLine:true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttextField:'name',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvalueField:'value',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tallowInput:false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfieldVisible:true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tparams:{pid: 'pay_condition', xmlFileName:'combos/comboDict.xml'}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{field: 'whetherdeduct', header: '是否抵扣',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tformEditorConfig:\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype:'combobox',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\twidth: 200,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttextField:'name',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvalueField:'value',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata:[{name:'是',value:'是'},{name:'否',value:'否'}]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t            {field: 'paycust', header: '收付对象',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvisible: false,\r\n");
      out.write("\t\t\t\t\t\t\t\t       formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tnewLine:true,\r\n");
      out.write("\t\t\t\t\t\t\t                width: 200,\r\n");
      out.write("\t\t\t\t\t\t\t                type:'queryinput',\r\n");
      out.write("\t\t\t\t\t\t\t             \trequired: true,\r\n");
      out.write("\t\t\t\t\t\t\t            \ttextField: 'paycustname',\r\n");
      out.write("\t\t\t\t\t\t\t           \t\tvalueField: 'paycust',\r\n");
      out.write("\t\t\t\t\t\t\t           \t\tallowInput: false,\r\n");
      out.write("\t\t\t\t\t\t\t         \t\tfieldVisible: true,\r\n");
      out.write("\t\t\t\t\t\t\t             \t/* onSelect:function($me, queryInput, rowData){\r\n");
      out.write("\t\t\t\t\t\t\t\t                   mini.getbyName(\"paycustname\").setValue(rowData.paycustname);\r\n");
      out.write("\t\t\t\t\t\t\t\t                   mini.getbyName(\"paycust\").setValue(rowData.paycust);\r\n");
      out.write("\t\t\t\t\t\t\t\t            }, */\r\n");
      out.write("\t\t\t\t\t\t\t               \tparams: {xmlFileName: '/eleasing/workflow/rent/rent_cal/fund_fund_pay_obj.xml'}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{field: 'paycustname', header: '收付对象',visible: true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tformEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t\t\t  \t\t\tfieldVisible:false \r\n");
      out.write("\t\t\t\t\t\t\t             }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t{field:'fpnote', header:'备注',\r\n");
      out.write("\t\t\t\t\t     formEditorConfig:{\r\n");
      out.write("\t\t\t\t\t\t         required:true,\r\n");
      out.write("\t\t\t\t\t\t       labelWidth:100,\r\n");
      out.write("\t\t\t\t\t\t            width:200}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"id_fund_fund_plan_compare\"></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
